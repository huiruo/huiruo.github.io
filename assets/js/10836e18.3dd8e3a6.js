"use strict";(self.webpackChunkprogramming_technology=self.webpackChunkprogramming_technology||[]).push([[9118],{3905:(e,r,n)=>{n.d(r,{Zo:()=>u,kt:()=>y});var t=n(67294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=t.createContext({}),c=function(e){var r=t.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):l(l({},r),e)),n},u=function(e){var r=c(e.components);return t.createElement(s.Provider,{value:r},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},f=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),f=o,y=p["".concat(s,".").concat(f)]||p[f]||m[f]||a;return n?t.createElement(y,l(l({ref:r},u),{},{components:n})):t.createElement(y,l({ref:r},u))}));function y(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=f;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i[p]="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=n[c];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}f.displayName="MDXCreateElement"},89308:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var t=n(87462),o=(n(67294),n(3905));const a={},l=void 0,i={unversionedId:"JavaScript/A-1-array\u65b9\u6cd5/\u5176\u4ed6-ECMAScript 6\u548c\u6570\u7ec4\u7684\u65b0\u529f\u80fd",id:"JavaScript/A-1-array\u65b9\u6cd5/\u5176\u4ed6-ECMAScript 6\u548c\u6570\u7ec4\u7684\u65b0\u529f\u80fd",title:"\u5176\u4ed6-ECMAScript 6\u548c\u6570\u7ec4\u7684\u65b0\u529f\u80fd",description:"",source:"@site/programming-tech/JavaScript/A-1-array\u65b9\u6cd5/\u5176\u4ed6-ECMAScript 6\u548c\u6570\u7ec4\u7684\u65b0\u529f\u80fd.md",sourceDirName:"JavaScript/A-1-array\u65b9\u6cd5",slug:"/JavaScript/A-1-array\u65b9\u6cd5/\u5176\u4ed6-ECMAScript 6\u548c\u6570\u7ec4\u7684\u65b0\u529f\u80fd",permalink:"/JavaScript/A-1-array\u65b9\u6cd5/\u5176\u4ed6-ECMAScript 6\u548c\u6570\u7ec4\u7684\u65b0\u529f\u80fd",draft:!1,editUrl:"https://github.com/huiruo/programming-tech-website/programming-tech/JavaScript/A-1-array\u65b9\u6cd5/\u5176\u4ed6-ECMAScript 6\u548c\u6570\u7ec4\u7684\u65b0\u529f\u80fd.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"14-2-every-\u6240\u6709\u6ee1\u8db3\u5219\u8fd4\u56detrue",permalink:"/JavaScript/A-1-array\u65b9\u6cd5/14-2-every-\u6240\u6709\u6ee1\u8db3\u5219\u8fd4\u56detrue"},next:{title:"\u5e94\u75281-\u53bb\u91cd",permalink:"/JavaScript/A-1-array\u65b9\u6cd5/\u5e94\u75281-\u53bb\u91cd"}},s={},c=[],u={toc:c},p="wrapper";function m(e){let{components:r,...n}=e;return(0,o.kt)(p,(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n\n// \u65b9\u6cd5                \u63cf\u8ff0\n// \u65b9\u6cd51.@@iterator\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u6570\u7ec4\u952e\u503c\u5bf9\u7684\u8fed\u4ee3\u5668\u5bf9\u8c61\uff0c\u53ef\u4ee5\u901a\u8fc7\u540c\u6b65\u8c03\u7528\u5f97\u5230\u6570\u7ec4\u5143\u7d20\u7684\u952e\u503c\u5bf9\n// \u9700\u8981\u901a\u8fc7Symbol.iterator \u6765\u8bbf\u95ee\nlet iterator = numbers[Symbol.iterator]();\nconsole.log('iterator.next().value', iterator.next().value); // 1\nconsole.log('iterator.next().value', iterator.next().value); // 2\nconsole.log('iterator.next().value', iterator.next().value); // 3\nconsole.log('iterator.next().value', iterator.next().value); // 4\nconsole.log('iterator.next().value', iterator.next().value); // 5\n\n// \u65b9\u6cd52.copyWithin\u590d\u5236\u6570\u7ec4\u4e2d\u4e00\u7cfb\u5217\u5143\u7d20\u5230\u540c\u4e00\u6570\u7ec4\u6307\u5b9a\u7684\u8d77\u59cb\u4f4d\u7f6e\n\n// \u65b9\u6cd53.entries\u8fd4\u56de\u5305\u542b\u6570\u7ec4\u6240\u6709\u952e\u503c\u5bf9\u7684@@iterator\nlet aEntries = numbers.entries(); // retrieve iterator of key/value\nconsole.log('aEntries.next().value', aEntries.next().value); // [0, 1] - position 0, value 1\nconsole.log('aEntries.next().value', aEntries.next().value); // [1, 2] - position 1, value 2\nconsole.log('aEntries.next().value', aEntries.next().value); // [2, 3] - position 2, value 3\n// or use code below\naEntries = numbers.entries();\nfor (const n of aEntries) {\n    console.log(`entry of ${n}`, n);\n}\n\n// \u65b9\u6cd54.includes\u5982\u679c\u6570\u7ec4\u4e2d\u5b58\u5728\u67d0\u4e2a\u5143\u7d20\u5219\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\u3002E2016\u65b0\u589e\n\n\n// \u65b9\u6cd55.find\u6839\u636e\u56de\u8c03\u51fd\u6570\u7ed9\u5b9a\u7684\u6761\u4ef6\u4ece\u6570\u7ec4\u4e2d\u67e5\u627e\u5143\u7d20\uff0c\u5982\u679c\u627e\u5230\u5219----------\x3e\u8fd4\u56de\u8be5\u5143\u7d20\nconst numbers2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nfunction multipleOf13(element) {\n    return element % 13 === 0;\n}\nconsole.log('numbers.find(multipleOf13)', numbers2.find(multipleOf13));\n\n// \u65b9\u6cd56.findIndex\u6839\u636e\u56de\u8c03\u51fd\u6570\u7ed9\u5b9a\u7684\u6761\u4ef6\u4ece\u6570\u7ec4\u4e2d\u67e5\u627e\u5143\u7d20\uff0c\u5982\u679c\u627e\u5230\u5219-------------\x3e\u8fd4\u56de\u8be5\u5143\u7d20\u5728\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15\nconsole.log('numbers.findIndex(multipleOf13)', numbers2.findIndex(multipleOf13));\n\n// \u65b9\u6cd57.fill\u7528\u9759\u6001\u503c\u586b\u5145\u6570\u7ec4\n\n// \u65b9\u6cd58.from\u6839\u636e\u5df2\u6709\u6570\u7ec4\u521b\u5efa\u4e00\u4e2a\u65b0\u6570\u7ec4\n// Array.from\u65b9\u6cd5\u6839\u636e\u5df2\u6709\u7684\u6570\u7ec4\u521b\u5efa\u4e00\u4e2a\u65b0\u6570\u7ec4\u3002\u6bd4\u5982\uff0c\u8981\u590d\u5236(\u6d45\u62f7\u8d1d)numbers\u6570\u7ec4\uff0c\u53ef\u4ee5\u5982\u4e0b\u8fd9\u6837\u505a\u3002\nconsole.log('Array.from(numbers)', Array.from(numbers2));\n// \u8fd8\u53ef\u4ee5\u4f20\u8fc7\u6ee4\u7684\u51fd\u6570\nconst numbers3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nconst evens = Array.from(numbers3, x => x % 2 === 0);\nconsole.log('Array.from(numbers, x => x % 2 === 0)', evens);\n\n\n// \u65b9\u6cd59.keys\u8fd4\u56de\u5305\u542b\u6570\u7ec4\u6240\u6709\u7d22\u5f15\u7684@@iterator\nconst numbers4 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nconst aKeys = numbers4.keys(); // retrieve iterator of keys\nconsole.log(\"keys\", aKeys)\nconsole.log('aKeys.next()', aKeys.next()); // {value: 0, done: false } done false means iterator has more values\nconsole.log('aKeys.next()', aKeys.next()); // {value: 1, done: false }\nconsole.log('aKeys.next()', aKeys.next()); // {value: 2, done: false }\n\n// \u65b9\u6cd510.of\u6839\u636e\u4f20\u5165\u7684\u53c2\u6570\u521b\u5efa\u4e00\u4e2a\u65b0\u6570\u7ec4\n/*\n\u521b\u5efa\u4e00\u4e2a\u53ef\u53d8\u6570\u91cf\u53c2\u6570\u7684\u65b0\u6570\u7ec4\uff0c\u800c\u4e0d\u8003\u8651\u53c2\u6570\u7684\u7c7b\u578b\u548c\u6570\u91cf;\nArray.of()\u548cArray\u6784\u9020\u51fd\u6570\u7684\u533a\u522b\uff1a\u5728\u4e8e\u5904\u7406\u6574\u6570\u53c2\u6570;\nvar arr1 = Array(10)\nconsole.log(arr1); // [empty \xd7 10] \u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a10\u7684\u7a7a\u6570\u7ec4\nvar arr2 = Array.of(10)\nconsole.log(arr2); // [10] \u662f\u4e00\u4e2a\u6709\u5355\u4e2a\u5143\u7d2010\u7684\u6570\u7ec4\uff0c\u5b83\u7684\u957f\u5ea6\u4e3a1\n* */\nconst numbers3A = Array.of(1);\nconst numbers4A = Array.of(1, 2, 3, 4, 5, 6);\nconst numbersCopy = Array.of(...numbers4A);\nconsole.log('Array.of(1)', numbers3A);\nconsole.log('Array.of(1, 2, 3, 4, 5, 6)', numbers4A);\nconsole.log('Array.of(...numbers4)', numbersCopy);\n")))}m.isMDXComponent=!0}}]);
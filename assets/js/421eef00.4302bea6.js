"use strict";(self.webpackChunkprogramming_technology=self.webpackChunkprogramming_technology||[]).push([[3327],{3905:(n,e,t)=>{t.d(e,{Zo:()=>s,kt:()=>f});var r=t(67294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function c(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var p=r.createContext({}),i=function(n){var e=r.useContext(p),t=e;return n&&(t="function"==typeof n?n(e):c(c({},e),n)),t},s=function(n){var e=i(n.components);return r.createElement(p.Provider,{value:e},n.children)},u="mdxType",m={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,o=n.originalType,p=n.parentName,s=l(n,["components","mdxType","originalType","parentName"]),u=i(t),d=a,f=u["".concat(p,".").concat(d)]||u[d]||m[d]||o;return t?r.createElement(f,c(c({ref:e},s),{},{components:t})):r.createElement(f,c({ref:e},s))}));function f(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var o=t.length,c=new Array(o);c[0]=d;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=n,l[u]="string"==typeof n?n:a,c[1]=l;for(var i=2;i<o;i++)c[i]=t[i];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},36431:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>i});var r=t(87462),a=(t(67294),t(3905));const o={},c="\u6a21\u677f",l={unversionedId:"C++-V8/C++/\u6a21\u677f-\u6cdb\u578b",id:"C++-V8/C++/\u6a21\u677f-\u6cdb\u578b",title:"\u6a21\u677f",description:"\u6a21\u677f\u662f\u521b\u5efa\u6cdb\u578b\u7c7b\u6216\u51fd\u6570\u7684\u84dd\u56fe\u6216\u516c\u5f0f\u3002",source:"@site/programming-tech/C++-V8/C++/15-\u6a21\u677f-\u6cdb\u578b.md",sourceDirName:"C++-V8/C++",slug:"/C++-V8/C++/\u6a21\u677f-\u6cdb\u578b",permalink:"/C++-V8/C++/\u6a21\u677f-\u6cdb\u578b",draft:!1,editUrl:"https://github.com/huiruo/programming-tech-website/programming-tech/C++-V8/C++/15-\u6a21\u677f-\u6cdb\u578b.md",tags:[],version:"current",sidebarPosition:15,frontMatter:{},sidebar:"docs",previous:{title:"\u547d\u540d\u7a7a\u95f4",permalink:"/C++-V8/C++/\u547d\u540d\u7a7a\u95f4"},next:{title:"\u9884\u5904\u7406\u5668",permalink:"/C++-V8/C++/\u9884\u5904\u7406\u5668"}},p={},i=[{value:"\u51fd\u6570\u6a21\u677f",id:"\u51fd\u6570\u6a21\u677f",level:2},{value:"\u7c7b\u6a21\u677f",id:"\u7c7b\u6a21\u677f",level:2}],s={toc:i},u="wrapper";function m(n){let{components:e,...t}=n;return(0,a.kt)(u,(0,r.Z)({},s,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u6a21\u677f"},"\u6a21\u677f"),(0,a.kt)("p",null,"\u6a21\u677f\u662f\u521b\u5efa\u6cdb\u578b\u7c7b\u6216\u51fd\u6570\u7684\u84dd\u56fe\u6216\u516c\u5f0f\u3002"),(0,a.kt)("p",null,"\u6bcf\u4e2a\u5bb9\u5668\u90fd\u6709\u4e00\u4e2a\u5355\u4e00\u7684\u5b9a\u4e49\uff0c\u6bd4\u5982 \u5411\u91cf\uff0c\u53ef\u4ee5\u5b9a\u4e49\u8bb8\u591a\u4e0d\u540c\u7c7b\u578b\u7684\u5411\u91cf\uff0c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u6bd4\u5982 vector <int> \u6216 vector <string>\u3002\n")),(0,a.kt)("h2",{id:"\u51fd\u6570\u6a21\u677f"},"\u51fd\u6570\u6a21\u677f"),(0,a.kt)("p",null,"type \u662f\u51fd\u6570\u6240\u4f7f\u7528\u7684\u6570\u636e\u7c7b\u578b\u7684\u5360\u4f4d\u7b26\u540d\u79f0\u3002\u8fd9\u4e2a\u540d\u79f0\u53ef\u4ee5\u5728\u51fd\u6570\u5b9a\u4e49\u4e2d\u4f7f\u7528\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"template <typename type> ret-type func-name(parameter list)\n{\n   // \u51fd\u6570\u7684\u4e3b\u4f53\n}\n")),(0,a.kt)("p",null,"\u4e0b\u9762\u662f\u51fd\u6570\u6a21\u677f\u7684\u5b9e\u4f8b\uff0c\u8fd4\u56de\u4e24\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u503c\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\n#include <string>\n \nusing namespace std;\n \ntemplate <typename T>\ninline T const& Max (T const& a, T const& b) \n{ \n    return a < b ? b:a; \n} \nint main ()\n{\n \n    int i = 39;\n    int j = 20;\n    cout << "Max(i, j): " << Max(i, j) << endl; \n \n    double f1 = 13.5; \n    double f2 = 20.7; \n    cout << "Max(f1, f2): " << Max(f1, f2) << endl; \n \n    string s1 = "Hello"; \n    string s2 = "World"; \n    cout << "Max(s1, s2): " << Max(s1, s2) << endl; \n \n    return 0;\n}\n/*\nMax(i, j): 39\nMax(f1, f2): 20.7\nMax(s1, s2): World\n*/\n')),(0,a.kt)("h2",{id:"\u7c7b\u6a21\u677f"},"\u7c7b\u6a21\u677f"),(0,a.kt)("p",null,"type \u662f\u5360\u4f4d\u7b26\u7c7b\u578b\u540d\u79f0\uff0c\u53ef\u4ee5\u5728\u7c7b\u88ab\u5b9e\u4f8b\u5316\u7684\u65f6\u5019\u8fdb\u884c\u6307\u5b9a\u3002\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u9017\u53f7\u5206\u9694\u7684\u5217\u8868\u6765\u5b9a\u4e49\u591a\u4e2a\u6cdb\u578b\u6570\u636e\u7c7b\u578b\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"template <class type> class class-name {\n}\n")),(0,a.kt)("p",null,"\u4e0b\u9762\u7684\u5b9e\u4f8b\u5b9a\u4e49\u4e86\u7c7b",(0,a.kt)("inlineCode",{parentName:"p"},"Stack<>"),"\uff0c\u5e76\u5b9e\u73b0\u4e86\u6cdb\u578b\u65b9\u6cd5\u6765\u5bf9\u5143\u7d20\u8fdb\u884c\u5165\u6808\u51fa\u6808\u64cd\u4f5c\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\n#include <vector>\n#include <cstdlib>\n#include <string>\n#include <stdexcept>\n \nusing namespace std;\n \ntemplate <class T>\nclass Stack { \n  private: \n    vector<T> elems;     // \u5143\u7d20 \n \n  public: \n    void push(T const&);  // \u5165\u6808\n    void pop();               // \u51fa\u6808\n    T top() const;            // \u8fd4\u56de\u6808\u9876\u5143\u7d20\n    bool empty() const{       // \u5982\u679c\u4e3a\u7a7a\u5219\u8fd4\u56de\u771f\u3002\n        return elems.empty(); \n    } \n}; \n \ntemplate <class T>\nvoid Stack<T>::push (T const& elem) \n{ \n    // \u8ffd\u52a0\u4f20\u5165\u5143\u7d20\u7684\u526f\u672c\n    elems.push_back(elem);    \n} \n \ntemplate <class T>\nvoid Stack<T>::pop () \n{ \n    if (elems.empty()) { \n        throw out_of_range("Stack<>::pop(): empty stack"); \n    }\n    // \u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20\n    elems.pop_back();         \n} \n \ntemplate <class T>\nT Stack<T>::top () const \n{ \n    if (elems.empty()) { \n        throw out_of_range("Stack<>::top(): empty stack"); \n    }\n    // \u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u526f\u672c \n    return elems.back();      \n} \n \nint main() \n{ \n    try { \n        Stack<int>         intStack;  // int \u7c7b\u578b\u7684\u6808 \n        Stack<string> stringStack;    // string \u7c7b\u578b\u7684\u6808 \n \n        // \u64cd\u4f5c int \u7c7b\u578b\u7684\u6808 \n        intStack.push(7); \n        cout << intStack.top() <<endl; \n \n        // \u64cd\u4f5c string \u7c7b\u578b\u7684\u6808 \n        stringStack.push("hello"); \n        cout << stringStack.top() << std::endl; \n        stringStack.pop(); \n        stringStack.pop(); \n    } \n    catch (exception const& ex) { \n        cerr << "Exception: " << ex.what() <<endl; \n        return -1;\n    } \n}\n/*\n7\nhello\nException: Stack<>::pop(): empty stack\n*/\n')))}m.isMDXComponent=!0}}]);
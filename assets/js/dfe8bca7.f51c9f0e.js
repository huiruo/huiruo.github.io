"use strict";(self.webpackChunkprogramming_technology=self.webpackChunkprogramming_technology||[]).push([[365],{3905:(n,e,t)=>{t.d(e,{Zo:()=>p,kt:()=>f});var r=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function d(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var c=r.createContext({}),l=function(n){var e=r.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},p=function(n){var e=l(n.components);return r.createElement(c.Provider,{value:e},n.children)},u="mdxType",s={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,a=n.originalType,c=n.parentName,p=d(n,["components","mdxType","originalType","parentName"]),u=l(t),m=i,f=u["".concat(c,".").concat(m)]||u[m]||s[m]||a;return t?r.createElement(f,o(o({ref:e},p),{},{components:t})):r.createElement(f,o({ref:e},p))}));function f(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var a=t.length,o=new Array(a);o[0]=m;var d={};for(var c in e)hasOwnProperty.call(e,c)&&(d[c]=e[c]);d.originalType=n,d[u]="string"==typeof n?n:i,o[1]=d;for(var l=2;l<a;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},63103:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>s,frontMatter:()=>a,metadata:()=>d,toc:()=>l});var r=t(87462),i=(t(67294),t(3905));const a={},o=void 0,d={unversionedId:"qu/\u9012\u5f52/\u9012\u5f52-array\u8f6c\u6811",id:"qu/\u9012\u5f52/\u9012\u5f52-array\u8f6c\u6811",title:"\u9012\u5f52-array\u8f6c\u6811",description:"\u7b80\u5355",source:"@site/programming-tech/qu/07-\u9012\u5f52/01-\u9012\u5f52-array\u8f6c\u6811.md",sourceDirName:"qu/07-\u9012\u5f52",slug:"/qu/\u9012\u5f52/\u9012\u5f52-array\u8f6c\u6811",permalink:"/qu/\u9012\u5f52/\u9012\u5f52-array\u8f6c\u6811",draft:!1,editUrl:"https://github.com/huiruo/programming-tech-website/edit/main/programming-tech/qu/07-\u9012\u5f52/01-\u9012\u5f52-array\u8f6c\u6811.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{}},c={},l=[{value:"\u7b80\u5355",id:"\u7b80\u5355",level:2},{value:"array \u8f6c\u6811",id:"array-\u8f6c\u6811",level:2},{value:"\u65b9\u5f0f 1",id:"\u65b9\u5f0f-1",level:3},{value:"\u65b9\u5f0f 2-\u6dfb\u52a0\u5230\u54c8\u5e0c\u8868\u4e2d",id:"\u65b9\u5f0f-2-\u6dfb\u52a0\u5230\u54c8\u5e0c\u8868\u4e2d",level:3},{value:"\u65b9\u5f0f 3",id:"\u65b9\u5f0f-3",level:3},{value:"\u54c8\u5e0c\u8868\u6cd5",id:"\u54c8\u5e0c\u8868\u6cd5",level:3}],p={toc:l},u="wrapper";function s(n){let{components:e,...t}=n;return(0,i.kt)(u,(0,r.Z)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"\u7b80\u5355"},"\u7b80\u5355"),(0,i.kt)("p",null,"\u9012\u5f52\u5b9e\u73b0\u4f1a\u6709\u6027\u80fd\u95ee\u9898\uff0c\u5f53 n \u6bd4\u8f83\u5927\u65f6\uff0c\u9012\u5f52\u4f1a\u5bfc\u81f4\u5927\u91cf\u7684\u51fd\u6570\u8c03\u7528\uff0c\u4ece\u800c\u589e\u52a0\u4e86\u8ba1\u7b97\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5efa\u8bae\u4f7f\u7528\u8fed\u4ee3\u7684\u65b9\u5f0f\u6765\u8ba1\u7b97\u6590\u6ce2\u90a3\u5951\u6570\u5217\u524d n \u9879\u548c\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"function fibonacciSum(n) {\n  if (n <= 1) {\n    return n;\n  } else {\n    return fibonacciSum(n - 1) + fibonacciSum(n - 2) + 1;\n  }\n}\n\nfibonacciSum(10); // 143\n")),(0,i.kt)("h2",{id:"array-\u8f6c\u6811"},"array \u8f6c\u6811"),(0,i.kt)("h3",{id:"\u65b9\u5f0f-1"},"\u65b9\u5f0f 1"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'function buildTree(arr, parentId) {\n  let result = [];\n  for (let item of arr.filter((item) => item.p_id === parentId)) {\n    let children = buildTree(arr, item.id);\n    if (children.length) {\n      item.children = children;\n    }\n    result.push(item);\n  }\n  return result;\n}\n\nlet arr = [\n  { id: 1, p_id: 0, name: "\u9996\u9875" },\n  { id: 2, p_id: 0, name: "\u83dc\u5355\u7ba1\u7406" },\n  { id: 3, p_id: 0, name: "\u83dc\u5355\u5217\u8868" },\n  { id: 4, p_id: 1, name: "\u6743\u9650\u7ba1\u7406" },\n  { id: 5, p_id: 6, name: "\u7ba1\u7406\u5458\u5217\u8868" },\n  { id: 6, p_id: 4, name: "\u89d2\u8272\u5217\u8868" },\n];\n\nlet tree = buildTree(arr, 0);\n\nconsole.log(JSON.stringify(tree, null, 2));\n')),(0,i.kt)("h3",{id:"\u65b9\u5f0f-2-\u6dfb\u52a0\u5230\u54c8\u5e0c\u8868\u4e2d"},"\u65b9\u5f0f 2-\u6dfb\u52a0\u5230\u54c8\u5e0c\u8868\u4e2d"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'function buildTree(nodes) {\n  const nodeMap = {}; // \u54c8\u5e0c\u8868\u7528\u4e8e\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7684\u5f15\u7528\n\n  // \u5c06\u6bcf\u4e2a\u8282\u70b9\u6dfb\u52a0\u5230\u54c8\u5e0c\u8868\u4e2d\uff0c\u5e76\u7528\u4e00\u4e2a\u65b0\u7684 children \u5c5e\u6027\u6765\u5b58\u50a8\u5176\u5b50\u8282\u70b9\n  nodes.forEach((node) => {\n    node.children = [];\n    nodeMap[node.id] = node;\n  });\n\n  const tree = [];\n\n  // \u904d\u5386\u8282\u70b9\uff0c\u5c06\u6bcf\u4e2a\u8282\u70b9\u6dfb\u52a0\u5230\u5176\u7236\u8282\u70b9\u7684 children \u6570\u7ec4\u4e2d\n  nodes.forEach((node) => {\n    if (node.p_id === 0) {\n      // \u6839\u8282\u70b9\n      tree.push(node);\n    } else {\n      const parent = nodeMap[node.p_id];\n      if (parent) {\n        parent.children.push(node);\n      }\n    }\n  });\n\n  return tree;\n}\n\nconst nodes = [\n  { id: 1, p_id: 0, name: "\u9996\u9875" },\n  { id: 2, p_id: 0, name: "\u83dc\u5355\u7ba1\u7406" },\n  { id: 3, p_id: 0, name: "\u83dc\u5355\u5217\u8868" },\n  { id: 4, p_id: 1, name: "\u6743\u9650\u7ba1\u7406" },\n  { id: 5, p_id: 6, name: "\u7ba1\u7406\u5458\u5217\u8868" },\n  { id: 6, p_id: 4, name: "\u89d2\u8272\u5217\u8868" },\n];\n\nconst tree = buildTree(nodes);\nconsole.log(tree);\n')),(0,i.kt)("h3",{id:"\u65b9\u5f0f-3"},"\u65b9\u5f0f 3"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'function getTree(data) {\n  var newData = [],\n    hash = {};\n  for (var i = 0; i < data.length; i++) {\n    if (!hash[data[i].province]) {\n      hash[data[i].province] = {\n        province: data[i].province,\n      };\n      hash[data[i].province]["city"] = [\n        {\n          name: data[i].city,\n          code: data[i].code,\n        },\n      ];\n      newData.push(hash[data[i].province]);\n    } else if (hash[data[i].province].province == data[i].province) {\n      hash[data[i].province]["city"].push({\n        name: data[i].city,\n        code: data[i].code,\n      });\n    }\n  }\n  return newData;\n}\n\nvar data = [\n  {\n    province: "\u6d59\u6c5f",\n    city: "\u6e29\u5dde",\n    code: "10010",\n  },\n  {\n    province: "\u6d59\u6c5f",\n    city: "\u676d\u5dde",\n    code: "10011",\n  },\n  {\n    province: "\u5b89\u5fbd",\n    city: "\u5408\u80a5",\n    code: "10012",\n  },\n  {\n    province: "\u5b89\u5fbd",\n    city: "\u9a6c\u978d\u5c71",\n    code: "10013",\n  },\n  {\n    province: "\u6d59\u6c5f",\n    city: "\u5b81\u6ce2",\n    code: "10014",\n  },\n];\n\nconsole.log(getTree(data));\n')),(0,i.kt)("h3",{id:"\u54c8\u5e0c\u8868\u6cd5"},"\u54c8\u5e0c\u8868\u6cd5"),(0,i.kt)("p",null,"\u6709\u4e00\u79cd\u65f6\u95f4\u590d\u6742\u5ea6\u66f4\u4f18\u7684\u7b97\u6cd5\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u79f0\u4e3a\u201c\u54c8\u5e0c\u8868\u6cd5\u201d\uff0c\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$\u3002"),(0,i.kt)("p",null,"\u5177\u4f53\u5b9e\u73b0\u65b9\u6cd5\u662f\uff1a"),(0,i.kt)("p",null,"1.\u904d\u5386\u6570\u7ec4\uff0c\u4ee5\u6bcf\u4e2a\u8282\u70b9\u7684 id \u4e3a\u952e\uff0c\u5c06\u8282\u70b9\u5b58\u50a8\u5728\u4e00\u4e2a\u54c8\u5e0c\u8868\u4e2d\uff1b\n2.\u518d\u6b21\u904d\u5386\u6570\u7ec4\uff0c\u4ee5\u6bcf\u4e2a\u8282\u70b9\u7684 pid \u4e3a\u952e\uff0c\u5728\u54c8\u5e0c\u8868\u4e2d\u67e5\u627e\u5bf9\u5e94\u7684\u7236\u8282\u70b9\uff0c\u5c06\u8282\u70b9\u6dfb\u52a0\u5230\u7236\u8282\u70b9\u7684 children \u6570\u7ec4\u4e2d\u3002"),(0,i.kt)("p",null,"\u8fd9\u79cd\u65b9\u6cd5\u7684\u4f18\u70b9\u662f\uff0c\u5728\u7b2c\u4e8c\u6b21\u904d\u5386\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\u8868\u5feb\u901f\u627e\u5230\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\uff0c\u800c\u4e0d\u9700\u8981\u6bcf\u6b21\u90fd\u904d\u5386\u6574\u4e2a\u6570\u7ec4\u3002\u8fd9\u6837\u53ef\u4ee5\u5c06\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4ece $O(n^2)$ \u964d\u4f4e\u5230 $O(n)$\u3002"),(0,i.kt)("p",null,"\u4f7f\u7528\u65f6\u95f4\u590d\u6742\u5ea6\u66f4\u5c0f\u7684\u7b97\u6cd5\u9700\u8981\u6539\u53d8\u6570\u636e\u7ed3\u6784\u7684\u5f62\u5f0f\uff0c\u5c06\u6bcf\u4e2a\u8282\u70b9\u5b58\u50a8\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\n\u5e76\u4e14\u7528\u4e00\u4e2a Map \u6765\u4fdd\u5b58\u8282\u70b9\u7684 id \u548c\u5bf9\u8c61\u7684\u6620\u5c04\u5173\u7cfb\u3002\n\u8fd9\u6837\uff0c\u5728\u904d\u5386\u6570\u7ec4\u7684\u540c\u65f6\uff0c\u53ef\u4ee5\u5feb\u901f\u627e\u5230\u8282\u70b9\u7684\u7236\u8282\u70b9\uff0c\n\u4ece\u800c\u5c06\u8282\u70b9\u6dfb\u52a0\u5230\u76f8\u5e94\u7684\u7236\u8282\u70b9\u7684 children \u5c5e\u6027\u4e2d\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u53ef\u80fd\u7684\u5b9e\u73b0\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"function buildTree(data) {\n  const map = new Map();\n  const tree = [];\n\n  // \u5c06\u6bcf\u4e2a\u8282\u70b9\u5b58\u50a8\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5e76\u7528 Map \u6765\u4fdd\u5b58\u8282\u70b9\u7684 id \u548c\u5bf9\u8c61\u7684\u6620\u5c04\u5173\u7cfb\n  for (const item of data) {\n    map.set(item.id, { ...item, children: [] });\n  }\n\n  // \u904d\u5386\u6570\u7ec4\uff0c\u5c06\u6bcf\u4e2a\u8282\u70b9\u6dfb\u52a0\u5230\u76f8\u5e94\u7684\u7236\u8282\u70b9\u7684 children \u5c5e\u6027\u4e2d\n  for (const item of data) {\n    const node = map.get(item.id);\n    const parent = map.get(item.pid);\n    if (parent) {\n      parent.children.push(node);\n    } else {\n      tree.push(node);\n    }\n  }\n\n  return tree;\n}\n\n// \u793a\u4f8b\u6570\u636e\nconst data = [\n  { id: 7, pid: 7, title: 'test7-pid-7' },\n  { id: 1, pid: 0, title: 'test1-pid-0' },\n  { id: 2, pid: 1, title: 'test2-pid-1' },\n  { id: 3, pid: 1, title: 'test3-pid-1' },\n  { id: 4, pid: 2, title: 'test4-pid-2' },\n  { id: 5, pid: 2, title: 'test5-pid-2' },\n  { id: 6, pid: 3, title: 'test6-pid-5' },\n];\n\n// \u8f6c\u6362\u4e3a\u6811\u5f62\u7ed3\u6784\u6570\u7ec4\nconst tree = buildTree(data);\n\nconsole.log(tree);\n")))}s.isMDXComponent=!0}}]);
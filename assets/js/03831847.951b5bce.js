"use strict";(self.webpackChunkprogramming_technology=self.webpackChunkprogramming_technology||[]).push([[5383],{3905:(e,n,r)=>{r.d(n,{Zo:()=>p,kt:()=>h});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var d=t.createContext({}),l=function(e){var n=t.useContext(d),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},p=function(e){var n=l(e.components);return t.createElement(d.Provider,{value:n},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(r),m=a,h=u["".concat(d,".").concat(m)]||u[m]||s[m]||i;return r?t.createElement(h,o(o({ref:n},p),{},{components:r})):t.createElement(h,o({ref:n},p))}));function h(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var c={};for(var d in n)hasOwnProperty.call(n,d)&&(c[d]=n[d]);c.originalType=e,c[u]="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=r[l];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},65266:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>s,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var t=r(87462),a=(r(67294),r(3905));const i={},o=void 0,c={unversionedId:"structure-algorithm/\u9012\u5f52/array\u8f6c\u6811",id:"structure-algorithm/\u9012\u5f52/array\u8f6c\u6811",title:"array\u8f6c\u6811",description:"\u65b9\u5f0f1",source:"@site/programming-tech/structure-algorithm/07-\u9012\u5f52/02-array\u8f6c\u6811.md",sourceDirName:"structure-algorithm/07-\u9012\u5f52",slug:"/structure-algorithm/\u9012\u5f52/array\u8f6c\u6811",permalink:"/structure-algorithm/\u9012\u5f52/array\u8f6c\u6811",draft:!1,editUrl:"https://github.com/huiruo/programming-tech-website/programming-tech/structure-algorithm/07-\u9012\u5f52/02-array\u8f6c\u6811.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"structureAlgorithm",previous:{title:"\u9012\u5f52\u4f8b\u5b50",permalink:"/structure-algorithm/\u9012\u5f52/\u9012\u5f52\u4f8b\u5b50"},next:{title:"\u6811\u8f6carray",permalink:"/structure-algorithm/\u9012\u5f52/\u6811\u8f6carray"}},d={},l=[{value:"\u65b9\u5f0f1",id:"\u65b9\u5f0f1",level:2},{value:"\u65b9\u5f0f2",id:"\u65b9\u5f0f2",level:2},{value:"\u65b9\u5f0f3",id:"\u65b9\u5f0f3",level:2}],p={toc:l},u="wrapper";function s(e){let{components:n,...r}=e;return(0,a.kt)(u,(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"\u65b9\u5f0f1"},"\u65b9\u5f0f1"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"function buildTree(arr, parentId) {\n  let result = [];\n  for (let item of arr.filter(item => item.p_id === parentId)) {\n    let children = buildTree(arr, item.id);\n    if (children.length) {\n      item.children = children;\n    }\n    result.push(item);\n  }\n  return result;\n}\n\nlet arr = [\n  { id: 1, p_id: 0, name: '\u9996\u9875' },\n  { id: 2, p_id: 0, name: '\u83dc\u5355\u7ba1\u7406' },\n  { id: 3, p_id: 0, name: '\u83dc\u5355\u5217\u8868' },\n  { id: 4, p_id: 1, name: '\u6743\u9650\u7ba1\u7406' },\n  { id: 5, p_id: 6, name: '\u7ba1\u7406\u5458\u5217\u8868' },\n  { id: 6, p_id: 4, name: '\u89d2\u8272\u5217\u8868' }\n];\n\nlet tree = buildTree(arr, 0);\n\nconsole.log(JSON.stringify(tree, null, 2));\n")),(0,a.kt)("h2",{id:"\u65b9\u5f0f2"},"\u65b9\u5f0f2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"function buildTree(nodes) {\n  const nodeMap = {}; // \u54c8\u5e0c\u8868\u7528\u4e8e\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7684\u5f15\u7528\n\n  // \u5c06\u6bcf\u4e2a\u8282\u70b9\u6dfb\u52a0\u5230\u54c8\u5e0c\u8868\u4e2d\uff0c\u5e76\u7528\u4e00\u4e2a\u65b0\u7684 children \u5c5e\u6027\u6765\u5b58\u50a8\u5176\u5b50\u8282\u70b9\n  nodes.forEach(node => {\n    node.children = [];\n    nodeMap[node.id] = node;\n  });\n\n  const tree = [];\n\n  // \u904d\u5386\u8282\u70b9\uff0c\u5c06\u6bcf\u4e2a\u8282\u70b9\u6dfb\u52a0\u5230\u5176\u7236\u8282\u70b9\u7684 children \u6570\u7ec4\u4e2d\n  nodes.forEach(node => {\n    if (node.p_id === 0) { // \u6839\u8282\u70b9\n      tree.push(node);\n    } else {\n      const parent = nodeMap[node.p_id];\n      if (parent) {\n        parent.children.push(node);\n      }\n    }\n  });\n\n  return tree;\n}\n\nconst nodes = [\n  { id: 1, p_id: 0, name: '\u9996\u9875' },\n  { id: 2, p_id: 0, name: '\u83dc\u5355\u7ba1\u7406' },\n  { id: 3, p_id: 0, name: '\u83dc\u5355\u5217\u8868' },\n  { id: 4, p_id: 1, name: '\u6743\u9650\u7ba1\u7406' },\n  { id: 5, p_id: 6, name: '\u7ba1\u7406\u5458\u5217\u8868' },\n  { id: 6, p_id: 4, name: '\u89d2\u8272\u5217\u8868' },\n];\n\nconst tree = buildTree(nodes);\nconsole.log(tree);\n")),(0,a.kt)("h2",{id:"\u65b9\u5f0f3"},"\u65b9\u5f0f3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"function getTree(data) {\n    var newData = [],\n        hash = {};\n    for (var i = 0; i < data.length; i++) {\n        if (!hash[data[i].province]) {\n            hash[data[i].province] = {\n                'province': data[i].province\n            };\n            hash[data[i].province]['city'] = [{\n                'name': data[i].city,\n                'code': data[i].code\n            }]\n            newData.push(hash[data[i].province]);\n        } else if (hash[data[i].province].province == data[i].province) {\n            hash[data[i].province]['city'].push({\n                'name': data[i].city,\n                'code': data[i].code\n            })\n        }\n    }\n    return newData;\n}\n\nvar data = [{\n    'province': '\u6d59\u6c5f',\n    'city': '\u6e29\u5dde',\n    'code': '10010'\n}, {\n    'province': '\u6d59\u6c5f',\n    'city': '\u676d\u5dde',\n    'code': '10011'\n}, {\n    'province': '\u5b89\u5fbd',\n    'city': '\u5408\u80a5',\n    'code': '10012'\n}, {\n    'province': '\u5b89\u5fbd',\n    'city': '\u9a6c\u978d\u5c71',\n    'code': '10013'\n}, {\n    'province': '\u6d59\u6c5f',\n    'city': '\u5b81\u6ce2',\n    'code': '10014'\n}];\n\nconsole.log(getTree(data));\n")))}s.isMDXComponent=!0}}]);
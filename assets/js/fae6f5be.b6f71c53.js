"use strict";(self.webpackChunkprogramming_technology=self.webpackChunkprogramming_technology||[]).push([[9],{3905:(e,r,n)=>{n.d(r,{Zo:()=>u,kt:()=>f});var t=n(67294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function c(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=t.createContext({}),p=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):c(c({},r),e)),n},u=function(e){var r=p(e.components);return t.createElement(l.Provider,{value:r},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),s=p(n),m=o,f=s["".concat(l,".").concat(m)]||s[m]||d[m]||a;return n?t.createElement(f,c(c({ref:r},u),{},{components:n})):t.createElement(f,c({ref:r},u))}));function f(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=m;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i[s]="string"==typeof e?e:o,c[1]=i;for(var p=2;p<a;p++)c[p]=n[p];return t.createElement.apply(null,c)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},90450:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var t=n(87462),o=(n(67294),n(3905));const a={},c=void 0,i={unversionedId:"JavaScript/array\u65b9\u6cd5/18-2-reduce\u4f8b\u5b50",id:"JavaScript/array\u65b9\u6cd5/18-2-reduce\u4f8b\u5b50",title:"18-2-reduce\u4f8b\u5b50",description:"\u4e0b\u9762\u4e24\u4e2a\u76f8\u540c",source:"@site/programming-tech/JavaScript/01-array\u65b9\u6cd5/18-2-reduce\u4f8b\u5b50.md",sourceDirName:"JavaScript/01-array\u65b9\u6cd5",slug:"/JavaScript/array\u65b9\u6cd5/18-2-reduce\u4f8b\u5b50",permalink:"/JavaScript/array\u65b9\u6cd5/18-2-reduce\u4f8b\u5b50",draft:!1,editUrl:"https://github.com/huiruo/programming-tech-website/edit/main/programming-tech/JavaScript/01-array\u65b9\u6cd5/18-2-reduce\u4f8b\u5b50.md",tags:[],version:"current",frontMatter:{}},l={},p=[{value:"\u4e0b\u9762\u4e24\u4e2a\u76f8\u540c",id:"\u4e0b\u9762\u4e24\u4e2a\u76f8\u540c",level:2}],u={toc:p},s="wrapper";function d(e){let{components:r,...n}=e;return(0,o.kt)(s,(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"\u4e0b\u9762\u4e24\u4e2a\u76f8\u540c"},"\u4e0b\u9762\u4e24\u4e2a\u76f8\u540c"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const initializedData2 = [];\nfor (let i = 0; i < rows.length; i++) {\n  const row = rows[i];\n  const rowData = {};\n\n  if (rowKeys.includes(row.id)) {\n    for (let j = 0; j < columns.length; j++) {\n      const col = columns[j];\n\n      const cell = cells.find(\n        (c) => c.props.columnId === col.id && c.props.rowId === row.id,\n      )!;\n\n      // console.log('%c=ceelllll', 'color:red', cell);\n\n      rowData[col.id] = cell;\n    }\n    initializedData2.push(rowData);\n  }\n}\n\n  const initializedData2 = rows.reduce((acc:Record<string, ICellNode>[], row) => {\n    if (rowKeys.includes(row.id)) {\n      const rowData = columns.reduce((rowData, col) => {\n        const cell = cells.find(\n          (c) => c.props.columnId === col.id && c.props.rowId === row.id,\n        )!;\n  \n        rowData[col.id] = cell;\n        return rowData;\n      }, {} as Record<string, ICellNode>);\n  \n      acc.push(rowData);\n    }\n  \n    return acc;\n  }, []);\n")))}d.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkprogramming_technology=self.webpackChunkprogramming_technology||[]).push([[2278],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(n),d=a,f=p["".concat(l,".").concat(d)]||p[d]||m[d]||o;return n?r.createElement(f,c(c({ref:t},u),{},{components:n})):r.createElement(f,c({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:a,c[1]=i;for(var s=2;s<o;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},84128:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const o={title:"mockData-babel\u8fd4\u56decode\u51fd\u6570",sidebar_position:3},c=void 0,i={unversionedId:"React/mockData-babel\u8fd4\u56decode\u51fd\u6570",id:"React/mockData-babel\u8fd4\u56decode\u51fd\u6570",title:"mockData-babel\u8fd4\u56decode\u51fd\u6570",description:"",source:"@site/programming-tech/React/03-mockData-babel\u8fd4\u56decode\u51fd\u6570.md",sourceDirName:"React",slug:"/React/mockData-babel\u8fd4\u56decode\u51fd\u6570",permalink:"/React/mockData-babel\u8fd4\u56decode\u51fd\u6570",draft:!1,editUrl:"https://github.com/huiruo/programming-tech-website/programming-tech/React/03-mockData-babel\u8fd4\u56decode\u51fd\u6570.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"mockData-babel\u8fd4\u56decode\u51fd\u6570",sidebar_position:3},sidebar:"docs",previous:{title:"workInProgress\u6784\u5efa",permalink:"/React/workInProgress\u6784\u5efa"},next:{title:"\u7c7b\u7ec4\u4ef6\u6e32\u67d3\u6d41\u7a0b",permalink:"/React/\u7c7b\u7ec4\u4ef6\u6e32\u67d3\u6d41\u7a0b"}},l={},s=[],u={toc:s},p="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nconsole.log('=Babel:', Babel);\nfunction Test() {\n  console.log('test-render');\n\n  var _React$useState = React.useState('\u6539\u53d8\u6211'),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    data = _React$useState2[0],\n    setData = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    showDiv = _React$useState4[0],\n    setShowDiv = _React$useState4[1];\n\n  var onClickText = function onClickText() {\n    console.log('=useState=onClick');\n    setData('\u52aa\u529b\u54e6');\n    setShowDiv(!showDiv);\n  };\n\n  var onClickText2 = function onClickText2() {\n    console.log('=useState=onClick:', data);\n  };\n\n  React.useEffect(function () {\n    console.log('=\u526f\u4f5c\u7528-useEffect--\x3e\u8fd0\u884c');\n  }, []);\n\n  React.useLayoutEffect(function () {\n    console.log('=\u526f\u4f5c\u7528-useLayoutEffect--\x3e\u8fd0\u884c');\n  }, []);\n\n  return React.createElement(\n    'div',\n    { id: 'div1', className: 'c1' },\n    React.createElement(\n      'button',\n      { onClick: onClickText, className: 'btn' },\n      'Hello world,Click me'\n    ),\n    React.createElement(\n      'span',\n      null,\n      data\n    ),\n    showDiv && React.createElement(\n      'div',\n      null,\n      '\\u88AB\\u4F60\\u53D1\\u73B0\\u4E86'\n    ),\n    React.createElement(\n      'div',\n      { id: 'div2', className: 'c2' },\n      React.createElement(\n        'p',\n        null,\n        '\\u6D4B\\u8BD5\\u5B50\\u8282\\u70B9'\n      )\n    )\n  );\n}\n\nvar root = ReactDOM.createRoot(document.getElementById('root'));\nconsole.log(\"=app=root:\", root);\nroot.render(React.createElement(Test, null));\n// 17 \u5199\u6cd5\n// ReactDOM.render(<Test />, document.getElementById('root'))\n")))}m.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkprogramming_technology=self.webpackChunkprogramming_technology||[]).push([[2575],{3905:(e,n,r)=>{r.d(n,{Zo:()=>d,kt:()=>g});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=t.createContext({}),c=function(e){var n=t.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},d=function(e){var n=c(e.components);return t.createElement(i.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(r),m=o,g=u["".concat(i,".").concat(m)]||u[m]||p[m]||a;return r?t.createElement(g,s(s({ref:n},d),{},{components:r})):t.createElement(g,s({ref:n},d))}));function g(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=m;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[u]="string"==typeof e?e:o,s[1]=l;for(var c=2;c<a;c++)s[c]=r[c];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},15801:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var t=r(87462),o=(r(67294),r(3905));const a={title:"jsx-ast-render\u9636\u6bb5",sidebar_position:1},s=void 0,l={unversionedId:"React/jsx-ast-render\u9636\u6bb5",id:"React/jsx-ast-render\u9636\u6bb5",title:"jsx-ast-render\u9636\u6bb5",description:"react \u6a21\u677f\u5f15\u64ce",source:"@site/programming-tech/React/01-jsx-ast-render\u9636\u6bb5.md",sourceDirName:"React",slug:"/React/jsx-ast-render\u9636\u6bb5",permalink:"/React/jsx-ast-render\u9636\u6bb5",draft:!1,editUrl:"https://github.com/huiruo/programming-tech-website/programming-tech/React/01-jsx-ast-render\u9636\u6bb5.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"jsx-ast-render\u9636\u6bb5",sidebar_position:1},sidebar:"docs",previous:{title:"react-vue\u5f02\u540c-vue",permalink:"/react-vue\u5f02\u540c-vue"},next:{title:"render\u9636\u6bb51-beginWork",permalink:"/React/render\u9636\u6bb51-beginWork"}},i={},c=[{value:"react \u6a21\u677f\u5f15\u64ce",id:"react-\u6a21\u677f\u5f15\u64ce",level:2},{value:"\u6d4b\u8bd5\u4ee3\u7801",id:"\u6d4b\u8bd5\u4ee3\u7801",level:3},{value:"mockData-babel\u8fd4\u56de.json",id:"mockdata-babel\u8fd4\u56dejson",level:3},{value:"code\u51fd\u6570",id:"code\u51fd\u6570",level:3},{value:"createElement()",id:"createelement",level:3},{value:"workInProgress \u6784\u5efa",id:"workinprogress-\u6784\u5efa",level:2},{value:"workInProgress \u6784\u5efa2\uff1abeginWork \u7b2c\u4e00\u6b21\u4f1a\u8c03\u7528updateHostRoot\u8fdb\u884c\u521d\u59cb\u5316:updateHostRoot",id:"workinprogress-\u6784\u5efa2beginwork-\u7b2c\u4e00\u6b21\u4f1a\u8c03\u7528updatehostroot\u8fdb\u884c\u521d\u59cb\u5316updatehostroot",level:3},{value:"\u91cd\u70b9\u6784\u5efa\u5b50\u8282\u70b9\uff1a",id:"\u91cd\u70b9\u6784\u5efa\u5b50\u8282\u70b9",level:3},{value:"beginWork\u7b2c\u4e8c\u6b21\u4e4bcase IndeterminateComponent",id:"beginwork\u7b2c\u4e8c\u6b21\u4e4bcase-indeterminatecomponent",level:2},{value:"\u91cd\u70b9\uff1acode\u51fd\u6570\u521d\u59cb\u5316\u5728renderWithHooks\u8fd9\u91cc\u6267\u884c",id:"\u91cd\u70b9code\u51fd\u6570\u521d\u59cb\u5316\u5728renderwithhooks\u8fd9\u91cc\u6267\u884c",level:3},{value:"ChildReconciler",id:"childreconciler",level:3},{value:"\u7b2c\u4e09\u6b21 beginWork",id:"\u7b2c\u4e09\u6b21-beginwork",level:2},{value:"React.createElement \u65e7api",id:"reactcreateelement-\u65e7api",level:3},{value:"\u5f00\u59cb",id:"\u5f00\u59cb",level:2},{value:"\u63a5\u4e0a\u9762updateContainer",id:"\u63a5\u4e0a\u9762updatecontainer",level:2},{value:"commit\u9636\u6bb5",id:"commit\u9636\u6bb5",level:2},{value:"\u5f00\u59cb1",id:"\u5f00\u59cb1",level:2},{value:"\u5f00\u59cb2 updateContainer(",id:"\u5f00\u59cb2-updatecontainer",level:2},{value:"performConcurrentWorkOnRoot \u8fd9\u4e2a\u51fd\u6570\u5728render\u7ed3\u675f\u4f1a\u5f00\u542fcommit\u9636\u6bb5",id:"performconcurrentworkonroot-\u8fd9\u4e2a\u51fd\u6570\u5728render\u7ed3\u675f\u4f1a\u5f00\u542fcommit\u9636\u6bb5",level:3},{value:"\u904d\u5386\u6d41\u7a0b",id:"\u904d\u5386\u6d41\u7a0b",level:2},{value:"workInProgress \u5185\u5b58\u4e2d\u6784\u5efa\u7684\u6811\u548c\u53cc\u7f13\u5b58",id:"workinprogress-\u5185\u5b58\u4e2d\u6784\u5efa\u7684\u6811\u548c\u53cc\u7f13\u5b58",level:2},{value:"\u53cc\u7f13\u5b58\uff0c\u4ee5current tree\u4e3a\u4e3b\uff0cworkInProgress tree\u4e3a\u8f85\u3002",id:"\u53cc\u7f13\u5b58\u4ee5current-tree\u4e3a\u4e3bworkinprogress-tree\u4e3a\u8f85",level:3},{value:"\u57fa\u78402\uff1aDiff",id:"\u57fa\u78402diff",level:2},{value:"\u6d41\u7a0b1.  jsx\u8bed\u6cd5\u7cd6\u7684html\u7ed3\u6784\u662f\u901a\u8fc7babel\u5c06\u7ed3\u6784\u89e3\u6790\u8f6c\u6362\u4e3a ast \u8bed\u6cd5\u6811\u7ed3\u6784",id:"\u6d41\u7a0b1--jsx\u8bed\u6cd5\u7cd6\u7684html\u7ed3\u6784\u662f\u901a\u8fc7babel\u5c06\u7ed3\u6784\u89e3\u6790\u8f6c\u6362\u4e3a-ast-\u8bed\u6cd5\u6811\u7ed3\u6784",level:2},{value:"\u8f6c\u5316\u6d4b\u8bd5:",id:"\u8f6c\u5316\u6d4b\u8bd5",level:2},{value:"\u7b80\u5355\u5b9e\u4f8b1:babel\u5c06jsx\u4ee3\u7801\u8f6c\u6362\u4e3aReact.createElement()\u8c03\u7528",id:"\u7b80\u5355\u5b9e\u4f8b1babel\u5c06jsx\u4ee3\u7801\u8f6c\u6362\u4e3areactcreateelement\u8c03\u7528",level:3},{value:"\u7b80\u5355\u5b9e\u4f8b2:\u4e0d\u4f7f\u7528babel",id:"\u7b80\u5355\u5b9e\u4f8b2\u4e0d\u4f7f\u7528babel",level:3},{value:"\u7b80\u5355\u5b9e\u4f8b3\uff1a\u4f7f\u7528babel",id:"\u7b80\u5355\u5b9e\u4f8b3\u4f7f\u7528babel",level:3},{value:"\u6d41\u7a0b2\uff1a\u5165\u53e3\uff1a\u6b64\u65f6\u8fd8\u4e0d\u662ffiber\u6811,\u6ca1\u6709\u5f00\u542frender\u9636\u6bb5",id:"\u6d41\u7a0b2\u5165\u53e3\u6b64\u65f6\u8fd8\u4e0d\u662ffiber\u6811\u6ca1\u6709\u5f00\u542frender\u9636\u6bb5",level:2},{value:"17\u7248\u672c\u7684\u5165\u53e3,\u548c18\u4e0d\u4e00\u6837",id:"17\u7248\u672c\u7684\u5165\u53e3\u548c18\u4e0d\u4e00\u6837",level:2},{value:"legacyRenderSubtreeIntoContainer()",id:"legacyrendersubtreeintocontainer",level:3},{value:"17\u7248\u672c\uff1acreateFiberRoot \u521b\u5efafiberRoot\u5bf9\u8c61",id:"17\u7248\u672ccreatefiberroot-\u521b\u5efafiberroot\u5bf9\u8c61",level:2},{value:"\u57fa\u7840\uff1a\u4e24\u5927\u9636\u6bb5\uff1arender\u548ccommit",id:"\u57fa\u7840\u4e24\u5927\u9636\u6bb5render\u548ccommit",level:2},{value:"\u9996\u6b21\u6e32\u67d3\uff0c workInProgress fiber tree\u4e2d\u9664\u4e86\u6839\u8282\u70b9\u4e4b\u5916\uff0c\u6240\u6709\u8282\u70b9\u7684alternate\u90fd\u4e3a\u7a7a\u3002",id:"\u9996\u6b21\u6e32\u67d3-workinprogress-fiber-tree\u4e2d\u9664\u4e86\u6839\u8282\u70b9\u4e4b\u5916\u6240\u6709\u8282\u70b9\u7684alternate\u90fd\u4e3a\u7a7a",level:3},{value:"update\u65f6",id:"update\u65f6",level:3}],d={toc:c},u="wrapper";function p(e){let{components:n,...a}=e;return(0,o.kt)(u,(0,t.Z)({},d,a,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"react-\u6a21\u677f\u5f15\u64ce"},"react \u6a21\u677f\u5f15\u64ce"),(0,o.kt)("p",null,"\u5148\u770bbabel \u7684\u6267\u884c\u51fd\u6570"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"function transform(code, options) {\n  console.log('=Babel-transform-\u53c2\u6570:', { code })\n  const babel_transform = Babel.transform(code, processOptions(options));\n  console.log('=Babel-\u8fd4\u56de:', babel_transform)\n  return babel_transform\n}\n")),(0,o.kt)("h3",{id:"\u6d4b\u8bd5\u4ee3\u7801"},"\u6d4b\u8bd5\u4ee3\u7801"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},"<script type=\"text/babel\">\n  console.log('=Babel:', Babel)\n  function Test() {\n    console.log('test-render')\n    const [data, setData] = React.useState('\u6539\u53d8\u6211')\n    const [showDiv, setShowDiv] = React.useState(false)\n\n    const onClickText = () => {\n      console.log('=useState=onClick');\n      setData('\u52aa\u529b\u54e6')\n      setShowDiv(!showDiv)\n    }\n\n    const onClickText2 = () => {\n      console.log('=useState=onClick:', data);\n    }\n\n    React.useEffect(() => {\n      console.log('=\u526f\u4f5c\u7528-useEffect--\x3e\u8fd0\u884c');\n    }, [])\n\n    React.useLayoutEffect(() => {\n      console.log('=\u526f\u4f5c\u7528-useLayoutEffect--\x3e\u8fd0\u884c');\n    }, [])\n\n    return (\n      <div id='div1' className='c1'>\n        <button onClick={onClickText} className=\"btn\">Hello world,Click me</button>\n        <span>{data}</span>\n        {showDiv && <div>\u88ab\u4f60\u53d1\u73b0\u4e86</div>}\n        <div id='div2' className='c2'>\n          <p>\u6d4b\u8bd5\u5b50\u8282\u70b9</p>\n        </div>\n      </div>\n    )\n  }\n\n  const root = ReactDOM.createRoot(document.getElementById('root'))\n  console.log(\"=app=root:\", root)\n  root.render(<Test />);\n<\/script>\n")),(0,o.kt)("h3",{id:"mockdata-babel\u8fd4\u56dejson"},"mockData-babel\u8fd4\u56de.json"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"./mockData-babel%E8%BF%94%E5%9B%9Ecode%E5%87%BD%E6%95%B0"},"mockData-babel\u8fd4\u56decode\u51fd\u6570")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n"metadata":"",\n"options":"",\n"ignored":"",\n"code":"",\n"ast":"",\n"map":""\n}\n')),(0,o.kt)("h3",{id:"code\u51fd\u6570"},"code\u51fd\u6570"),(0,o.kt)("p",null,"\u6bcf\u4e2a\u8282\u70b9\u90fd\u8c03\u7528createElement(),\u5e76\u4e14\u5d4c\u5957\u7ed3\u6784\u90fd\u662f\u548chtml\u8282\u70b9\u4e00\u6837"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nconsole.log('=Babel:', Babel);\nfunction Test() {\n  console.log('test-render');\n\n  var _React$useState = React.useState('\u6539\u53d8\u6211'),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    data = _React$useState2[0],\n    setData = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    showDiv = _React$useState4[0],\n    setShowDiv = _React$useState4[1];\n\n  var onClickText = function onClickText() {\n    console.log('=useState=onClick');\n    setData('\u52aa\u529b\u54e6');\n    setShowDiv(!showDiv);\n  };\n\n  var onClickText2 = function onClickText2() {\n    console.log('=useState=onClick:', data);\n  };\n\n  React.useEffect(function () {\n    console.log('=\u526f\u4f5c\u7528-useEffect--\x3e\u8fd0\u884c');\n  }, []);\n\n  React.useLayoutEffect(function () {\n    console.log('=\u526f\u4f5c\u7528-useLayoutEffect--\x3e\u8fd0\u884c');\n  }, []);\n\n  return React.createElement(\n    'div',\n    { id: 'div1', className: 'c1' },\n    React.createElement(\n      'button',\n      { onClick: onClickText, className: 'btn' },\n      'Hello world,Click me'\n    ),\n    React.createElement(\n      'span',\n      null,\n      data\n    ),\n    showDiv && React.createElement(\n      'div',\n      null,\n      '\\u88AB\\u4F60\\u53D1\\u73B0\\u4E86'\n    ),\n    React.createElement(\n      'div',\n      { id: 'div2', className: 'c2' },\n      React.createElement(\n        'p',\n        null,\n        '\\u6D4B\\u8BD5\\u5B50\\u8282\\u70B9'\n      )\n    )\n  );\n}\n\nvar root = ReactDOM.createRoot(document.getElementById('root'));\nconsole.log(\"=app=root:\", root);\nroot.render(React.createElement(Test, null));\n")),(0,o.kt)("h3",{id:"createelement"},"createElement()"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"function createElement(type, config, children) {\n  // console.log('=development\u8c03\u7528createElement\u6784\u5efaAst\u6811:', { type, config, children })\n  console.log('%c=development\u8c03\u7528createElement-1:type', 'color:blueviolet', type, { config, children })\n  var propName; // Reserved names are extracted\n\n  var props = {};\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n\n      {\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n\n    props.children = childArray;\n  } // Resolve default props\n\n\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n  const reactElementRes = ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  console.log('=development\u8c03\u7528createElement-2:\u8fd4\u56de:', reactElementRes)\n  return reactElementRes\n}\n")),(0,o.kt)("h2",{id:"workinprogress-\u6784\u5efa"},"workInProgress \u6784\u5efa"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"  function createWorkInProgress(current, pendingProps) {\n    var workInProgress = current.alternate;\n    // \u533a\u5206\u662f\u5728mount\u65f6\u8fd8\u662f\u5728update\u65f6\n    if (workInProgress === null) {\n      // We use a double buffering pooling technique because we know that we'll\n      // only ever need at most two versions of a tree. We pool the \"other\" unused\n      // node that we're free to reuse. This is lazily created to avoid allocating\n      // extra objects for things that are never updated. It also allow us to\n      // reclaim the extra memory if needed.\n      console.log('==createWorkInProgress--\x3e,\u6ca1\u6709\u5c31\u521b\u5efa\u4e00\u4e2a')\n      workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);\n      console.log('==createWorkInProgress--\x3e,\u6ca1\u6709\u5c31\u521b\u5efa\u4e00\u4e2a\u8fd4\u56de\u503c', workInProgress)\n      debugger\n      workInProgress.elementType = current.elementType;\n      workInProgress.type = current.type;\n      workInProgress.stateNode = current.stateNode;\n\n      {\n        // DEV-only fields\n        workInProgress._debugSource = current._debugSource;\n        workInProgress._debugOwner = current._debugOwner;\n        workInProgress._debugHookTypes = current._debugHookTypes;\n      }\n      console.log('==createWorkInProgress--\x3e,workInProgress.alternate\u6307\u5b9a\u4e3acurrent')\n      workInProgress.alternate = current;\n      current.alternate = workInProgress;\n    } else {\n      // \u590d\u7528\u5c5e\u6027\n      workInProgress.pendingProps = pendingProps; // Needed because Blocks store data on type.\n\n      workInProgress.type = current.type; // We already have an alternate.\n      // Reset the effect tag.\n\n      workInProgress.flags = NoFlags; // The effects are no longer valid.\n\n      workInProgress.subtreeFlags = NoFlags;\n      workInProgress.deletions = null;\n\n      {\n        // We intentionally reset, rather than copy, actualDuration & actualStartTime.\n        // This prevents time from endlessly accumulating in new commits.\n        // This has the downside of resetting values for different priority renders,\n        // But works for yielding (the common case) and should support resuming.\n        workInProgress.actualDuration = 0;\n        workInProgress.actualStartTime = -1;\n      }\n    } // Reset all effects except static ones.\n    // Static effects are not specific to a render.\n\n\n    workInProgress.flags = current.flags & StaticMask;\n    // \u590d\u7528\u5c5e\u6027\n    workInProgress.childLanes = current.childLanes;\n    workInProgress.lanes = current.lanes;\n    workInProgress.child = current.child;\n    workInProgress.memoizedProps = current.memoizedProps;\n    workInProgress.memoizedState = current.memoizedState;\n    workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so\n    // it cannot be shared with the current fiber.\n\n    var currentDependencies = current.dependencies;\n    workInProgress.dependencies = currentDependencies === null ? null : {\n      lanes: currentDependencies.lanes,\n      firstContext: currentDependencies.firstContext\n    }; // These will be overridden during the parent's reconciliation\n\n    workInProgress.sibling = current.sibling;\n    workInProgress.index = current.index;\n    workInProgress.ref = current.ref;\n\n    {\n      workInProgress.selfBaseDuration = current.selfBaseDuration;\n      workInProgress.treeBaseDuration = current.treeBaseDuration;\n    }\n\n    {\n      workInProgress._debugNeedsRemount = current._debugNeedsRemount;\n\n      switch (workInProgress.tag) {\n        case IndeterminateComponent:\n        case FunctionComponent:\n        case SimpleMemoComponent:\n          workInProgress.type = resolveFunctionForHotReloading(current.type);\n          break;\n\n        case ClassComponent:\n          workInProgress.type = resolveClassForHotReloading(current.type);\n          break;\n\n        case ForwardRef:\n          workInProgress.type = resolveForwardRefForHotReloading(current.type);\n          break;\n      }\n    }\n\n    return workInProgress;\n  }\n")),(0,o.kt)("p",null,"\u8d4b\u503c\uff1a\u8c03\u7528 prepareFreshStack"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"  function renderRootSync(root, lanes) {\n\n    var prevExecutionContext = executionContext;\n    executionContext |= RenderContext;\n    var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack\n    // and prepare a fresh one. Otherwise we'll continue where we left off.\n\n    if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n      {\n        if (isDevToolsPresent) {\n          var memoizedUpdaters = root.memoizedUpdaters;\n\n          if (memoizedUpdaters.size > 0) {\n            restorePendingUpdaters(root, workInProgressRootRenderLanes);\n            memoizedUpdaters.clear();\n          } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.\n          // If we bailout on this work, we'll move them back (like above).\n          // It's important to move them now in case the work spawns more work at the same priority with different updaters.\n          // That way we can keep the current update and future updates separate.\n\n\n          movePendingFibersToMemoized(root, lanes);\n        }\n\n      }\n\n      workInProgressTransitions = getTransitionsForLanes();\n\n      console.log('workInProgress', workInProgress, root)\n      debugger\n      console.log('render\u8c03\u7528 prepareFreshStack\u524d',workInProgress)\n      prepareFreshStack(root, lanes);\n      console.log('workInProgress', workInProgress, root)\n      console.log('render\u8c03\u7528 prepareFreshStack\u540e',workInProgress)\n    }\n")),(0,o.kt)("h3",{id:"workinprogress-\u6784\u5efa2beginwork-\u7b2c\u4e00\u6b21\u4f1a\u8c03\u7528updatehostroot\u8fdb\u884c\u521d\u59cb\u5316updatehostroot"},"workInProgress \u6784\u5efa2\uff1abeginWork \u7b2c\u4e00\u6b21\u4f1a\u8c03\u7528updateHostRoot\u8fdb\u884c\u521d\u59cb\u5316:updateHostRoot"),(0,o.kt)("p",null,"\u7b2c\u4e8c\u6b21\u624d\u8d70 mountIndeterminateComponent \u6267\u884ccode()\u51fd\u6570,\u6b64\u65f6\u7684workInProgress.type \u624d\u6709\u503c"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"  function beginWork(current, workInProgress, renderLanes) {\n    console.log('workInProgress', workInProgress, root)\n    debugger\n    workInProgress.lanes = NoLanes;\n    console.log('%c=beginWork()===start1-\u521d\u59cb\u5316', 'color:magenta', { getFiberName: getFiberName(workInProgress), current, renderLanes, workInProgress })\n    switch (workInProgress.tag) {\n      case IndeterminateComponent:\n        {\n          console.log('%c=beginWork()==end 2 mountIndeterminateComponent', 'color:magenta', workInProgress)\n          console.log(`%c=\u63a2\u7a76\u521d\u59cb\u548chook=\u8c03\u7528mountIndeterminateComponent`, 'color:blueviolet', workInProgress.type)\n          return mountIndeterminateComponent(current, workInProgress, workInProgress.type, renderLanes);\n      }\n      case HostRoot:\n        console.log('%c=beginWork()=end 6\u7b2c\u4e00\u6b21\u4f1a\u8d70\u8fd9\u91cc\u521d\u59cb\u5316workInProgress', 'color:magenta')\n        console.log('%c=beginWork()=end 6 updateHostRoot', 'color:magenta')\n        return updateHostRoot(current, workInProgress, renderLanes);\n    }\n  }\n")),(0,o.kt)("h3",{id:"\u91cd\u70b9\u6784\u5efa\u5b50\u8282\u70b9"},"\u91cd\u70b9\u6784\u5efa\u5b50\u8282\u70b9\uff1a"),(0,o.kt)("p",null,"reconcileChildren(current, workInProgress, nextChildren, renderLanes)--\x3ereconcileChildren"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"function updateHostRoot(current, workInProgress, renderLanes) {\n  pushHostRootContext(workInProgress);\n\n  if (current === null) {\n    throw new Error('Should have a current fiber. This is a bug in React.');\n  }\n\n  var nextProps = workInProgress.pendingProps;\n  var prevState = workInProgress.memoizedState;\n  var prevChildren = prevState.element;\n  cloneUpdateQueue(current, workInProgress);\n  processUpdateQueue(workInProgress, nextProps, null, renderLanes);\n  var nextState = workInProgress.memoizedState;\n  var root = workInProgress.stateNode;\n  // being called \"element\".\n\n\n  var nextChildren = nextState.element;\n\n  if (prevState.isDehydrated) {\n  } else {\n      // Root is not dehydrated. Either this is a client-only root, or it\n      // already hydrated.\n      resetHydrationState();\n\n      if (nextChildren === prevChildren) {\n        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n      }\n\n      console.log('=reconcileChildren 9')\n      debugger\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      console.log('%c=updateHostRoot:\u6784\u5efa\u4e4b\u540eworkInProgress.child', 'color:black', { child })\n  }\n  console.log('%c=updateHostRoot:\u6700\u540e\u8fd4\u56deworkInProgress.child', 'color:black', workInProgress.child)\n\n  return workInProgress.child;\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {\n  if (current === null) {\n    // If this is a fresh new component that hasn't been rendered yet, we\n    // won't update its child set by applying minimal side-effects. Instead,\n    // we will add them all to the child before it gets rendered. That means\n    // we can optimize this reconciliation pass by not tracking side-effects.\n    console.log('%c=reconcileChildren mount', 'blueviolet');\n    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);\n    console.log('%c=reconcileChildren mount \u8fd4\u56de\u503cworkInProgress.child', 'blueviolet', workInProgress.child);\n  } else {\n    // If the current child is the same as the work in progress, it means that\n    // we haven't yet started any work on these children. Therefore, we use\n    // the clone algorithm to create a copy of all the current children.\n    // If we had any progressed work already, that is invalid at this point so\n    // let's throw it out.\n    console.log('%c=reconcileChildren update', 'yellow');\n    workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);\n  }\n}\n")),(0,o.kt)("p",null,"\u5f88\u957f\u7684\u51fd\u6570: reconcileChildren->reconcileChildFibers"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"  function ChildReconciler(shouldTrackSideEffects) {\n    // \u7701\u7565\n    function reconcileChildFibers(returnFiber, currentFirstChild, newChild, lanes) {\n      // This function is not recursive.\n      // If the top level item is an array, we treat it as a set of children,\n      // not as a fragment. Nested arrays on the other hand will be treated as\n      // fragment nodes. Recursion happens at the normal flow.\n      // Handle top level unkeyed fragments as if they were arrays.\n      // This leads to an ambiguity between <>{[...]}</> and <>...</>.\n      // We treat the ambiguous cases above the same.\n      var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;\n\n      console.log('%c=reconcileChildFibers A', 'blueviolet');\n\n      if (isUnkeyedTopLevelFragment) {\n        newChild = newChild.props.children;\n      } // Handle object types\n\n\n      if (typeof newChild === 'object' && newChild !== null) {\n        switch (newChild.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n            return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));\n\n          case REACT_PORTAL_TYPE:\n            return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));\n\n          case REACT_LAZY_TYPE:\n            var payload = newChild._payload;\n            var init = newChild._init; // TODO: This function is supposed to be non-recursive.\n\n            return reconcileChildFibers(returnFiber, currentFirstChild, init(payload), lanes);\n        }\n\n        if (isArray(newChild)) {\n          return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);\n        }\n\n        if (getIteratorFn(newChild)) {\n          return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);\n        }\n\n        throwOnInvalidObjectType(returnFiber, newChild);\n      }\n\n      if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {\n        return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, lanes));\n      }\n\n      {\n        if (typeof newChild === 'function') {\n          warnOnFunctionType(returnFiber);\n        }\n      } // Remaining cases are all treated as empty.\n\n\n      return deleteRemainingChildren(returnFiber, currentFirstChild);\n    }\n\n    return reconcileChildFibers;\n  }\n")),(0,o.kt)("h2",{id:"beginwork\u7b2c\u4e8c\u6b21\u4e4bcase-indeterminatecomponent"},"beginWork\u7b2c\u4e8c\u6b21\u4e4bcase IndeterminateComponent"),(0,o.kt)("p",null,"\u7b2c\u4e8c\u6b21beginWork\u8fdb\u5165case IndeterminateComponent \u6267\u884c mountIndeterminateComponent(),\u53ef\u89c1\u6df1\u5ea6\u904d\u5386\u4ece\u7236\u7ea7\u7ec4\u4ef6\u5f00\u59cb"),(0,o.kt)("p",null,"\u9996\u5148\u8981\u6ce8\u610f\u7684\u662f\uff0c\u867d\u7136 App \u662f\u4e00\u4e2a FunctionComponent\uff0c\u4f46\u662f\u5728 first paint \u7684\u65f6\u5019\uff0cReact \u5224\u65ad\u5176\u4e3a IndeterminateComponent"),(0,o.kt)("p",null,"\u5bf9\u4e8e FunctionComponent\uff0c\u5728\u7b2c\u4e00\u6b21\u8bc6\u522b\u7684\u65f6\u5019\u4f1a\u88ab\u8ba4\u4e3a\u662f IndeterminateComponent"),(0,o.kt)("p",null,"\u4e00\u4e2a\u51fd\u6570\uff0c\u53ea\u8981\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5bf9\u8c61\u4e14\u5bf9\u8c61\u4e2d\u6709 render \u65b9\u6cd5\uff0c\u5c31\u8ba4\u4e3a\u662f ClassComponent\uff0c\u5426\u5219\u5c31\u662f FunctionComponent"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"    switch (workInProgress.tag) {\n      case IndeterminateComponent:\n        {\n          console.log('%c=beginWork()==end 2 mountIndeterminateComponent', 'color:magenta')\n          console.log(`%c=\u63a2\u7a76\u521d\u59cb\u548chook=\u8c03\u7528mountIndeterminateComponent`, 'color:blueviolet')\n          return mountIndeterminateComponent(current, workInProgress, workInProgress.type, renderLanes);\n        }\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"function beginWork(current, workInProgress, renderLanes) {\n    workInProgress.lanes = NoLanes;\n    console.log('%c=beginWork()===start1-\u521d\u59cb\u5316', 'color:magenta', { getFiberName: getFiberName(workInProgress), current, renderLanes, workInProgress })\n    switch (workInProgress.tag) {\n      case IndeterminateComponent:\n        {\n          console.log('%c=beginWork()==end 2 mountIndeterminateComponent', 'color:magenta')\n          console.log(`%c=\u63a2\u7a76\u521d\u59cb\u548chook=\u8c03\u7528mountIndeterminateComponent`, 'color:blueviolet')\n          return mountIndeterminateComponent(current, workInProgress, workInProgress.type, renderLanes);\n        }\n\n      case LazyComponent:\n        {\n          var elementType = workInProgress.elementType;\n          console.log('%c=beginWork()=end 3 mountLazyComponent', 'color:magenta')\n          return mountLazyComponent(current, workInProgress, elementType, renderLanes);\n        }\n\n      case FunctionComponent:\n        {\n          var Component = workInProgress.type;\n          var unresolvedProps = workInProgress.pendingProps;\n          var resolvedProps = workInProgress.elementType === Component ? unresolvedProps : resolveDefaultProps(Component, unresolvedProps);\n          console.log('%c=beginWork()=end 4\u53ea\u6709\u66f4\u65b0\u624d\u4f1a\u8c03\u7528updateFunctionComponent', 'color:magenta')\n          return updateFunctionComponent(current, workInProgress, Component, resolvedProps, renderLanes);\n        }\n\n      case ClassComponent:\n        {\n          var _Component = workInProgress.type;\n          var _unresolvedProps = workInProgress.pendingProps;\n\n          var _resolvedProps = workInProgress.elementType === _Component ? _unresolvedProps : resolveDefaultProps(_Component, _unresolvedProps);\n          console.log('%c=beginWork()=end 5 updateClassComponent', 'color:magenta')\n          return updateClassComponent(current, workInProgress, _Component, _resolvedProps, renderLanes);\n        }\n\n      case HostRoot:\n        console.log('%c=beginWork()=end 6 updateHostRoot', 'color:magenta')\n        return updateHostRoot(current, workInProgress, renderLanes);\n\n      case HostComponent:\n        console.log(`%c=beginWork()=end 7 updateHostComponent$1,\u5373\u539f\u751f DOM \u7ec4\u4ef6\u5bf9\u5e94\u7684 Fiber\u8282\u70b9:`, 'color:magenta', { type: workInProgress.type })\n        return updateHostComponent$1(current, workInProgress, renderLanes);\n\n      case HostText:\n        console.log('%c=beginWork()=end 8 updateHostText$1', 'color:magenta')\n        return updateHostText$1(current, workInProgress);\n\n      case SuspenseComponent:\n        console.log('%c=beginWork()=end 9 updateSuspenseComponent', 'color:magenta')\n        return updateSuspenseComponent(current, workInProgress, renderLanes);\n\n      case HostPortal:\n        console.log('%c=beginWork()=end 10 updatePortalComponent', 'color:magenta')\n        return updatePortalComponent(current, workInProgress, renderLanes);\n\n      case ForwardRef:\n        {\n          var type = workInProgress.type;\n          var _unresolvedProps2 = workInProgress.pendingProps;\n\n          var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);\n\n          console.log('%c=beginWork()=end 11 updateForwardRef', 'color:magenta')\n          return updateForwardRef(current, workInProgress, type, _resolvedProps2, renderLanes);\n        }\n\n      case Fragment:\n        console.log('%c=beginWork()=end 12 updateFragment', 'color:magenta')\n        return updateFragment(current, workInProgress, renderLanes);\n\n      case Mode:\n        console.log('%c=beginWork()=end 13 updateMode', 'color:magenta')\n        return updateMode(current, workInProgress, renderLanes);\n\n      case Profiler:\n        console.log('%c=beginWork()=end 14 updateProfiler', 'color:magenta')\n        return updateProfiler(current, workInProgress, renderLanes);\n\n      case ContextProvider:\n        console.log('%c=beginWork()=end 15 updateContextProvider', 'color:magenta')\n        return updateContextProvider(current, workInProgress, renderLanes);\n\n      case ContextConsumer:\n        console.log('%c=beginWork()=end 16 updateContextConsumer', 'color:magenta')\n        return updateContextConsumer(current, workInProgress, renderLanes);\n\n      case MemoComponent:\n        {\n          var _type2 = workInProgress.type;\n          var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.\n\n          var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);\n\n          {\n            if (workInProgress.type !== workInProgress.elementType) {\n              var outerPropTypes = _type2.propTypes;\n\n              if (outerPropTypes) {\n                checkPropTypes(outerPropTypes, _resolvedProps3, // Resolved for outer only\n                  'prop', getComponentNameFromType(_type2));\n              }\n            }\n          }\n\n          _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);\n          console.log('%c=beginWork()=end 17 updateMemoComponent', 'color:magenta')\n          return updateMemoComponent(current, workInProgress, _type2, _resolvedProps3, renderLanes);\n        }\n\n      case SimpleMemoComponent:\n        {\n          console.log('%c=beginWork()=end 18 updateSimpleMemoComponent', 'color:magenta')\n          return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);\n        }\n\n      case IncompleteClassComponent:\n        {\n          var _Component2 = workInProgress.type;\n          var _unresolvedProps4 = workInProgress.pendingProps;\n\n          var _resolvedProps4 = workInProgress.elementType === _Component2 ? _unresolvedProps4 : resolveDefaultProps(_Component2, _unresolvedProps4);\n          console.log('%c=beginWork()=end 19 mountIncompleteClassComponent', 'color:magenta')\n          return mountIncompleteClassComponent(current, workInProgress, _Component2, _resolvedProps4, renderLanes);\n        }\n\n      case SuspenseListComponent:\n        {\n          console.log('%c=beginWork()=end 20 updateSuspenseListComponent', 'color:magenta')\n          return updateSuspenseListComponent(current, workInProgress, renderLanes);\n        }\n\n      case ScopeComponent:\n        {\n\n          break;\n        }\n\n      case OffscreenComponent:\n        {\n          console.log('%c=beginWork()=end 21 updateOffscreenComponent', 'color:magenta')\n          return updateOffscreenComponent(current, workInProgress, renderLanes);\n        }\n    }\n    throw new Error(\"Unknown unit of work tag (\" + workInProgress.tag + \"). This error is likely caused by a bug in \" + 'React. Please file an issue.');\n  }\n}\n")),(0,o.kt)("h3",{id:"\u91cd\u70b9code\u51fd\u6570\u521d\u59cb\u5316\u5728renderwithhooks\u8fd9\u91cc\u6267\u884c"},"\u91cd\u70b9\uff1acode\u51fd\u6570\u521d\u59cb\u5316\u5728renderWithHooks\u8fd9\u91cc\u6267\u884c"),(0,o.kt)("p",null,"mountIndeterminateComponent "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u8c03\u7528  renderWithHooks \u751f\u6210 value"),(0,o.kt)("li",{parentName:"ul"},"\u6267\u884c reconcileChildren(null, workInProgress, value, renderLanes) \u53c2\u6570value")),(0,o.kt)("p",null,"\u5173\u952e\u7684\u51fd\u6570 renderWithHooks\uff1b\u800c\u5728 renderWithHooks \u4e2d\uff0c\u6211\u4eec\u4f1a\u6839\u636e\u7ec4\u4ef6\u5904\u4e8e\u4e0d\u540c\u7684\u72b6\u6001\uff0c\u7ed9 ReactCurrentDispatcher.current \u6302\u8f7d\u4e0d\u540c\u7684 dispatcher \u3002\u800c\u5728first paint \u65f6\uff0c\u6302\u8f7d\u7684\u662fHooksDispatcherOnMountInDEV"),(0,o.kt)("p",null,"HooksDispatcherOnMountInDEV \u91cc\u5c31\u662f\u7ec4\u4ef6 first paint \u7684\u65f6\u5019\u6240\u7528\u5230\u7684\u5404\u79cd hooks"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"function mountIndeterminateComponent(_current, workInProgress, Component, renderLanes) {\n    // \u7701\u7565\n    setIsRendering(true);\n    ReactCurrentOwner$1.current = workInProgress;\n    console.log(`%c=\u63a2\u7a76\u521d\u59cb\u548chook=mountIndeterminateComponent\u8c03\u7528renderWithHooks 1`, 'color:blueviolet', { workInProgress, Component, props, context, renderLanes })\n    value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);\n    console.log(`%c=\u63a2\u7a76\u521d\u59cb\u548chook=mountIndeterminateComponent\u8c03\u7528renderWithHooks \u8fd4\u56de\u503c`, 'color:blueviolet', { value })\n    // \u7701\u7565\n\n   if (getIsHydrating() && hasId) {\n        pushMaterializedTreeId(workInProgress);\n      }\n      console.log('%c=reconcileChildren 12:\u91cd\u70b9\uff0cmountIndeterminateComponent\u8c03\u7528reconcileChildren', 'color:red')\n      reconcileChildren(null, workInProgress, value, renderLanes);\n\n      {\n        validateFunctionComponentInDev(workInProgress, Component);\n      }\n\n      return workInProgress.child;\n    }\n  }\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"function renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {\n    // \u7701\u7565\uff1a\n    console.log(`%c=\u63a2\u7a76\u521d\u59cb\u548chook=renderWithHooks\u91cd\u70b9\uff0c\u8c03\u7528\u51fd\u6570\u7ec4\u4ef6\uff0c\u91cc\u9762\u6267\u884c\u5404\u79cd React Hook==start\u5e76\u8fd4\u56de ReactElement`, 'color:blueviolet', Component)\n    var children = Component(props, secondArg); // Check if there was a render phase update\n    console.log(`%c=\u63a2\u7a76\u521d\u59cb\u548chook=renderWithHooks\u91cd\u70b9,\u8fd4\u56de ReactElement==end`, 'color:blueviolet', { children })\n    // \u7701\u7565\uff1a\n    return children;\n}\n")),(0,o.kt)("p",null,"\u521d\u59cb\u5316--\x3emountChildFibers"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {\n  if (current === null) {\n    // If this is a fresh new component that hasn't been rendered yet, we\n    // won't update its child set by applying minimal side-effects. Instead,\n    // we will add them all to the child before it gets rendered. That means\n    // we can optimize this reconciliation pass by not tracking side-effects.\n    console.log('%c=reconcileChildren mount', 'blueviolet');\n    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);\n    console.log('%c=reconcileChildren mount \u8fd4\u56de\u503cworkInProgress.child', 'blueviolet',workInProgress.child);\n  } else {\n    // If the current child is the same as the work in progress, it means that\n    // we haven't yet started any work on these children. Therefore, we use\n    // the clone algorithm to create a copy of all the current children.\n    // If we had any progressed work already, that is invalid at this point so\n    // let's throw it out.\n    console.log('%c=reconcileChildren update', 'yellow');\n    workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);\n  }\n}\n")),(0,o.kt)("h3",{id:"childreconciler"},"ChildReconciler"),(0,o.kt)("p",null,"\u4ece\u8be5\u51fd\u6570\u540d\u5c31\u80fd\u770b\u51fa\u8fd9\u662fReconciler\u6a21\u5757\u7684\u6838\u5fc3\u90e8\u5206\u3002\u90a3\u4e48\u4ed6\u7a76\u7adf\u505a\u4e86\u4ec0\u4e48\u5462\uff1f"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e mount \u7684\u7ec4\u4ef6\uff0c\u4ed6\u4f1a\u521b\u5efa\u65b0\u7684\u5b50 Fiber \u8282\u70b9\uff1b"),(0,o.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e update \u7684\u7ec4\u4ef6\uff0c\u4ed6\u4f1a\u5c06\u5f53\u524d\u7ec4\u4ef6\u4e0e\u8be5\u7ec4\u4ef6\u5728\u4e0a\u6b21\u66f4\u65b0\u65f6\u5bf9\u5e94\u7684 Fiber \u8282\u70b9\u6bd4\u8f83\uff08\u4e5f\u5c31\u662f\u4fd7\u79f0\u7684Diff \u7b97\u6cd5\uff09\uff0c\u5c06\u6bd4\u8f83\u7684\u7ed3\u679c\u751f\u6210\u65b0 Fiber \u8282\u70b9\u3002")),(0,o.kt)("p",null,"\u4e0d\u8bba\u8d70\u54ea\u4e2a\u903b\u8f91\uff0c\u6700\u7ec8\u4ed6\u4f1a\u751f\u6210\u65b0\u7684\u5b50 Fiber \u8282\u70b9\u5e76\u8d4b\u503c\u7ed9workInProgress.child\uff0c\u4f5c\u4e3a\u672c\u6b21 beginWork \u8fd4\u56de\u503c\uff0c\u5e76\u4f5c\u4e3a\u4e0b\u6b21performUnitOfWork\u6267\u884c\u65f6workInProgress\u7684\u4f20\u53c2\u3002"),(0,o.kt)("p",null,"mountChildFibers\u4e0ereconcileChildFibers\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u7684\u903b\u8f91\u57fa\u672c\u4e00\u81f4\u3002\u552f\u4e00\u7684\u533a\u522b\u662f\uff1areconcileChildFibers \u4f1a\u4e3a\u751f\u6210\u7684 Fiber \u8282\u70b9\u5e26\u4e0aeffectTag\u5c5e\u6027\uff0c\u800c mountChildFibers \u4e0d\u4f1a\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"var mountChildFibers = ChildReconciler(false);\n\n// \u8fd9\u4e2a\u4ee3\u7801\u5f88\u957f 1k\nfunction ChildReconciler(shouldTrackSideEffects) {\n\n}\n")),(0,o.kt)("p",null,"root.render(React.createElement(Test, null));\n\u8c03\u7528\u7684\u53c2\u6570\u662f\uff1aReact.createElement(Test, null)\u5904\u7406\u4e4b\u540e\u7684\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"var ReactElement = function (type, key, ref, self, source, owner, props) {\n    var element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      ref: ref,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n\n    return element;\n}\n")),(0,o.kt)("h2",{id:"\u7b2c\u4e09\u6b21-beginwork"},"\u7b2c\u4e09\u6b21 beginWork"),(0,o.kt)("p",null,"\u6b64\u65f6\u6784\u5efa code() \u751f\u6210\u7684\u8282\u70b9"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"      case HostComponent:\n        console.log(`%c=beginWork()=end 7 updateHostComponent$1,\u5373\u539f\u751f DOM \u7ec4\u4ef6\u5bf9\u5e94\u7684 Fiber\u8282\u70b9:`, 'color:magenta', { type: workInProgress.type })\n        return updateHostComponent$1(current, workInProgress, renderLanes);\n")),(0,o.kt)("p",null,"\u6b64\u65f6 workInProgress"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"actualDuration:0\nactualStartTime:-1\nalternate:null\nchild:null\nchildLanes:0\ndeletions: null\ndependencies: null\nelementType:\"div\"\nflags: 0\nindex : 0\nkey : null\nlanes : 0\nmemoizedProps:null\nmemoizedState:null\nmode:1\npendingProps:{id: 'div1', className: 'c1', children: Array(4)}\nref:null\nreturn:FiberNode {tag: 0, key: null, stateNode: null, elementType: \u0192, type: \u0192, \u2026}\nselfBaseDuration:0,\nsibling:null\nstateNode:null\nsubtreeFlags:0\ntag:5\ntreeBaseDuration:0\ntype:\"div\"\nupdateQueue:null\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"function updateHostComponent$1(current, workInProgress, renderLanes) {\n  pushHostContext(workInProgress);\n\n  if (current === null) {\n    tryToClaimNextHydratableInstance(workInProgress);\n  }\n\n  var type = workInProgress.type;\n  var nextProps = workInProgress.pendingProps;\n  var prevProps = current !== null ? current.memoizedProps : null;\n  var nextChildren = nextProps.children;\n  var isDirectTextChild = shouldSetTextContent(type, nextProps);\n\n  if (isDirectTextChild) {\n    // We special case a direct text child of a host node. This is a common\n    // case. We won't handle it as a reified child. We will instead handle\n    // this in the host environment that also has access to this prop. That\n    // avoids allocating another HostText fiber and traversing it.\n    nextChildren = null;\n  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {\n    // If we're switching from a direct text child to a normal child, or to\n    // empty, we need to schedule the text content to be reset.\n    workInProgress.flags |= ContentReset;\n  }\n\n  markRef$1(current, workInProgress);\n  console.log('=reconcileChildren 11')\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n")),(0,o.kt)("h3",{id:"reactcreateelement-\u65e7api"},"React.createElement \u65e7api"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://cloud.tencent.com/developer/article/2135083"},"https://cloud.tencent.com/developer/article/2135083"),"\nreact17 \u4e4b\u540e\u6211\u4eec\u53ef\u4ee5\u4e0d\u518d\u4f9d\u8d56 React.createElement \u8fd9\u4e2a api \u4e86\uff0c\u4f46\u662f\u5b9e\u9645\u573a\u666f\u4e2d\u4ee5\u53ca\u5f88\u591a\u5f00\u6e90\u5305\u4e2d\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u901a\u8fc7 React.createElement \u624b\u52a8\u521b\u5efa\u5143\u7d20\u7684\u573a\u666f:"),(0,o.kt)("p",null,"React.createElement \u5176\u63a5\u6536\u4e09\u4e2a\u6216\u4ee5\u4e0a\u53c2\u6570\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"type\uff1a\u8981\u521b\u5efa\u7684 React \u5143\u7d20\u7c7b\u578b\uff0c\u53ef\u4ee5\u662f\u6807\u7b7e\u540d\u79f0\u5b57\u7b26\u4e32\uff0c\u5982 'div' \u6216\u8005 'span' \u7b49\uff1b\u4e5f\u53ef\u4ee5\u662f React\u7ec4\u4ef6 \u7c7b\u578b(class\u7ec4\u4ef6\u6216\u8005\u51fd\u6570\u7ec4\u4ef6)\uff1b\u6216\u8005\u662f React fragment \u7c7b\u578b\u3002"),(0,o.kt)("li",{parentName:"ul"},"config\uff1a\u5199\u5728\u6807\u7b7e\u4e0a\u7684\u5c5e\u6027\u7684\u96c6\u5408\uff0cjs \u5bf9\u8c61\u683c\u5f0f\uff0c\u82e5\u6807\u7b7e\u4e0a\u672a\u6dfb\u52a0\u4efb\u4f55\u5c5e\u6027\u5219\u4e3a null\u3002"),(0,o.kt)("li",{parentName:"ul"},"children\uff1a\u4ece\u7b2c\u4e09\u4e2a\u53c2\u6570\u5f00\u59cb\u540e\u7684\u53c2\u6570\u4e3a\u5f53\u524d\u521b\u5efa\u7684React\u5143\u7d20\u7684\u5b50\u8282\u70b9\uff0c\u6bcf\u4e2a\u53c2\u6570\u7684\u7c7b\u578b\uff0c\u82e5\u662f\u5f53\u524d\u5143\u7d20\u8282\u70b9\u7684 textContent \u5219\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b\uff1b\u5426\u5219\u4e3a\u65b0\u7684 React.createElement \u521b\u5efa\u7684\u5143\u7d20\u3002")),(0,o.kt)("h2",{id:"\u5f00\u59cb"},"\u5f00\u59cb"),(0,o.kt)("mermaid",{value:'flowchart TD\nA1("ReactDOM.createRoot(document.getElementById(\'root\'))")--1FiberRoot\u521b\u5efa--\x3eA2("return new ReactDOMRoot(root)")--\x3e1FiberRoot--\x3eA6("root=createContainer(container")--\x3eA7("return createFiberRoot(containerInfo")--1FiberRoot\u521d\u59cb\u5316\u76f8\u5173\u53ea\u8c03\u7528\u4e00\u6b21--\x3eA8("root=new FiberRootNode(containerInfo")\n\nA7--2root.current=uninitializedFiber--\x3eA11("uninitializedFiber=createHostRootFiber(tag,isStrictMode)")--\x3eA12("return createFiber(HostRoot")\n\nA1--2\u5f00\u542frender--\x3eA3("root.render(<\u7ec4\u4ef6>)")--\x3eA4("ReactDOMRoot.prototype.render")\nA4--\u5f00\u59cb\u6e32\u67d3,\u6ce8\u610f\u975e\u6279\u91cf--\x3eA5("updateContainer(children, root")'}),(0,o.kt)("h2",{id:"\u63a5\u4e0a\u9762updatecontainer"},"\u63a5\u4e0a\u9762updateContainer"),(0,o.kt)("p",null,"fiber \u534f\u8c03\u8fc7\u7a0b,\u6784\u5efafiber\u6811\u7684\u9636\u6bb5\u53ef\u4e2d\u65ad"),(0,o.kt)("mermaid",{value:'flowchart TD\nA1("updateContainer(children, root")--\x3eA2("root=scheduleUpdateOnFiber(current$1,lane")--\x3e A3("ensureRootIsScheduled(root,eventTime)")\n\nA3--"ensureRootIsScheduled(root,currentTime)\u51fd\u6570\u4e2d"--\x3eifB{{"\u66f4\u65b0\u65b9\u5f0f?newCallbackPriority ===SyncLane"}}\n\nD1("scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null,root))")\nD2("newCallbackNode=scheduleCallback$1(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null,root))")\n\nifB--true\u5f02\u6b65\u66f4\u65b0legacy\u6a21\u5f0f--\x3eD1\nifB--\u521d\u6b21\u6e32\u67d3\u9ed8\u8ba4false,\u540c\u6b65\u66f4\u65b0concurrent\u6a21\u5f0f--\x3eD2\n\nD2--\x3eD3("scheduleCallback$1")--\x3eD4("performConcurrentWorkOnRoot(root, didTimeout){<br> exitStatus = renderRootSync(root,lanes)}")\n\nD4--1--\x3eD5("renderRootSync(root,lanes)")\n\nD4--"2.exitStatus!==RootInProgress"--\x3eC1("finishConcurrentRender(root,exitStatus)render\u9636\u6bb5\u7ed3\u675f,commit\u9636\u6bb5\u524d")\n\nD5(workLoopSync)--\x3eA0Aif\nA0Aif{{workInProgress!=null?}}--\u4e0d\u4e3anull--\x3eE1\nA0Aif--\u4e3anull--\x3eendW(\u7ed3\u675f\u5f53\u524d\u5faa\u73af)\n\nsubgraph render1[\u6784\u5efafiber\u6811/\u534f\u8c03\u9636\u6bb5:render\u662f\u4e00\u4e2a\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u7684\u8fc7\u7a0b\u6838\u5fc3\u51fd\u6570beginWork\u548ccompleteUnitOfWork]\n\n  E1(performUnitOfWork:\u6df1\u5ea6\u904d\u5386)\n\n  E1--1.\u904d\u5386\u5230\u7684\u8282\u70b9\u6267\u884cbeginWork\u521b\u5efa\u5b50fiber\u8282\u70b9--\x3eE2(beginWork$1\u5904\u7406\u5b8c\u8fd4\u56denext)\n\n  E1--2.\u82e5\u5f53\u524d\u8282\u70b9\u4e0d\u5b58\u5728\u5b50\u8282\u70b9:next=null--\x3eE6B(completeUnitOfWork)\n  \n  E2--current=null\u521d\u59cb\u5316:tag\u8fdb\u5165\u4e0d\u540ccase--\x3eE6A(case:HostComponent\u4e3a\u4f8b)--\x3eE6A1(updateHostComponent$1)--\x3eE6A2(reconcileChildren)--current!=null--\x3eE6A3(reconcileChildFibers)\n\n\t%% subgraph beginWork2[beginWork\u7b2c\u4e8c\u9636\u6bb5]\n\tE6A2--current==null--\x3ez1("mountChildFibers:beginWork\u7b2c\u4e8c\u9636\u6bb5")--\x3ez2(ChildReconciler)--case--\x3ez3(placeSingleChild)\n\t%% end\n\n  E2-.current!=null\u66f4\u65b0\u6d41\u7a0b.->E51(attemptEarlyBailoutIfNoScheduledUpdate)--\x3eE52(bailoutOnAlreadyFinishedWork)--\x3eE53(cloneChildFibers)\n\n  E6B--\x3eE6B1[\u4e3a\u4f20\u5165\u7684\u8282\u70b9\u6267\u884ccompleteWork:\u6267\u884c\u4e0d\u540ctag]--case:HostComponent\u5e76\u4e14current!=null--\x3eE6B2(update\u6d41\u7a0b:updateHostComponent)--\x3eE6A1A(prepareUpdate:\u5bf9\u6bd4props)--\x3eE6A1B(diffProperties)--\x3eE6A1C(markUpdate:\u8d4b\u503c\u66f4\u65b0\u7684flags\u4e5f\u53ebupdate)\n\n  E6B1--case:HostComponent-current=null--\x3eE6B3(\u4e3afiber\u521b\u5efadom:createInstance)\n  E6B3--case:HostComponent-current=null--\x3eE6B4(add child dom:appendAllChildren)\n  E6B3--\x3eE6B3A(createElement)--\x3eE6B3B(document.createElement)\n\n  E53--\x3ecreateWorkInProgress\n  E53-.tag\u7c7b\u578b\u8fdb\u5165\u4e0d\u540ccase.->E6A\n\n\t%% subgraph render2[\u6784\u5efaFiberNode]\n\tE6A3-.\u6839\u636e\u5b50\u8282\u70b9\u7c7b\u578b\u521b\u5efafiber\u8282\u70b9.->o1(reconcileSingleElement) --\x3eo2(createFiberFromElement) --\x3e o3(createFiberFromTypeAndProps) --fiber.type\u4e5f\u662f\u5728\u8fd9\u91cc\u8d4b\u503c--\x3e o4(createFiber)--\x3e o5(return new FiberNode)\n\t%% end\nend'}),(0,o.kt)("h2",{id:"commit\u9636\u6bb5"},"commit\u9636\u6bb5"),(0,o.kt)("p",null,"commit\u9636\u6bb5\u4e4bbeforeMutation\u548cmutation\u9636\u6bb5"),(0,o.kt)("mermaid",{value:'flowchart TD\nA1(finishConcurrentRender)--\x3eA2("commitRoot")--\x3eA3("commitRootImpl(root,")\n\nA3--\x3e2A\nA3(commitRootImpl)--\x3e3A\n\nsubgraph befor[beforeMutation\u9636\u6bb5]\n  2A(commitBeforeMutationEffects)--18\u6216\u9ad8\u7248\u672c--\x3e2B(commitBeforeMutationEffects_begin)--\x3e2C(commitBeforeMutationEffects_complete)--\x3e2D(commitBeforeMutationEffectsOnFiber)\nend\n\nsubgraph Mutation[mutation\u9636\u6bb5]\n  3A(commitMutationEffects)--\x3e3B(commitMutationEffectsOnFiber)--case\u91cc\u9762\u90fd\u4f1a\u6267\u884c--\x3e3C(recursivelyTraverseMutationEffects)\n\n  3C--\x3e3B\n  3B--\x3e3D1(commitReconciliationEffects)--\x3e3E(commitPlacement)\n  3B--case:SimpleMemoComponent--\x3e3D2(commitHookEffectListUnmount)\n  3B--case:HostComponent--\x3e3D3(commitUpdate)\n  3E--HostComponent--\x3e3E1(insertOrAppendPlacementNode)--\x3e3E1a(insertBefore)\n  3E--HostPortal--\x3e3E2(insertOrAppendPlacementNodeIntoContainer)\n\n  3E1--\x3e3E1b(appendChild)\nend'}),(0,o.kt)("p",null,"commit\u9636\u6bb5\u4e4blayout\u6700\u540e\u9636\u6bb5"),(0,o.kt)("mermaid",{value:"flowchart TD\nC1(commitRootImpl)\nC1--\x3e4A\nC1--layout\u6700\u540e\u9636\u6bb5--\x3e5A\nsubgraph layout[layout\u9636\u6bb5]\n  4A(commitLayoutEffect)--\x3e4B(commitLayoutEffects_begin)--\x3e4C(commitLayoutMountEffects_complete)--\x3e4D(commitLayoutEffectOnFiber)\n\n  4D--case=ClassComponent--\x3e4E1(componentDidMount)--\x3e4E2(commitUpdateQueue)\n  4D--case=SimpleMemoComponent--\x3e4E3(commitHookEffectListMount)\n\n  5A(flushPassiveEffects)--\x3e5B(flushPassiveEffectsImpl)\n  5B--\u6267\u884cuseEffect\u7684\u9500\u6bc1\u51fd\u6570--\x3e5C1(commitPassiveUnmountEffects)\n  5B--\u6267\u884cuseEffect\u7684create\u51fd\u6570--\x3e5C2(commitPassiveMountEffects)\nend"}),(0,o.kt)("h2",{id:"\u5f00\u59cb1"},"\u5f00\u59cb1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const root = ReactDOM.createRoot(document.getElementById('root'))\nconsole.log(\"=app=root:\", root)\nroot.render(<Test />);\n\nfunction createRoot(container, options) {\n        // \u7701\u7565\n    console.log('%c=\u4e00\u5207\u5f00\u59cb1:createRoot(', 'color:red', { createRoot: container, options })\n    var root = createContainer(container, ConcurrentRoot, null, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);\n    markContainerAsRoot(root.current, container);\n    var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;\n    listenToAllSupportedEvents(rootContainerElement);\n    return new ReactDOMRoot(root);\n}\n\nfunction createContainer(containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {\n    var hydrate = false;\n    var initialChildren = null;\n    console.log('\u521d\u59cb/\u66f4\u65b0--\x3eFiberRoot:a--\x3ecreateContainer')\n    return createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);\n}\n")),(0,o.kt)("p",null,"FiberRootNode\u662f\u521d\u59cb\u5316\u76f8\u5173\u53ea\u8c03\u7528\u4e00\u6b21"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"function createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, // TODO: We have several of these arguments that are conceptually part of the\n    // host config, but because they are passed in at runtime, we have to thread\n    // them through the root constructor. Perhaps we should put them all into a\n    // single type, like a DynamicHostConfig that is defined by the renderer.\n    identifierPrefix, onRecoverableError, transitionCallbacks) {\n    var root = new FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError);\n\n    return root;\n}\n\nfunction FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError) {\n    console.log('==FiberRootNode\u662f\u521d\u59cb\u5316\u76f8\u5173\u53ea\u8c03\u7528\u4e00\u6b21===')\n    this.tag = tag;\n    this.containerInfo = containerInfo;\n    this.pendingChildren = null;\n    this.current = null;\n    this.pingCache = null;\n    this.finishedWork = null;\n    this.timeoutHandle = noTimeout;\n    this.context = null;\n    this.pendingContext = null;\n    this.callbackNode = null;\n    this.callbackPriority = NoLane;\n    this.eventTimes = createLaneMap(NoLanes);\n    this.expirationTimes = createLaneMap(NoTimestamp);\n    this.pendingLanes = NoLanes;\n    this.suspendedLanes = NoLanes;\n    this.pingedLanes = NoLanes;\n    this.expiredLanes = NoLanes;\n    this.mutableReadLanes = NoLanes;\n    this.finishedLanes = NoLanes;\n    this.entangledLanes = NoLanes;\n    this.entanglements = createLaneMap(NoLanes);\n    this.identifierPrefix = identifierPrefix;\n    this.onRecoverableError = onRecoverableError;\n\n    {\n        this.mutableSourceEagerHydrationData = null;\n    }\n\n    {\n        this.effectDuration = 0;\n        this.passiveEffectDuration = 0;\n    }\n\n    {\n        this.memoizedUpdaters = new Set();\n        var pendingUpdatersLaneMap = this.pendingUpdatersLaneMap = [];\n\n        for (var _i = 0; _i < TotalLanes; _i++) {\n            pendingUpdatersLaneMap.push(new Set());\n        }\n    }\n\n    {\n        switch (tag) {\n            case ConcurrentRoot:\n                this._debugRootType = hydrate ? 'hydrateRoot()' : 'createRoot()';\n                break;\n\n            case LegacyRoot:\n                this._debugRootType = hydrate ? 'hydrate()' : 'render()';\n                break;\n        }\n    }\n}\n")),(0,o.kt)("p",null,"\u53ef\u89c1children \u5c31\u662f\u6839\u8282\u70b9"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"ReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function (children) {\n    console.log('%c=\u4e00\u5207\u5f00\u59cb3:', 'color:red', 'ReactDOMRoot.prototype.render\u8c03\u7528updateContainer()\u5f00\u542frender\u9636\u6bb5==', { children });\n    var root = this._internalRoot;\n    // \u7701\u7565\u51fd\u6570\n    updateContainer(children, root, null, null);\n};\n")),(0,o.kt)("h2",{id:"\u5f00\u59cb2-updatecontainer"},"\u5f00\u59cb2 updateContainer("),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"function updateContainer(element, container, parentComponent, callback) {\n    {\n        onScheduleRoot(container, element);\n    }\n\n    var current$1 = container.current;\n    var eventTime = requestEventTime();\n    var lane = requestUpdateLane(current$1);\n\n    {\n        markRenderScheduled(lane);\n    }\n\n    var context = getContextForSubtree(parentComponent);\n\n    if (container.context === null) {\n        container.context = context;\n    } else {\n        container.pendingContext = context;\n    }\n\n    // \u7701\u7565\n    var update = createUpdate(eventTime, lane); // Caution: React DevTools currently depends on this property\n    // being called \"element\".\n\n    update.payload = {\n        element: element\n    };\n    callback = callback === undefined ? null : callback;\n\n\n    // \u7701\u7565\n    console.log('==render\u9636\u6bb5\u51c6\u5907\uff1aupdateContainer\u8c03\u7528enqueueUpdate()\u548cscheduleUpdateOnFiber()==')\n    enqueueUpdate(current$1, update);\n    var root = scheduleUpdateOnFiber(current$1, lane, eventTime);\n\n    if (root !== null) {\n        entangleTransitions(root, current$1, lane);\n    }\n\n    return lane;\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"function scheduleUpdateOnFiber(fiber, lane, eventTime) {\n    var root = markUpdateLaneFromFiberToRoot(fiber, lane);\n    console.log('==render\u9636\u6bb5\u51c6\u5907:scheduleUpdateOnFiber()\u8c03\u7528ensureRootIsScheduled()==')\n    ensureRootIsScheduled(root, eventTime);\n    return root;\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"function ensureRootIsScheduled(root, currentTime) {\n    // \u7701\u7565\n    if (newCallbackPriority === SyncLane) {\n        // Special case: Sync React callbacks are scheduled on a special\n        // internal queue\n        if (root.tag === LegacyRoot) {\n            if (ReactCurrentActQueue$1.isBatchingLegacy !== null) {\n                ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;\n            }\n\n            console.log('%c=render\u9636\u6bb5\u51c6\u5907:ensureRootIsScheduled\u8c03\u7528performSyncWorkOnRoot\uff1a\u5f02\u6b65\u66f4\u65b0legacy\u6a21\u5f0f1==', 'color:red')\n            scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));\n        } else {\n\n            console.log('%c=render\u9636\u6bb5\u51c6\u5907:ensureRootIsScheduled\u8c03\u7528performSyncWorkOnRoot\uff1a\u5f02\u6b65\u66f4\u65b0legacy\u6a21\u5f0f2==', 'color:red')\n            scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));\n        }\n\n        // \u7701\u7565\n    } else {\n        // \u7701\u7565\n        // console.log('\u66f4\u65b0\u6d41\u7a0b--\x3e0-c2: performConcurrentWorkOnRoot')\n        console.log('%c=render\u9636\u6bb5\u51c6\u5907:', 'color:red', 'ensureRootIsScheduled()\u8c03\u7528performConcurrentWorkOnRoot--\u540c\u6b65\u66f4\u65b0:concurrent\u6a21\u5f0f==')\n        newCallbackNode = scheduleCallback$1(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root));\n    }\n\n    root.callbackPriority = newCallbackPriority;\n    root.callbackNode = newCallbackNode;\n}\n")),(0,o.kt)("h3",{id:"performconcurrentworkonroot-\u8fd9\u4e2a\u51fd\u6570\u5728render\u7ed3\u675f\u4f1a\u5f00\u542fcommit\u9636\u6bb5"},"performConcurrentWorkOnRoot \u8fd9\u4e2a\u51fd\u6570\u5728render\u7ed3\u675f\u4f1a\u5f00\u542fcommit\u9636\u6bb5"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"function performConcurrentWorkOnRoot(root, didTimeout) {\n    // \u7701\u7565\n    console.log('%c==render\u9636\u6bb5\u51c6\u5907:\u91cd\u70b9\u51fd\u6570performConcurrentWorkOnRoot,\u8fd9\u4e2a\u51fd\u6570\u5728render\u7ed3\u675f\u4f1a\u5f00\u542fcommit\u9636\u6bb5', 'color:red', 'color:cyan');\n\n    console.log('==render\u9636\u6bb5\u51c6\u5907:performConcurrentWorkOnRoot\u8c03\u7528renderRootSync():\u540c\u6b65\u66f4\u65b0concurrent\u6a21\u5f0f:', { shouldTimeSlice });\n    var exitStatus = shouldTimeSlice ? renderRootConcurrent(root, lanes) : renderRootSync(root, lanes);\n\n    if (exitStatus !== RootInProgress) {\n        // \u7701\u7565\n\n        if (exitStatus === RootDidNotComplete) {\n            markRootSuspended$1(root, lanes);\n        } else {\n            // \u7701\u7565\n\n            root.finishedWork = finishedWork;\n            root.finishedLanes = lanes;\n            console.log(`%c=commit\u9636\u6bb5=\u524d=render\u9636\u6bb5\u7ed3\u675f=performConcurrentWorkOnRoot\u8c03\u7528finishConcurrentRender--\x3ecommitRoot`, 'color:cyan')\n            finishConcurrentRender(root, exitStatus, lanes);\n        }\n    }\n\n    // \u7701\u7565\n\n    return null;\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"function renderRootSync(root, lanes) {\n    var prevExecutionContext = executionContext;\n    executionContext |= RenderContext;\n    var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack\n    // \u7701\u7565\n\n    do {\n        try {\n            console.log('%c=render\u9636\u6bb5\u51c6\u5907:', 'color:red', 'renderRootSync()\u8c03\u7528workLoopSync()-root:', { root });\n            workLoopSync();\n            break;\n        } catch (thrownValue) {\n            handleError(root, thrownValue);\n        }\n    } while (true);\n\n    // \u7701\u7565\n    workInProgressRoot = null;\n    workInProgressRootRenderLanes = NoLanes;\n    return workInProgressRootExitStatus;\n}\n")),(0,o.kt)("p",null,"\u56fe\u4f8b"),(0,o.kt)("p",null,(0,o.kt)("img",{src:r(41771).Z,width:"1808",height:"665"}),"\n",(0,o.kt)("img",{src:r(97296).Z,width:"1738",height:"580"}),"\n",(0,o.kt)("img",{src:r(41286).Z,width:"1920",height:"376"})),(0,o.kt)("h1",{id:"\u57fa\u7840"},"\u57fa\u7840"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"react\u628a\u6bcf\u4e2afiber\u5f53\u6210\u751f\u6210fiber\u6700\u5c0f\u5355\u5143,\u53ea\u8981\u8fed\u4ee3\u6240\u6709fiber\u5219\u5230\u9876\u7ea7Fiber\u65f6\u6574\u9897FiberTree\u4fbf\u751f\u6210\u4e86\u3002")),(0,o.kt)("h2",{id:"\u904d\u5386\u6d41\u7a0b"},"\u904d\u5386\u6d41\u7a0b"),(0,o.kt)("p",null,"Tree \u6784\u5efa\u7684\u904d\u5386\u987a\u5e8f\uff0c\u5b83\u4f1a\u4ee5\u65e7\u7684fiber tree\u4e3a\u84dd\u672c\uff0c\u628a\u6bcf\u4e2afiber\u4f5c\u4e3a\u4e00\u4e2a\u5de5\u4f5c\u5355\u5143\uff0c\u81ea\u9876\u5411\u4e0b\u9010\u8282\u70b9\u6784\u9020workInProgress tree\uff08\u6784\u5efa\u4e2d\u7684\u65b0fiber tree\uff09:"),(0,o.kt)("p",null,"\u6df1\u5ea6\u4f18\u5148\u904d\u5386"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"\u4ece\u9876\u70b9\u5f00\u59cb\u904d\u5386"),(0,o.kt)("li",{parentName:"ol"},"\u5982\u679c\u6709\u5b50\u8282\u70b9\uff0c\u5148\u904d\u5386\u5b50\u8282\u70b9\uff1b"),(0,o.kt)("li",{parentName:"ol"},"\u5982\u679c\u6ca1\u6709\u5b50\u8282\u70b9\uff0c\u5219\u770b\u6709\u6ca1\u6709\u5144\u5f1f\u8282\u70b9\uff0c\u6709\u5219\u904d\u5386\u5144\u5f1f\u8282\u70b9\uff0c\u5e76\u628aeffect\u5411\u4e0a\u5f52\u5e76"),(0,o.kt)("li",{parentName:"ol"},"\u5982\u679c\u6ca1\u6709\u5144\u5f1f\u8282\u70b9\uff0c\u5219\u770b\u6709\u6ca1\u6709\u7236\u5144\u5f1f\u8282\u70b9\uff0c\u6709\u5219\u904d\u5386\u7236\u5144\u5f1f\u8282\u70b9"),(0,o.kt)("li",{parentName:"ol"},"\u5982\u679c\u6ca1\u6709\u90fd\u6ca1\u6709\u4e86\uff0c\u90a3\u4e48\u904d\u5386\u7ed3\u675f")),(0,o.kt)("mermaid",{value:"flowchart TD\n\n  A0(workLoopSync)--\u5f02\u6b65--\x3eA0Aif\n  A0A(workLoopConcurrent)--\u540c\u6b65--\x3eA0Aif{{workInProgress!==null}}\n  A0Aif--\x3eA1\n  A0Aif--\u4e3anull--\x3eendW(\u7ed3\u675f\u5f53\u524d\u5faa\u73af)\n\n  A1(performUnitOfWork)--\x3eA2(beginWork\u5904\u7406\u5b8c\u8fd4\u56denext)--\x3eA2if{{next=null?}}\n\n  A3A(\u5c06\u4e0b\u4e00\u5de5\u4f5c\u5355\u5143\u4e3a\u5f53\u524d\u5de5\u4f5c\u5355\u5143:workInProgress=next)\n  A3A--\x3eA0Aif\n  A2if--next\u4e3anull--\x3eA3B(completeUnitOfWork)\n  A2if--next\u4e0d\u4e3anull--\x3eA3A\n\n  A3Bif{{\u8282\u70b9\u662f\u5426\u7a7a:completedWork!=null?}}\n  A3B--\x3eA3Bif--\u4e3anull--\x3eA0Aif\n  A3Bif--\u975enull--\x3eA3Bif2{{\u662f\u5426\u5b58\u5728\u5144\u5f1f\u8282\u70b9:siblingFiber!=null?}}\n\n  A3Bif2--\u5144\u5f1f\u8282\u70b9null--\x3eA3C1(\u56de\u6eaf\u5230\u7236\u8282\u70b9:completedWork=returnFiber)--\x3eA3Bif\n  A3Bif2--\u5144\u5f1f\u8282\u70b9!null--\x3eA3C2(\u5c06\u5144\u5f1f\u8282\u70b9\u4f5c\u4e3a\u4e0b\u4e00\u5de5\u4f5c\u5355\u5143)--\x3eA0Aif"}),(0,o.kt)("h2",{id:"workinprogress-\u5185\u5b58\u4e2d\u6784\u5efa\u7684\u6811\u548c\u53cc\u7f13\u5b58"},"workInProgress \u5185\u5b58\u4e2d\u6784\u5efa\u7684\u6811\u548c\u53cc\u7f13\u5b58"),(0,o.kt)("p",null,"\u771f\u5b9edom\u5bf9\u5e94\u5728\u5185\u5b58\u4e2d\u7684Fiber\u8282\u70b9\u5f62\u6210Fiber\u6811:current Fiber"),(0,o.kt)("p",null,"workInProgress Fiber\u548ccurrent Fiber\u8fd9\u4e24\u9897\u6811\u7684\u8282\u70b9\u901a\u8fc7alternate\u76f8\u8fde."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"performUnitOfWork \u4f5c\u7528\u521b\u5efa\u4e0b\u4e00\u4e2a Fiber \u8282\u70b9\uff0c\u5e76\u8d4b\u503c\u7ed9 workInProgress\uff0c\u540c\u65f6\u628a workInProgress \u4e0e\u5df2\u521b\u5efa\u7684 Fiber \u8282\u70b9\u8fde\u63a5\u8d77\u6765\u6784\u6210 Fiber \u6811\u3002\n\nworkInProgress fiber tree\uff1a\u5185\u5b58\u4e2d\u6784\u5efa\u7684\u6811\u3002\n\u66f4\u65b0\u8fc7\u7a0b\u4e2d\u6784\u5efa\u7684 new fiber tree\n\ncurrent fiber tree\uff1a\u6b63\u5728\u89c6\u56fe\u5c42\u6e32\u67d3\u7684\u6811\u3002\nold fiber tree\uff0c\u5bf9\u5e94\u5f53\u524d\u5c4f\u5e55\u663e\u793a\u7684\u5185\u5bb9\uff0c\u901a\u8fc7\u6839\u8282\u70b9 fiberRootNode \u7684 currrent \u6307\u9488\u53ef\u4ee5\u8bbf\u95ee\u3002\n")),(0,o.kt)("h3",{id:"\u53cc\u7f13\u5b58\u4ee5current-tree\u4e3a\u4e3bworkinprogress-tree\u4e3a\u8f85"},"\u53cc\u7f13\u5b58\uff0c\u4ee5current tree\u4e3a\u4e3b\uff0cworkInProgress tree\u4e3a\u8f85\u3002"),(0,o.kt)("p",null,"\u53cc\u7f13\u51b2\u673a\u5236\u662fReact\u7ba1\u7406\u66f4\u65b0\u5de5\u4f5c\u7684\u4e00\u79cd\u624b\u6bb5\uff0c\u4e5f\u662f\u63d0\u5347\u7528\u6237\u4f53\u9a8c\u7684\u91cd\u8981\u673a\u5236\u3002"),(0,o.kt)("p",null,"\u5f53React\u5f00\u59cb\u66f4\u65b0\u5de5\u4f5c\u4e4b\u540e\uff0c\u4f1a\u6709\u4e24\u4e2afiber\u6811\uff0c\u4e00\u4e2acurrent\u6811\uff0c\u662f\u5f53\u524d\u663e\u793a\u5728\u9875\u9762\u4e0a\u5185\u5bb9\u5bf9\u5e94\u7684fiber\u6811\u3002\u53e6\u4e00\u4e2a\u662fworkInProgress\u6811\uff0c\u5b83\u662f\u4f9d\u636ecurrent\u6811\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u6784\u5efa\u51fa\u6765\u7684\u65b0\u7684fiber\u6811\uff0c\u6240\u6709\u7684\u66f4\u65b0\u6700\u7ec8\u90fd\u4f1a\u4f53\u73b0\u5728workInProgress\u6811\u4e0a\u3002\u5f53\u66f4\u65b0\u672a\u5b8c\u6210\u7684\u65f6\u5019\uff0c\u9875\u9762\u4e0a\u59cb\u7ec8\u5c55\u793acurrent\u6811\u5bf9\u5e94\u7684\u5185\u5bb9\uff0c\u5f53\u66f4\u65b0\u7ed3\u675f\u65f6\uff08commit\u9636\u6bb5\u7684\u6700\u540e\uff09\uff0c\u9875\u9762\u5185\u5bb9\u5bf9\u5e94\u7684fiber\u6811\u4f1a\u7531current\u6811\u5207\u6362\u5230workInProgress\u6811\uff0c\u6b64\u65f6workInProgress\u6811\u5373\u6210\u4e3a\u65b0\u7684current\u6811\u3002"),(0,o.kt)("p",null,"\u6700\u7ec8commit\u9636\u6bb5\u5b8c\u6210\u65f6\uff0c\u4e24\u68f5\u6811\u4f1a\u8fdb\u884c\u5207\u6362\u3002\n\u5728\u672a\u66f4\u65b0\u5b8c\u6210\u65f6\u4f9d\u65e7\u5c55\u793a\u65e7\u5185\u5bb9\uff0c\u4fdd\u6301\u4ea4\u4e92\uff0c\u5f53\u66f4\u65b0\u5b8c\u6210\u7acb\u5373\u5207\u6362\u5230\u65b0\u5185\u5bb9\uff0c\u8fd9\u6837\u53ef\u4ee5\u505a\u5230\u65b0\u5185\u5bb9\u548c\u65e7\u5185\u5bb9\u65e0\u7f1d\u5207\u6362\u3002"),(0,o.kt)("p",null,"\u6e32\u67d3\u6d41\u7a0b\u4e2d\uff0c\u5148\u590d\u7528current\u6811\uff08rootFiber\uff09\u7684alternate \u4f5c\u4e3a workInProgress\u3002\n\u6784\u5efaworkInProgress Fiber\u53d1\u751f\u5728createWorkInProgress\u4e2d\uff0c\u5b83\u80fd\u521b\u5efa\u6216\u8005\u590d\u7528Fiber"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"  function createWorkInProgress(current, pendingProps) {\n    var workInProgress = current.alternate;\n    // \u533a\u5206\u662f\u5728mount\u65f6\u8fd8\u662f\u5728update\u65f6\n    if (workInProgress === null) {\n      // We use a double buffering pooling technique because we know that we'll\n      // only ever need at most two versions of a tree. We pool the \"other\" unused\n      // node that we're free to reuse. This is lazily created to avoid allocating\n      // extra objects for things that are never updated. It also allow us to\n      // reclaim the extra memory if needed.\n      console.log('==createWorkInProgress--\x3e,\u6ca1\u6709\u5c31\u521b\u5efa\u4e00\u4e2a')\n      workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);\n      workInProgress.elementType = current.elementType;\n      workInProgress.type = current.type;\n      workInProgress.stateNode = current.stateNode;\n\n      {\n        // DEV-only fields\n        workInProgress._debugSource = current._debugSource;\n        workInProgress._debugOwner = current._debugOwner;\n        workInProgress._debugHookTypes = current._debugHookTypes;\n      }\n      console.log('==createWorkInProgress--\x3e,workInProgress.alternate\u6307\u5b9a\u4e3acurrent')\n      workInProgress.alternate = current;\n      current.alternate = workInProgress;\n    } else {\n      // \u590d\u7528\u5c5e\u6027\n      workInProgress.pendingProps = pendingProps; // Needed because Blocks store data on type.\n\n      workInProgress.type = current.type; // We already have an alternate.\n      // Reset the effect tag.\n\n      workInProgress.flags = NoFlags; // The effects are no longer valid.\n\n      workInProgress.subtreeFlags = NoFlags;\n      workInProgress.deletions = null;\n\n      {\n        // We intentionally reset, rather than copy, actualDuration & actualStartTime.\n        // This prevents time from endlessly accumulating in new commits.\n        // This has the downside of resetting values for different priority renders,\n        // But works for yielding (the common case) and should support resuming.\n        workInProgress.actualDuration = 0;\n        workInProgress.actualStartTime = -1;\n      }\n    } // Reset all effects except static ones.\n    // Static effects are not specific to a render.\n\n\n    workInProgress.flags = current.flags & StaticMask;\n    // \u590d\u7528\u5c5e\u6027\n    workInProgress.childLanes = current.childLanes;\n    workInProgress.lanes = current.lanes;\n    workInProgress.child = current.child;\n    workInProgress.memoizedProps = current.memoizedProps;\n    workInProgress.memoizedState = current.memoizedState;\n    workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so\n    // it cannot be shared with the current fiber.\n\n    var currentDependencies = current.dependencies;\n    workInProgress.dependencies = currentDependencies === null ? null : {\n      lanes: currentDependencies.lanes,\n      firstContext: currentDependencies.firstContext\n    }; // These will be overridden during the parent's reconciliation\n\n    workInProgress.sibling = current.sibling;\n    workInProgress.index = current.index;\n    workInProgress.ref = current.ref;\n\n    {\n      workInProgress.selfBaseDuration = current.selfBaseDuration;\n      workInProgress.treeBaseDuration = current.treeBaseDuration;\n    }\n\n    {\n      workInProgress._debugNeedsRemount = current._debugNeedsRemount;\n\n      switch (workInProgress.tag) {\n        case IndeterminateComponent:\n        case FunctionComponent:\n        case SimpleMemoComponent:\n          workInProgress.type = resolveFunctionForHotReloading(current.type);\n          break;\n\n        case ClassComponent:\n          workInProgress.type = resolveClassForHotReloading(current.type);\n          break;\n\n        case ForwardRef:\n          workInProgress.type = resolveForwardRefForHotReloading(current.type);\n          break;\n      }\n    }\n\n    return workInProgress;\n  } // Used to reuse a Fiber for a second pass.\n")),(0,o.kt)("h2",{id:"\u57fa\u78402diff"},"\u57fa\u78402\uff1aDiff"),(0,o.kt)("p",null,"diff\u672c\u8d28\u4e0a\u662f\u4e00\u4e9b\u8ba1\u7b97\uff08\u904d\u5386\u3001\u6bd4\u8f83\uff09\uff0c\u662f\u53ef\u62c6\u5206\u7684\uff08\u7b97\u4e00\u534a\u5f85\u4f1a\u513f\u63a5\u7740\u7b97\uff09 "),(0,o.kt)("p",null,"diff\u7684\u8fc7\u7a0b\uff0c\u4e5f\u5c31\u662feffect\u7684\u6536\u96c6\u8fc7\u7a0b\uff0c\u6b64\u8fc7\u7a0b\u4f1a\u627e\u51fa\u6240\u6709\u8282\u70b9\u7684\u53d8\u66f4\uff0c\u5982\u8282\u70b9\u65b0\u589e\u3001\u5220\u9664\u3001\u5c5e\u6027\u53d8\u66f4\u7b49\uff0c\u8fd9\u4e9b\u53d8\u66f4 react \u7edf\u79f0\u4e3a\u526f\u4f5c\u7528\uff08effect\uff09\uff0c\u968f\u7740\u6240\u6709\u7684\u8282\u70b9\uff08\u5de5\u4f5c\u5355\u5143\uff09\u5728\u5e27\u7a7a\u95f2\u65f6\u95f4\u9010\u4e2a\u6267\u884c\u5b8c\u6bd5\uff0c\u6700\u540e\u4ea7\u51fa\u7684\u7ed3\u679c\u662feffect list\uff0c\u4ece\u4e2d\u53ef\u4ee5\u77e5\u9053\u54ea\u4e9b\u8282\u70b9\u66f4\u65b0\u3001\u54ea\u4e9b\u8282\u70b9\u589e\u52a0\u3001\u54ea\u4e9b\u8282\u70b9\u5220\u9664\u4e86\u3002"),(0,o.kt)("p",null,"diff \u6bd4\u8f83\uff0c\u5c31\u662f\u5728\u6784\u5efa workInProgress fiber tree \u7684\u8fc7\u7a0b\u4e2d\uff0c\u5224\u65ad current fiber tree \u4e2d\u7684 fiber node \u662f\u5426\u53ef\u4ee5\u88ab workInProgress fiber tree \u590d\u7528\u3002"),(0,o.kt)("p",null,"\u80fd\u88ab\u590d\u7528\uff0c\u610f\u5473\u5728\u672c\u6b21\u66f4\u65b0\u4e2d\uff0c\u9700\u8981\u505a: \u7ec4\u4ef6\u7684 update \u4ee5\u53ca dom \u8282\u70b9\u7684 move\u3001update \u7b49\u64cd\u4f5c\uff1b"),(0,o.kt)("p",null,"\u4e0d\u53ef\u590d\u7528\uff0c\u5219\u610f\u5473\u7740\u9700\u8981\u505a: \u7ec4\u4ef6\u7684 mount\u3001unmount \u4ee5\u53ca dom \u8282\u70b9\u7684 insert\u3001delete \u7b49\u64cd\u4f5c\u3002"),(0,o.kt)("p",null,"\u5f53\u66f4\u65b0\u5b8c\u6210\u4ee5\u540e\uff0cfiberRootNode \u7684 current \u6307\u9488\u4f1a\u6307\u5411 workInProgress fiber tree\uff0c\u4f5c\u4e3a\u4e0b\u4e00\u6b21\u66f4\u65b0\u7684 current fiber tree"),(0,o.kt)("p",null,"\u6700\u540e\uff0c\u6df1\u5ea6\u8c03\u548c\u5b50\u8282\u70b9\uff0c\u6e32\u67d3\u89c6\u56fe\n\u904d\u5386fiber\u6811\uff0c\u4ee5workInProgress \u4f5c\u4e3a\u6700\u65b0\u7684\u6e32\u67d3\u6811\uff0c\u5373current Fiber \u6811\u3002"),(0,o.kt)("h1",{id:"\u4e00-\u6784\u5efaast"},"\u4e00. \u6784\u5efaAST"),(0,o.kt)("h2",{id:"\u6d41\u7a0b1--jsx\u8bed\u6cd5\u7cd6\u7684html\u7ed3\u6784\u662f\u901a\u8fc7babel\u5c06\u7ed3\u6784\u89e3\u6790\u8f6c\u6362\u4e3a-ast-\u8bed\u6cd5\u6811\u7ed3\u6784"},"\u6d41\u7a0b1.  jsx\u8bed\u6cd5\u7cd6\u7684html\u7ed3\u6784\u662f\u901a\u8fc7babel\u5c06\u7ed3\u6784\u89e3\u6790\u8f6c\u6362\u4e3a ast \u8bed\u6cd5\u6811\u7ed3\u6784"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"react 18\u4e2d\uff1a\u4f7f\u7528 babel\u5c06jsx\u4ee3\u7801\u8f6c\u6362\u4e3aroot.render()\u8c03\u7528,\u6b64\u65f6\u5c31\u5f97\u5230\u8f6c\u5316\u540e\u7684Ast\u6811\u7ed3\u6784")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"react17\u4e2d \u4f7f\u7528 babel\u5c06jsx\u4ee3\u7801\u8f6c\u6362\u4e3aReact.createElement()\u8c03\u7528,\u6b64\u65f6\u5c31\u5f97\u5230\u8f6c\u5316\u540e\u7684Ast\u6811\u7ed3\u6784"))),(0,o.kt)("h2",{id:"\u8f6c\u5316\u6d4b\u8bd5"},"\u8f6c\u5316\u6d4b\u8bd5:"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.babeljs.cn/repl"},"https://www.babeljs.cn/repl")),(0,o.kt)("h3",{id:"\u7b80\u5355\u5b9e\u4f8b1babel\u5c06jsx\u4ee3\u7801\u8f6c\u6362\u4e3areactcreateelement\u8c03\u7528"},"\u7b80\u5355\u5b9e\u4f8b1:babel\u5c06jsx\u4ee3\u7801\u8f6c\u6362\u4e3aReact.createElement()\u8c03\u7528"),(0,o.kt)("p",null,"\u6d4b\u8bd5\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://www.babeljs.cn/repl"},"https://www.babeljs.cn/repl")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'// jsx\nconst element = <h1 style = {{"color": "red"}}>123\n    <div>test</div>\n</h1>\n\n// babel \u7f16\u8bd1\u8fc7\u540e\u751f\u6210\u7684\u4ee3\u7801\nconst element = /*#__PURE__*/React.createElement("h1", {\n  style: {\n    "color": "red"\n  }\n}, "123", /*#__PURE__*/React.createElement("div", null, "test"));\n')),(0,o.kt)("h3",{id:"\u7b80\u5355\u5b9e\u4f8b2\u4e0d\u4f7f\u7528babel"},"\u7b80\u5355\u5b9e\u4f8b2:\u4e0d\u4f7f\u7528babel"),(0,o.kt)("p",null,"\u6e32\u67d3\u4ee3\u7801\uff1aexample-code\\\u4f8b-1-jsx-ast-r17.html"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},"<script>\nconst container = document.getElementById('root');\nconst element = React.createElement(\n    'div',\n    { className: 'red' },\n    'Click Me'\n)\nconsole.log('createElement \u8f6c\u5316\u540east\u6811\u7684\u7ed3\u6784:', element)\nReactDOM.render(element, container)\n/*\n{\n    $$typeof: Symbol(react.element)\n    key: null\n    props:\n    children: \"Click Me\"\n    className: \"red\"\n    [[Prototype]]: Object\n    ref: null\n    type: \"div\"\n    _owner: null\n    _store: {validated: false}\\\n}\n*/\n<\/script>\n")),(0,o.kt)("h3",{id:"\u7b80\u5355\u5b9e\u4f8b3\u4f7f\u7528babel"},"\u7b80\u5355\u5b9e\u4f8b3\uff1a\u4f7f\u7528babel"),(0,o.kt)("p",null,"\u6e32\u67d3\u4ee3\u7801\uff1aexample-code\\\u4f8b4-\u5728html-\u4f7f\u7528babel\u8f6c\u4e49jsx.html"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<script type="text/babel">\n  function Test() {\n    return (\n      <div className="red">Click Me</div>\n    )\n  }\n\n  ReactDOM.render(<Test />, document.getElementById(\'root\'))\n<\/script>\n')),(0,o.kt)("h2",{id:"\u6d41\u7a0b2\u5165\u53e3\u6b64\u65f6\u8fd8\u4e0d\u662ffiber\u6811\u6ca1\u6709\u5f00\u542frender\u9636\u6bb5"},"\u6d41\u7a0b2\uff1a\u5165\u53e3\uff1a\u6b64\u65f6\u8fd8\u4e0d\u662ffiber\u6811,\u6ca1\u6709\u5f00\u542frender\u9636\u6bb5"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"<script type=\"text/babel\">\n  const root = ReactDOM.createRoot(document.getElementById('root'))\n  root.render(<Test />);\n<\/script>\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"function createRoot(container, options) {\n  return new ReactDOMRoot(root);\n}\n\nReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function (children) {\n    console.log('%c ==\u4e00\u5207\u5f00\u59cb3:', 'color:red', 'ReactDOMRoot.prototype.render\u8c03\u7528updateContainer()\u5f00\u542frender\u9636\u6bb5==', children);\n    var root = this._internalRoot;\n}\n")),(0,o.kt)("h2",{id:"17\u7248\u672c\u7684\u5165\u53e3\u548c18\u4e0d\u4e00\u6837"},"17\u7248\u672c\u7684\u5165\u53e3,\u548c18\u4e0d\u4e00\u6837"),(0,o.kt)("p",null,"\u8fd9\u4e2a\u662f 17\u6216\u5219\u572818\u4e2d\u8c03\u7528ReactDOM.render(ast,domRoot)\u7684\u6d41\u7a0b\uff0c\u5982\u679c\u572818\u4e2d\u8c03\u7528ReactDOM.createRoot(domRoot).render(Ast) \u662f\u4e0d\u7528\u8d70\u4e0b\u9762\u7684\u6d41\u7a0b\u7684,18\u76f4\u63a5\u6d41\u7a0b\u56fe\u7684\u6d41\u7a0b\u6784\u5efafiber\u548c\u66f4\u65b0"),(0,o.kt)("h3",{id:"legacyrendersubtreeintocontainer"},"legacyRenderSubtreeIntoContainer()"),(0,o.kt)("p",null,"\u6839\u636e container \u662f\u5426\u5b58\u5728 root \u533a\u5206\u521d\u59cb\u5316/\u66f4\u65b0\uff0c\u521b\u5efa\u6216\u83b7\u53d6 fiberRoot;"),(0,o.kt)("p",null,"Babel \u4f1a\u628a JSX \u8f6c\u8bd1\u6210\u4e00\u4e2a\u540d\u4e3a React.createElement() \u51fd\u6570\u8c03\u7528,\n\u56e0\u6b64legacyRenderSubtreeIntoContainer \u4e2d\u6253\u5370\u7684children\u5b9e\u9645\u4e0a\u662f\u901a\u8fc7React.createElement()\u5904\u7406\u8fc7\u7684"),(0,o.kt)("p",null,"17\u4e2d\u7684React.createElement\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u751f\u6210react\u7684ast\u6811\n\u5c06\u53c2\u6570\u8bfb\u53d6\u8f6c\u6362\u4e3aast\u6811\u7684\u4e00\u4e9b\u6240\u9700\u53c2\u6570\u5b57\u6bb5,\u6700\u7ec8\u8fd4\u56deast\u6811\u7684\u7ed3\u6784"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"function createElement(type, config, children) {\n    //\u6839\u636e\u4e0a\u9762\u7684\u793a\u4f8b\u4ee3\u7801\uff0ctype=div,config= {className:'red'},children='Click Me'\n  var propName; // Reserved names are extracted\n  var props = {};// \u6211\u4eec\u5e38\u7528\u7684props \u76ee\u524d\u7ec4\u4ef6\n  var key = null;//\u8be5\u7ec4\u4ef6\u7684\u552f\u4e00key\n  var ref = null;// \u6211\u4eec\u7684ref\n  var self = null;\n  var source = null;\n\n  // ...\n  ...\n  // ...\n\n    // \u5f53\u53d1\u73b0arguments\u7684\u53c2\u6570\u5927\u4e8e1\u7684\u65f6\u5019\u3002\u8bf4\u660e\u662f\u6709\u591a\u4e2a\u5144\u5f1f\u5b50\u5143\u7d20\u7684\uff0c\u5982\u679c\u7b49\u4e8e1\u7684\u8bdd\u8bf4\u660e\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n      // \u76f4\u63a5\u5c06props\u7684children\u8bbe\u4e3a\u5f53\u524dchildren\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n    // \u6709\u591a\u4e2a\u5144\u5f1f\u5143\u7d20\u7684\u8bdd\uff0c\u5c06\u5144\u5f1f\u8282\u70b9\u653e\u7f6e\u5728\u4e00\u4e2a\u6570\u7ec4\u91cc\u9762\uff0c\u8d4b\u503c\u7ed9props\u7684children\n    props.children = childArray;\n  } // Resolve default props\n\n  // ...\n  ...\n  // ...\n\n    // ReactElement \u8fd4\u56de\u56de\u6765\u7684\u662f\u6211\u4eec\u6700\u7ec8\u7684ast\u6811\u7684\u7ed3\u6784\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// \u4ece container \u53d6\u51fa _reactRootContainer \u4f5c\u4e3a react \u7684\u4e00\u4e2a\u6839:\nvar maybeRoot = container._reactRootContainer;\n")),(0,o.kt)("p",null,"\u68c0\u67e5 root \u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u5b58\u5728\u5c31\u662f Update\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5c31\u662f\u521d\u59cb\u5316\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"A.\u82e5root\u4e0d\u5b58\u5728\uff1a\n\u8c03\u7528 legacyCreateRootFromDOMContainer(contaiber,forceHydrate) \u521d\u59cb\u5316 root\u3002\n\u5c06 root \u8d4b\u503c\u7ed9 container._reactRootContainer,\u53d6\u51fa root \u4e2d\u7684_internalRoot \u4f5c\u4e3a fiberRoot\u3002\n\nB.\u82e5 root \u5b58\u5728, \u4ece root \u4e2d\u53d6\u51fa fiberRoot:\n  root = maybeRoot;\n\u8c03\u7528 updateContainer(children,fiberRoot,parentComponent,callBack)\n\u6ce8\u610f\uff1a\u8fd9\u91cc callBack \u4f1a\u901a\u8fc7 getPublicRootInstance() \u9012\u5f52\u627e\u5230 fiberRoot \u4e0a\u7b2c\u4e00\u4e2a\u975e HTMlElement \u7ed3\u70b9,\u5e76\u5c06 callback \u7ed1\u5b9a\u5728\u5b83\u4e0a\u8fb9\u3002\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"function render(element, container, callback) {\n    return legacyRenderSubtreeIntoContainer(null, element, container, false, callback); \n}\n\n/*\n\u53ef\u4ee5\u89c1\u5230\u521d\u59cb\u5316\u9636\u6bb5:legacyCreateRootFromDOMContainer \u4e0d\u6279\u91cf\u8c03\u7528 updateContainer\n\nupdate\u9636\u6bb5\uff1a\u76f4\u63a5\u8c03\u7528 updateContainer\n*/\nfunction legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {\n  if (!maybeRoot) {\n    console.log('\u5f00\u59cb\u8c03\u7528--\x3e0-a0:\u521d\u59cb\u5316\u6e32\u67d3')\n    // Initial mount\n    root = legacyCreateRootFromDOMContainer(container, children, parentComponent, callback, forceHydrate);\n  } else {\n    root = maybeRoot;\n\n    if (typeof callback === 'function') {\n      var originalCallback = callback;\n\n      callback = function () {\n        var instance = getPublicRootInstance(root);\n        originalCallback.call(instance);\n      };\n    } // Update\n\n    console.log('\u66f4\u65b0\u6d41\u7a0b--\x3e1-a1:\u5373\u66f4\u65b0')\n    updateContainer(children, root, parentComponent, callback);\n  }\n\n  return getPublicRootInstance(root);\n}\n\n// \u7b2c\u4e00\u6b21\u6e32\u67d3\nlegacyCreateRootFromDOMContainer(){\n      \n  console.log('--\x3e0-a,\u521d\u59cb\u5316\u6e32\u67d3\u4e0d\u6267\u884c\u6279\u91cf\u66f4\u65b0,\u800c\u662f\u6267\u884cflushSync',)\n  flushSync(function () {\n    updateContainer(initialChildren, _root, parentComponent, callback);\n  });\n}\n")),(0,o.kt)("h2",{id:"17\u7248\u672ccreatefiberroot-\u521b\u5efafiberroot\u5bf9\u8c61"},"17\u7248\u672c\uff1acreateFiberRoot \u521b\u5efafiberRoot\u5bf9\u8c61"),(0,o.kt)("p",null,"\u6700\u7ec8\u521b\u5efa\u4e86 fiberRoot \u548c rootFiber\uff1a"),(0,o.kt)("mermaid",{value:"flowchart LR\nA1(createContainer)--\x3eA2(createFiberRoot)--\x3eE12(createHostRootFiber)\nA2--\x3eFiberRootNode"}),(0,o.kt)("h1",{id:"\u4e8c-\u5f00\u542frender"},"\u4e8c. \u5f00\u542frender"),(0,o.kt)("h2",{id:"\u57fa\u7840\u4e24\u5927\u9636\u6bb5render\u548ccommit"},"\u57fa\u7840\uff1a\u4e24\u5927\u9636\u6bb5\uff1arender\u548ccommit"),(0,o.kt)("h3",{id:"\u9996\u6b21\u6e32\u67d3-workinprogress-fiber-tree\u4e2d\u9664\u4e86\u6839\u8282\u70b9\u4e4b\u5916\u6240\u6709\u8282\u70b9\u7684alternate\u90fd\u4e3a\u7a7a"},"\u9996\u6b21\u6e32\u67d3\uff0c workInProgress fiber tree\u4e2d\u9664\u4e86\u6839\u8282\u70b9\u4e4b\u5916\uff0c\u6240\u6709\u8282\u70b9\u7684alternate\u90fd\u4e3a\u7a7a\u3002"),(0,o.kt)("p",null,"\u6240\u4ee5\u5728mount\u65f6\uff0c\u9664\u4e86\u6839\u8282\u70b9fiberRootNode\u4e4b\u5916\uff0c\u5176\u4f59\u8282\u70b9\u8c03\u7528beginWork\u65f6\u53c2\u6570current\u7b49\u4e8enull\u3002"),(0,o.kt)("p",null,"render\u9636\u6bb5\u662f\u5728\u5185\u5b58\u4e2d\u6784\u5efa\u4e00\u68f5\u65b0\u7684fiber\u6811\uff08\u79f0\u4e3aworkInProgress\u6811\uff09,\u6784\u5efa\u8fc7\u7a0b\u662f\u4f9d\u7167\u73b0\u6709fiber\u6811\uff08current\u6811\uff09\u4eceroot\u5f00\u59cb\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u518d\u56de\u6eaf\u5230root\u7684\u8fc7\u7a0b\uff0c",(0,o.kt)("inlineCode",{parentName:"p"},"\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6bcf\u4e2afiber\u8282\u70b9\u90fd\u4f1a\u7ecf\u5386\u4e24\u4e2a\u9636\u6bb5\uff1abeginWork\u548ccompleteWork\u3002")),(0,o.kt)("h3",{id:"update\u65f6"},"update\u65f6"),(0,o.kt)("p",null,"workInProgress fiber tree\u6240\u6709\u8282\u70b9\u90fd\u5b58\u5728\u4e0a\u4e00\u6b21\u66f4\u65b0\u65f6\u7684fiber\u8282\u70b9\uff0c\u6240\u4ee5current !== null\u3002"),(0,o.kt)("p",null,"\u5f53current\u548cworkInProgress\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u65f6,\u53ef\u4ee5\u590d\u7528current\u8282\u70b9\u7684\u5b50\u8282\u70b9\u7684\u4f5c\u4e3aworkInProgress\u7684\u5b50\u8282\u70b9\uff0c\n\u53cd\u4e4b\u5219\u9700\u8981\u8fdb\u5165\u5bf9\u6bd4\uff08diff\uff09\u7684\u6d41\u7a0b\uff0c\u6839\u636e\u6bd4\u5bf9\u7684\u7ed3\u679c\u521b\u5efaworkInProgress\u7684\u5b50\u8282\u70b9\u3002"),(0,o.kt)("p",null,"beginWork\u5728\u521b\u5efafiber\u8282\u70b9\u7684\u8fc7\u7a0b\u4e2d\u4e2d\u4f1a\u4f9d\u8d56\u4e00\u4e2adidReceiveUpdate\u53d8\u91cf\u6765\u6807\u8bc6\u5f53\u524d\u7684current\u662f\u5426\u6709\u66f4\u65b0\u3002\n\u5728\u6ee1\u8db3\u4e0b\u9762\u7684\u51e0\u79cd\u60c5\u51b5\u65f6\uff0cdidReceiveUpdate === false\uff1a"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"\u672a\u4f7f\u7528forceUpdate\uff0c\u4e14oldProps === newProps && workInProgress.type === current.type && \uff01hasLegacyContextChanged() \uff0c\u5373props\u3001fiber.type\u548ccontext\u90fd\u672a\u53d1\u751f\u53d8\u5316")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"\u672a\u4f7f\u7528forceUpdate\uff0c\u4e14!includesSomeLane(renderLanes, updateLanes)\uff0c\u5373\u5f53\u524dfiber\u8282\u70b9\u4f18\u5148\u7ea7\u4f4e\u4e8e\u5f53\u524d\u66f4\u65b0\u7684\u4f18\u5148\u7ea7"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const updateLanes = workInProgress.lanes;\nif (current !== null) {\n  //update\u65f6\n  const oldProps = current.memoizedProps;\n  const newProps = workInProgress.pendingProps;\n  if (\n    oldProps !== newProps ||\n    hasLegacyContextChanged() ||\n    (__DEV__ ? workInProgress.type !== current.type : false)\n  ) {\n    didReceiveUpdate = true;\n  } else if (!includesSomeLane(renderLanes, updateLanes)) {\n    // \u672c\u6b21\u7684\u6e32\u67d3\u4f18\u5148\u7ea7renderLanes\u4e0d\u5305\u542bfiber.lanes, \u8868\u660e\u5f53\u524dfiber\u8282\u70b9\u4f18\u5148\u7ea7\u4f4e\u4e8e\u672c\u6b21\u7684\u6e32\u67d3\u4f18\u5148\u7ea7\uff0c\u4e0d\u9700\u6e32\u67d3\n    didReceiveUpdate = false;\n    //...\n    // \u867d\u7136\u5f53\u524d\u8282\u70b9\u4e0d\u9700\u8981\u66f4\u65b0\uff0c\u4f46\u9700\u8981\u4f7f\u7528bailoutOnAlreadyFinishedWork\u5faa\u73af\u68c0\u6d4b\u5b50\u8282\u70b9\u662f\u5426\u9700\u8981\u66f4\u65b0\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  } else {\n    if ((current.effectTag & ForceUpdateForLegacySuspense) !== NoEffect) {\n      // forceUpdate\u4ea7\u751f\u7684\u66f4\u65b0\uff0c\u9700\u8981\u5f3a\u5236\u6e32\u67d3\n      didReceiveUpdate = true;\n    } else {\n      didReceiveUpdate = false;\n    }\n  }\n} else {\n  //mount\u65f6\n  //...\n}\n")))}p.isMDXComponent=!0},41771:(e,n,r)=>{r.d(n,{Z:()=>t});const t=r.p+"assets/images/react18-\u51fd\u6570\u8c03\u7528\u68081-42f3ffba1fb000b0e08ecae006d115e6.png"},97296:(e,n,r)=>{r.d(n,{Z:()=>t});const t=r.p+"assets/images/react18-\u51fd\u6570\u8c03\u7528\u68082-7015d72d9ac315e37e89e4d3b703ca60.png"},41286:(e,n,r)=>{r.d(n,{Z:()=>t});const t=r.p+"assets/images/react\u6784\u5efa\u4e09\u4e2a\u9636\u6bb5\u53c2\u8003-27d40456ad9d91ac37f0f096c2661e03.png"}}]);
"use strict";(self.webpackChunkprogramming_technology=self.webpackChunkprogramming_technology||[]).push([[4918],{3905:(n,e,t)=>{t.d(e,{Zo:()=>s,kt:()=>y});var r=t(67294);function c(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){c(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function i(n,e){if(null==n)return{};var t,r,c=function(n,e){if(null==n)return{};var t,r,c={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(c[t]=n[t]);return c}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(c[t]=n[t])}return c}var l=r.createContext({}),p=function(n){var e=r.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},s=function(n){var e=p(n.components);return r.createElement(l.Provider,{value:e},n.children)},u="mdxType",d={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(n,e){var t=n.components,c=n.mdxType,a=n.originalType,l=n.parentName,s=i(n,["components","mdxType","originalType","parentName"]),u=p(t),m=c,y=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return t?r.createElement(y,o(o({ref:e},s),{},{components:t})):r.createElement(y,o({ref:e},s))}));function y(n,e){var t=arguments,c=e&&e.mdxType;if("string"==typeof n||c){var a=t.length,o=new Array(a);o[0]=m;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=n,i[u]="string"==typeof n?n:c,o[1]=i;for(var p=2;p<a;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},89890:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=t(87462),c=(t(67294),t(3905));const a={},o=void 0,i={unversionedId:"C++-V8/C++/\u5f02\u5e38\u5904\u7406",id:"C++-V8/C++/\u5f02\u5e38\u5904\u7406",title:"\u5f02\u5e38\u5904\u7406",description:"c \u5f02\u5e38\u662f\u6307\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u53d1\u751f\u7684\u7279\u6b8a\u60c5\u51b5,\u5f02\u5e38\u63d0\u4f9b\u4e86\u4e00\u79cd\u8f6c\u79fb\u7a0b\u5e8f\u63a7\u5236\u6743\u7684\u65b9\u5f0f\u3002c \u5f02\u5e38\u5904\u7406\u6d89\u53ca\u5230\u4e09\u4e2a\u5173\u952e\u5b57\uff1atry\u3001catch\u3001throw\u3002",source:"@site/programming-tech/C++-V8/C++/21-\u5f02\u5e38\u5904\u7406.md",sourceDirName:"C++-V8/C++",slug:"/C++-V8/C++/\u5f02\u5e38\u5904\u7406",permalink:"/C++-V8/C++/\u5f02\u5e38\u5904\u7406",draft:!1,editUrl:"https://github.com/huiruo/programming-tech-website/edit/main/programming-tech/C++-V8/C++/21-\u5f02\u5e38\u5904\u7406.md",tags:[],version:"current",sidebarPosition:21,frontMatter:{},sidebar:"docs",previous:{title:"\u4fe1\u53f7\u5904\u7406",permalink:"/C++-V8/C++/\u4fe1\u53f7\u5904\u7406"},next:{title:"NextJS",permalink:"/backend/nextjs/"}},l={},p=[{value:"\u629b\u51fa\u5f02\u5e38",id:"\u629b\u51fa\u5f02\u5e38",level:2},{value:"\u6355\u83b7\u5f02\u5e38",id:"\u6355\u83b7\u5f02\u5e38",level:2},{value:"c \u6807\u51c6\u7684\u5f02\u5e38",id:"c-\u6807\u51c6\u7684\u5f02\u5e38",level:2},{value:"\u5b9a\u4e49\u65b0\u7684\u5f02\u5e38",id:"\u5b9a\u4e49\u65b0\u7684\u5f02\u5e38",level:2}],s={toc:p},u="wrapper";function d(n){let{components:e,...t}=n;return(0,c.kt)(u,(0,r.Z)({},s,t,{components:e,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"c \u5f02\u5e38\u662f\u6307\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u53d1\u751f\u7684\u7279\u6b8a\u60c5\u51b5,\u5f02\u5e38\u63d0\u4f9b\u4e86\u4e00\u79cd\u8f6c\u79fb\u7a0b\u5e8f\u63a7\u5236\u6743\u7684\u65b9\u5f0f\u3002c \u5f02\u5e38\u5904\u7406\u6d89\u53ca\u5230\u4e09\u4e2a\u5173\u952e\u5b57\uff1atry\u3001catch\u3001throw\u3002"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-c"},"try\n{\n   // \u4fdd\u62a4\u4ee3\u7801\n}catch( ExceptionName e1 )\n{\n   // catch \u5757\n}catch( ExceptionName e2 )\n{\n   // catch \u5757\n}catch( ExceptionName eN )\n{\n   // catch \u5757\n}\n")),(0,c.kt)("h2",{id:"\u629b\u51fa\u5f02\u5e38"},"\u629b\u51fa\u5f02\u5e38"),(0,c.kt)("p",null,"throw \u8bed\u53e5\u7684\u64cd\u4f5c\u6570\u53ef\u4ee5\u662f\u4efb\u610f\u7684\u8868\u8fbe\u5f0f\uff0c\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u7684\u7c7b\u578b\u51b3\u5b9a\u4e86\u629b\u51fa\u7684\u5f02\u5e38\u7684\u7c7b\u578b\u3002"),(0,c.kt)("p",null,"\u4ee5\u4e0b\u662f\u5c1d\u8bd5\u9664\u4ee5\u96f6\u65f6\u629b\u51fa\u5f02\u5e38\u7684\u5b9e\u4f8b\uff1a"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-c"},'double division(int a, int b)\n{\n   if( b == 0 )\n   {\n      throw "Division by zero condition!";\n   }\n   return (a/b);\n}\n')),(0,c.kt)("h2",{id:"\u6355\u83b7\u5f02\u5e38"},"\u6355\u83b7\u5f02\u5e38"),(0,c.kt)("p",null,"catch \u5757\u8ddf\u5728 try \u5757\u540e\u9762\uff0c\u7528\u4e8e\u6355\u83b7\u5f02\u5e38\u3002\u60a8\u53ef\u4ee5\u6307\u5b9a\u60f3\u8981\u6355\u6349\u7684\u5f02\u5e38\u7c7b\u578b\uff0c\u8fd9\u662f\u7531 catch \u5173\u952e\u5b57\u540e\u7684\u62ec\u53f7\u5185\u7684\u5f02\u5e38\u58f0\u660e\u51b3\u5b9a\u7684\u3002"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-c"},"try\n{\n   // \u4fdd\u62a4\u4ee3\u7801\n}catch( ExceptionName e )\n{\n  // \u5904\u7406 ExceptionName \u5f02\u5e38\u7684\u4ee3\u7801\n}\n")),(0,c.kt)("p",null,"\u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u6355\u83b7\u4e00\u4e2a\u7c7b\u578b\u4e3a ExceptionName \u7684\u5f02\u5e38\u3002\u5982\u679c\u60a8\u60f3\u8ba9 catch \u5757\u80fd\u591f\u5904\u7406 try \u5757\u629b\u51fa\u7684\u4efb\u4f55\u7c7b\u578b\u7684\u5f02\u5e38\uff0c\u5219\u5fc5\u987b\u5728\u5f02\u5e38\u58f0\u660e\u7684\u62ec\u53f7\u5185\u4f7f\u7528\u7701\u7565\u53f7 ...\uff0c\u5982\u4e0b\u6240\u793a\uff1a"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-c"},"try\n{\n   // \u4fdd\u62a4\u4ee3\u7801\n}catch(...)\n{\n  // \u80fd\u5904\u7406\u4efb\u4f55\u5f02\u5e38\u7684\u4ee3\u7801\n}\n")),(0,c.kt)("p",null,"\u4e0b\u9762\u662f\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u629b\u51fa\u4e00\u4e2a\u9664\u4ee5\u96f6\u7684\u5f02\u5e38\uff0c\u5e76\u5728 catch \u5757\u4e2d\u6355\u83b7\u8be5\u5f02\u5e38\u3002"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\nusing namespace std;\n \ndouble division(int a, int b)\n{\n   if( b == 0 )\n   {\n      throw "Division by zero condition!";\n   }\n   return (a/b);\n}\n \nint main ()\n{\n   int x = 50;\n   int y = 0;\n   double z = 0;\n \n   try {\n     z = division(x, y);\n     cout << z << endl;\n   }catch (const char* msg) {\n     cerr << msg << endl;\n   }\n \n   return 0;\n}\n\n// \u7531\u4e8e\u6211\u4eec\u629b\u51fa\u4e86\u4e00\u4e2a\u7c7b\u578b\u4e3a const char* \u7684\u5f02\u5e38\uff0c\u56e0\u6b64\uff0c\u5f53\u6355\u83b7\u8be5\u5f02\u5e38\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u5728 catch \u5757\u4e2d\u4f7f\u7528 const char*\u3002\u5f53\u4e0a\u9762\u7684\u4ee3\u7801\u88ab\u7f16\u8bd1\u548c\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u4e0b\u5217\u7ed3\u679c\uff1a\n/*\nDivision by zero condition!\n*/\n')),(0,c.kt)("h2",{id:"c-\u6807\u51c6\u7684\u5f02\u5e38"},"c \u6807\u51c6\u7684\u5f02\u5e38"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"c \u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u6807\u51c6\u7684\u5f02\u5e38\uff0c\u5b9a\u4e49\u5728 <exception> \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u6807\u51c6\u7684\u5f02\u5e38\u3002\n")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"std::exception  \u8be5\u5f02\u5e38\u662f\u6240\u6709\u6807\u51c6 c \u5f02\u5e38\u7684\u7236\u7c7b\u3002\nstd::bad_alloc  \u8be5\u5f02\u5e38\u53ef\u4ee5\u901a\u8fc7 new \u629b\u51fa\u3002\nstd::bad_cast   \u8be5\u5f02\u5e38\u53ef\u4ee5\u901a\u8fc7 dynamic_cast \u629b\u51fa\u3002\nstd::bad_typeid \u8be5\u5f02\u5e38\u53ef\u4ee5\u901a\u8fc7 typeid \u629b\u51fa\u3002\nstd::bad_exception  \u8fd9\u5728\u5904\u7406 c \u7a0b\u5e8f\u4e2d\u65e0\u6cd5\u9884\u671f\u7684\u5f02\u5e38\u65f6\u975e\u5e38\u6709\u7528\u3002\nstd::logic_error    \u7406\u8bba\u4e0a\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6\u4ee3\u7801\u6765\u68c0\u6d4b\u5230\u7684\u5f02\u5e38\u3002\nstd::domain_error   \u5f53\u4f7f\u7528\u4e86\u4e00\u4e2a\u65e0\u6548\u7684\u6570\u5b66\u57df\u65f6\uff0c\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38\u3002\nstd::invalid_argument   \u5f53\u4f7f\u7528\u4e86\u65e0\u6548\u7684\u53c2\u6570\u65f6\uff0c\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38\u3002\nstd::length_error   \u5f53\u521b\u5efa\u4e86\u592a\u957f\u7684 std::string \u65f6\uff0c\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38\u3002\nstd::out_of_range   \u8be5\u5f02\u5e38\u53ef\u4ee5\u901a\u8fc7\u65b9\u6cd5\u629b\u51fa\uff0c\u4f8b\u5982 std::vector \u548c std::bitset<>::operator[]()\u3002\nstd::runtime_error  \u7406\u8bba\u4e0a\u4e0d\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6\u4ee3\u7801\u6765\u68c0\u6d4b\u5230\u7684\u5f02\u5e38\u3002\nstd::overflow_error \u5f53\u53d1\u751f\u6570\u5b66\u4e0a\u6ea2\u65f6\uff0c\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38\u3002\nstd::range_error    \u5f53\u5c1d\u8bd5\u5b58\u50a8\u8d85\u51fa\u8303\u56f4\u7684\u503c\u65f6\uff0c\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38\u3002\nstd::underflow_error    \u5f53\u53d1\u751f\u6570\u5b66\u4e0b\u6ea2\u65f6\uff0c\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38\u3002\n")),(0,c.kt)("h2",{id:"\u5b9a\u4e49\u65b0\u7684\u5f02\u5e38"},"\u5b9a\u4e49\u65b0\u7684\u5f02\u5e38"),(0,c.kt)("p",null,"\u901a\u8fc7\u7ee7\u627f\u548c\u91cd\u8f7d exception \u7c7b\u6765\u5b9a\u4e49\u65b0\u7684\u5f02\u5e38\u3002\u4e0b\u9762\u7684\u5b9e\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528 std::exception \u7c7b\u6765\u5b9e\u73b0\u81ea\u5df1\u7684\u5f02\u5e38\uff1a"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\n#include <exception>\nusing namespace std;\n \nstruct MyException : public exception\n{\n  const char * what () const throw ()\n  {\n    return "c Exception";\n  }\n};\n \nint main()\n{\n  try\n  {\n    throw MyException();\n  }\n  catch(MyException& e)\n  {\n    std::cout << "MyException caught" << std::endl;\n    std::cout << e.what() << std::endl;\n  }\n  catch(std::exception& e)\n  {\n    //\u5176\u4ed6\u7684\u9519\u8bef\n  }\n}\n/*\nMyException caught\nc Exception\n*/\n')))}d.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkprogramming_technology=self.webpackChunkprogramming_technology||[]).push([[2516],{3905:(n,e,t)=>{t.d(e,{Zo:()=>d,kt:()=>v});var r=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function l(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?l(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},l=Object.keys(n);for(r=0;r<l.length;r++)t=l[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(r=0;r<l.length;r++)t=l[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var u=r.createContext({}),a=function(n){var e=r.useContext(u),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},d=function(n){var e=a(n.components);return r.createElement(u.Provider,{value:e},n.children)},c="mdxType",h={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},p=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,l=n.originalType,u=n.parentName,d=s(n,["components","mdxType","originalType","parentName"]),c=a(t),p=i,v=c["".concat(u,".").concat(p)]||c[p]||h[p]||l;return t?r.createElement(v,o(o({ref:e},d),{},{components:t})):r.createElement(v,o({ref:e},d))}));function v(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var l=t.length,o=new Array(l);o[0]=p;var s={};for(var u in e)hasOwnProperty.call(e,u)&&(s[u]=e[u]);s.originalType=n,s[c]="string"==typeof n?n:i,o[1]=s;for(var a=2;a<l;a++)o[a]=t[a];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},22601:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>u,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>a});var r=t(87462),i=(t(67294),t(3905));const l={},o=void 0,s={unversionedId:"qu/\u94fe\u8868/\u94fe\u8868",id:"qu/\u94fe\u8868/\u94fe\u8868",title:"\u94fe\u8868",description:"\u94fe\u8868\u76f8\u5bf9\u6570\u7ec4\u4f18\u70b9",source:"@site/programming-tech/qu/04-\u94fe\u8868/01-\u94fe\u8868.md",sourceDirName:"qu/04-\u94fe\u8868",slug:"/qu/\u94fe\u8868/\u94fe\u8868",permalink:"/qu/\u94fe\u8868/\u94fe\u8868",draft:!1,editUrl:"https://github.com/huiruo/programming-tech-website/edit/main/programming-tech/qu/04-\u94fe\u8868/01-\u94fe\u8868.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{}},u={},a=[{value:"\u94fe\u8868\u76f8\u5bf9\u6570\u7ec4\u4f18\u70b9",id:"\u94fe\u8868\u76f8\u5bf9\u6570\u7ec4\u4f18\u70b9",level:2},{value:"\u94fe\u8868",id:"\u94fe\u8868",level:2},{value:"\u5355\u5411\u94fe\u8868",id:"\u5355\u5411\u94fe\u8868",level:3},{value:"\u53cc\u5411\u94fe\u8868\u4ecb\u7ecd",id:"\u53cc\u5411\u94fe\u8868\u4ecb\u7ecd",level:3},{value:"\u53cc\u5411\u94fe\u8868\u793a\u610f\u56fe\uff1a",id:"\u53cc\u5411\u94fe\u8868\u793a\u610f\u56fe",level:3},{value:"\u5faa\u73af\u94fe\u8868",id:"\u5faa\u73af\u94fe\u8868",level:3},{value:"\u57fa\u7840\u94fe\u8868\u5b9e\u73b01",id:"\u57fa\u7840\u94fe\u8868\u5b9e\u73b01",level:2},{value:"02-\u53cc\u5411\u94fe\u8868\u5b9e\u73b0",id:"02-\u53cc\u5411\u94fe\u8868\u5b9e\u73b0",level:2},{value:"02-\u94fe\u8868\u5b9e\u73b0Stack",id:"02-\u94fe\u8868\u5b9e\u73b0stack",level:2},{value:"\u961f\u5217\u94fe\u8868\u5b9e\u73b0",id:"\u961f\u5217\u94fe\u8868\u5b9e\u73b0",level:2}],d={toc:a},c="wrapper";function h(n){let{components:e,...t}=n;return(0,i.kt)(c,(0,r.Z)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"\u94fe\u8868\u76f8\u5bf9\u6570\u7ec4\u4f18\u70b9"},"\u94fe\u8868\u76f8\u5bf9\u6570\u7ec4\u4f18\u70b9"),(0,i.kt)("p",null,"\u6570\u7ec4\u6570\u636e\u7ed3\u6784\u6709\u4e00\u4e2a\u7f3a\u70b9\uff1a\uff08\u5728\u5927\u591a\u6570\u8bed\u8a00\u4e2d\uff09\u6570\u7ec4\u7684\u5927\u5c0f\u662f\u56fa\u5b9a\u7684\uff0c\u4ece\u6570\u7ec4\u7684\u8d77\u70b9\u6216\u4e2d\u95f4\u63d2\u5165\u6216\u79fb\u9664\u9879\u7684\u6210\u672c\u5f88\u9ad8\uff0c\u56e0\u4e3a\u9700\u8981\u79fb\u52a8\u5143\u7d20\u3002"),(0,i.kt)("p",null,"\u94fe\u8868\u5b58\u50a8\u6709\u5e8f\u7684\u5143\u7d20\u96c6\u5408\uff0c\u4f46\u4e0d\u540c\u4e8e\u6570\u7ec4\uff0c\u94fe\u8868\u4e2d\u7684\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u5e76\u4e0d\u662f\u8fde\u7eed\u653e\u7f6e\u7684\u3002\n\u6bcf\u4e2a\u5143\u7d20\u7531\u4e00\u4e2a\u5b58\u50a8\u5143\u7d20\u672c\u8eab\u7684\u8282\u70b9\u548c\u4e00\u4e2a\u6307\u5411\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u5f15\u7528\uff08\u4e5f\u79f0\u6307\u9488\u6216\u94fe\u63a5\uff09\u7ec4\u6210\u3002"),(0,i.kt)("p",null,"\u94fe\u8868\u7684\u4e00\u4e2a\u597d\u5904\u5728\u4e8e\uff0c\u6dfb\u52a0\u6216\u79fb\u9664\u5143\u7d20\u7684\u65f6\u5019\u4e0d\u9700\u8981\u79fb\u52a8\u5176\u4ed6\u5143\u7d20\u3002\u7136\u800c\uff0c\u94fe\u8868\u9700\u8981\u4f7f\u7528\u6307\u9488,\u8981\u60f3\u8bbf\u95ee\u94fe\u8868\u4e2d\u95f4\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\n\u5219\u9700\u8981\u4ece\u8d77\u70b9\uff08\u8868\u5934\uff09\u5f00\u59cb\u8fed\u4ee3\u94fe\u8868\u76f4\u5230\u627e\u5230\u6240\u9700\u7684\u5143\u7d20\u3002 \u5728\u6570\u7ec4\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u4efb\u4f55\u4f4d\u7f6e\u7684\u4efb\u4f55\u5143\u7d20\uff0c"),(0,i.kt)("h2",{id:"\u94fe\u8868"},"\u94fe\u8868"),(0,i.kt)("p",null,"\u5728\u7ed3\u6784\u5316\u5b58\u50a8 \u6570\u636e\u96c6\u65f6\u5019\uff0c\u94fe\u8868\u662f\u6570\u7ec4\u7684\u4e00\u79cd\u91cd\u8981\u7684\u66ff\u4ee3\u65b9\u5f0f\u3002"),(0,i.kt)("p",null,"\u5b9a\u4e49\uff1a\n\u57fa\u7840\u6570\u636e\u7ed3\u6784,\u4e00\u79cd\u9012\u5f52\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u6216\u5219\u4e3anull,\u6216\u5219\u6307\u5411\u4e00\u4e2a\u8282\u70b9\u7684\u5f15\u7528\uff0c\u8be5node\u542b\u6709\u4e00\u4e2a\u6cdb\u578b\u7684\u5143\u7d20\u548c\u4e00\u4e2a\u6307\u5411\u53e6\u4e00\u6761\u94fe\u8868\u7684\u5f15\u7528\u3002"),(0,i.kt)("p",null,"\u8282\u70b9\uff1a\u662f\u4e00\u4e2a\u53ef\u80fd\u542b\u6709\u4efb\u610f\u7c7b\u578b\u6570\u636e\u7684\u62bd\u8c61\u5b9e\u4f53\uff0c\u5b83\u6240\u5305\u542b\u7684 \u6307\u5411\u8282\u70b9\u7684\u5e94\u7528 \u663e\u793a\u4e86\u5b83\u5728\u6784\u9020\u94fe\u8868\u4e4b\u4e2d\u7684\u4f5c\u7528\u3002"),(0,i.kt)("p",null,"\u548c\u9012\u5f52\u7a0b\u5e8f\u4e00\u6837\uff0c\u9012\u5f52\u6570\u636e\u7ed3\u6784\u7684\u6982\u5ff5\u4e00\u5f00\u59cb\u4e5f\u6bd4\u8f83\u8d39\u89e3\uff0c\u4f46\u5176\u5b9e\u5b83\u7684\u7b80\u6d01\u6027\u8d4b\u4e88\u4e86\u5b83\u5de8\u5927\u7684\u4ef7\u503c\u3002"),(0,i.kt)("h3",{id:"\u5355\u5411\u94fe\u8868"},"\u5355\u5411\u94fe\u8868"),(0,i.kt)("p",null,"\u5355\u5411\u94fe\u8868\u548c\u53cc\u5411\u94fe\u8868\uff0c\u5b83\u4eec\u6700\u5927\u7684\u533a\u522b\u5728\u4e8e\u8282\u70b9\u662f\u5426\u5177\u6709\u6307\u5411\u524d\u9a71\u8282\u70b9\u7684\u5f15\u7528\u3002"),(0,i.kt)("p",null,"\u5355\u5411\u94fe\u8868\u4e2d\uff0c\u6bcf\u4e2a\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u5176\u540e\u7ee7\u8282\u70b9\u3002\u56e0\u6b64\uff0c\u5982\u679c\u8981\u8bbf\u95ee\u67d0\u4e2a\u8282\u70b9\u7684\u524d\u9a71\u8282\u70b9\uff0c\u9700\u8981\u4ece\u5934\u8282\u70b9\u5f00\u59cb\u904d\u5386\u6574\u4e2a\u94fe\u8868\uff0c\u76f4\u5230\u627e\u5230\u76ee\u6807\u8282\u70b9\u7684\u524d\u4e00\u4e2a\u8282\u70b9\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"+--------+    +--------+    +--------+\n| Node 1 | -> | Node 2 | -> | Node 3 | -> NULL\n+--------+    +--------+    +--------+\n")),(0,i.kt)("h3",{id:"\u53cc\u5411\u94fe\u8868\u4ecb\u7ecd"},"\u53cc\u5411\u94fe\u8868\u4ecb\u7ecd"),(0,i.kt)("p",null,"\u53cc\u5411\u94fe\u8868\u548c\u666e\u901a\u94fe\u8868\u7684\u533a\u522b\u5728\u4e8e\uff0c\u5728\u94fe\u8868\u4e2d\uff0c\u4e00\u4e2a\u8282\u70b9\u53ea\u6709\u94fe\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u94fe\u63a5\uff1b\n\u800c\u5728\u53cc\u5411\u94fe\u8868\u4e2d\uff0c\u94fe\u63a5\u662f\u53cc\u5411\u7684\uff1a\u4e00\u4e2a\u94fe\u5411\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u53e6\u4e00\u4e2a\u94fe\u5411\u524d\u4e00\u4e2a\u5143\u7d20"),(0,i.kt)("p",null,"\u5355\u94fe\u8868\u5bfb\u627e\u67d0\u7ed3\u70b9\u7684\u524d\u9a71\u7ed3\u70b9\u65f6\uff0c\u5fc5\u987b\u904d\u5386\u4e00\u904d\u94fe\u8868\uff0c\u6700\u574f\u7684\u65f6\u95f4\u590d\u6742\u5ea6O(n)\n\u5355\u5411\u94fe\u8868\u4e2d\uff0c\u5982\u679c\u8fed\u4ee3\u65f6\u9519\u8fc7\u4e86\u8981\u627e\u7684\u5143\u7d20\uff0c\u5c31\u9700\u8981\u56de\u5230\u8d77\u70b9\uff0c\u91cd\u65b0\u5f00\u59cb\u8fed\u4ee3\u3002\n\u800c\u53cc\u5411\u94fe\u8868\u53ef\u4ee5\u76f4\u63a5\u5bfb\u627e\u67d0\u7ed3\u70b9\u7684\u524d\u9a71\u7ed3\u70b9,\u8fd9\u662f\u53cc\u5411\u94fe\u8868\u7684\u4e00\u4e2a\u4f18\u52bf\u3002"),(0,i.kt)("h3",{id:"\u53cc\u5411\u94fe\u8868\u793a\u610f\u56fe"},"\u53cc\u5411\u94fe\u8868\u793a\u610f\u56fe\uff1a"),(0,i.kt)("p",null,"\u53cc\u5411\u94fe\u8868\u4e2d\uff0c\u6bcf\u4e2a\u8282\u70b9\u6709\u4e24\u4e2a\u6307\u9488\uff0c\u4e00\u4e2a\u6307\u5411\u5176\u540e\u7ee7\u8282\u70b9\uff0c\u53e6\u4e00\u4e2a\u6307\u5411\u5176\u524d\u9a71\u8282\u70b9\u3002\u56e0\u6b64\uff0c\u5982\u679c\u8981\u8bbf\u95ee\u67d0\u4e2a\u8282\u70b9\u7684\u524d\u9a71\u8282\u70b9\uff0c\u53ea\u9700\u8981\u4f7f\u7528\u8be5\u8282\u70b9\u7684\u524d\u9a71\u6307\u9488\u5373\u53ef\uff0c\u65e0\u9700\u904d\u5386\u6574\u4e2a\u94fe\u8868\u3002\u8fd9\u79cd\u7279\u6027\u4f7f\u5f97\u53cc\u5411\u94fe\u8868\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\u6bd4\u5355\u5411\u94fe\u8868\u66f4\u52a0\u9ad8\u6548\u3002"),(0,i.kt)("p",null,"\u603b\u4f53\u6765\u8bf4\uff0c\u5355\u5411\u94fe\u8868\u6bd4\u53cc\u5411\u94fe\u8868\u66f4\u7b80\u5355\uff0c\u66f4\u6613\u4e8e\u5b9e\u73b0\uff0c\u4f46\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\u53ef\u80fd\u4f1a\u5e26\u6765\u4e00\u4e9b\u6027\u80fd\u95ee\u9898\u3002\u800c\u53cc\u5411\u94fe\u8868\u5219\u6bd4\u5355\u5411\u94fe\u8868\u66f4\u52a0\u7075\u6d3b\uff0c\u53ef\u4ee5\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u63d0\u9ad8\u8bbf\u95ee\u548c\u64cd\u4f5c\u6548\u7387\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"NULL <-+------+    +------+ -> <-+------\x3e NULL\n       | Node 1 | <-> | Node 2 | <-> | Node 3 |\nNULL <-+------+    +------+ <- +------\x3e NULL\n")),(0,i.kt)("h3",{id:"\u5faa\u73af\u94fe\u8868"},"\u5faa\u73af\u94fe\u8868"),(0,i.kt)("p",null,"\u5faa\u73af\u94fe\u8868\u53ef\u4ee5\u50cf\u94fe\u8868\u4e00\u6837\u53ea\u6709\u5355\u5411\u5f15\u7528\uff0c\u4e5f\u53ef\u4ee5\u50cf\u53cc\u5411\u94fe\u8868\u4e00\u6837\u6709\u53cc\u5411\u5f15\u7528\u3002\n\u5faa\u73af\u94fe\u8868\u548c\u94fe\u8868\u4e4b\u95f4\u552f\u4e00\u7684\u533a\u522b\u5728\u4e8e\uff0c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u6307\u5411\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u6307\u9488\uff08tail.next\uff09\u4e0d\u662f\u5f15\u7528undefined\uff0c\u800c\u662f\u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20\uff08head\uff09"),(0,i.kt)("h2",{id:"\u57fa\u7840\u94fe\u8868\u5b9e\u73b01"},"\u57fa\u7840\u94fe\u8868\u5b9e\u73b01"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"class ListNode {\n  constructor(val, next = null) {\n    this.val = val;\n    this.next = next;\n  }\n}\n\nclass LinkedList {\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.size = 0;\n  }\n\n  append(val) {\n    const node = new ListNode(val);\n\n    if (this.head === null) {\n      this.head = node;\n      this.tail = node;\n    } else {\n      this.tail.next = node;\n      this.tail = node;\n    }\n\n    this.size++;\n  }\n\n  prepend(val) {\n    const node = new ListNode(val);\n\n    if (this.head === null) {\n      this.head = node;\n      this.tail = node;\n    } else {\n      node.next = this.head;\n      this.head = node;\n    }\n\n    this.size++;\n  }\n\n  insertAtIndex(val, index) {\n    if (index < 0 || index > this.size) {\n      throw new Error('Invalid index');\n    }\n\n    if (index === 0) {\n      this.prepend(val);\n      return;\n    }\n\n    if (index === this.size) {\n      this.append(val);\n      return;\n    }\n\n    const node = new ListNode(val);\n    let curr = this.head;\n    let prev = null;\n    let i = 0;\n\n    while (i < index) {\n      prev = curr;\n      curr = curr.next;\n      i++;\n    }\n\n    node.next = curr;\n    prev.next = node;\n    this.size++;\n  }\n\n  removeAtIndex(index) {\n    if (index < 0 || index >= this.size) {\n      throw new Error('Invalid index');\n    }\n\n    let curr = this.head;\n    let prev = null;\n    let i = 0;\n\n    if (index === 0) {\n      this.head = curr.next;\n    } else {\n      while (i < index) {\n        prev = curr;\n        curr = curr.next;\n        i++;\n      }\n\n      prev.next = curr.next;\n\n      if (index === this.size - 1) {\n        this.tail = prev;\n      }\n    }\n\n    this.size--;\n    return curr.val;\n  }\n\n  indexOf(val) {\n    let curr = this.head;\n    let i = 0;\n\n    while (curr !== null) {\n      if (curr.val === val) {\n        return i;\n      }\n\n      curr = curr.next;\n      i++;\n    }\n\n    return -1;\n  }\n\n  toArray() {\n    const arr = [];\n    let curr = this.head;\n\n    while (curr !== null) {\n      arr.push(curr.val);\n      curr = curr.next;\n    }\n\n    return arr;\n  }\n\n  getSize() {\n    return this.size;\n  }\n\n  clear() {\n    this.head = null;\n    this.tail = null;\n    this.size = 0;\n  }\n}\n\n/*\n\u5b9a\u4e49\u4e86\u4e00\u4e2a LinkedList \u7c7b\u6765\u8868\u793a\u5355\u5411\u94fe\u8868\uff0c\u5b83\u5305\u542b\u4e86\u5934\u6307\u9488(head)\u3001\u5c3e\u6307\u9488(tail)\u548c\u94fe\u8868\u7684\u957f\u5ea6(size)\u3002\n\nLinkedList \u7c7b\u4e2d\u7684\u65b9\u6cd5\u5305\u62ec\uff1a\nappend(val)\uff1a\u5728\u94fe\u8868\u672b\u5c3e\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\u3002\nprepend(val)\uff1a\u5728\u94fe\u8868\u5f00\u5934\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\u3002\ninsertAtIndex(val, index)\uff1a\u5728\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\n*/\n\nconst ll = new LinkedList();\nll.append(1);\nll.append(2);\nll.prepend(0);\nll.insertAtIndex(3, 3);\nconsole.log(ll.toArray()); // [0, 1, 2, 3]\nconsole.log(ll.indexOf(2)); // 2\nll.removeAtIndex(2);\nconsole.log(ll.toArray()); // [0, 1, 3]\nconsole.log(ll.getSize()); // 3\nll.clear();\nconsole.log(ll.toArray()); // []\nconsole.log(ll.getSize()); // 0\n")),(0,i.kt)("h2",{id:"02-\u53cc\u5411\u94fe\u8868\u5b9e\u73b0"},"02-\u53cc\u5411\u94fe\u8868\u5b9e\u73b0"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"function defaultEquals(a, b) {\n  return a === b;\n}\n\nclass Node {\n  constructor(element, next) {\n    this.element = element;\n    this.next = next;\n  }\n}\n\n/*\n* \u53cc\u5411\u94fe\u8868\u63d0\u4f9b\u4e86\u4e24\u79cd\u8fed\u4ee3\u7684\u65b9\u6cd5\uff1a\u4ece\u5934\u5230\u5c3e\uff0c\u6216\u8005\u4ece\u5c3e\u5230\u5934\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u4e00\u4e2a\u7279\u5b9a\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u6216\u524d\u4e00\u4e2a\u5143\u7d20\u3002\n* \u4e3a\u4e86\u5b9e\u73b0\u8fd9\u79cd\u884c\u4e3a\uff0c\u8fd8\u9700\u8981\u8ffd\u8e2a\u6bcf\u4e2a\u8282\u70b9\u7684\u524d\u4e00\u4e2a\u8282\u70b9\u3002\u6240\u4ee5\u9664\u4e86Node\u7c7b\u4e2d\u7684element\u548cnext\u5c5e\u6027\uff0c\n* DoubleLinkedList\u4f1a\u4f7f\u7528\u4e00\u4e2a\u7279\u6b8a\u7684\u8282\u70b9\uff0c\u8fd9\u4e2a\u540d\u4e3aDoublyNode\u7684\u8282\u70b9\u6709\u4e00\u4e2a\u53eb\u4f5cprev\u7684\u5c5e\u6027\n* */\nclass DoublyNode extends Node {\n  constructor(element, next, prev) {\n    super(element, next);\n    this.prev = prev; // \u65b0\u589e\u7684\u5c5e\u6027\n  }\n}\n\nclass DoublyLinkedList extends LinkedList {\n  constructor(equalsFn = defaultEquals) {\n    super(equalsFn);\n    // \u4fdd\u5b58\u5bf9\u94fe\u8868\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u5f15\u7528\n    this.tail = undefined;\n  }\n\n  push(element) {\n    const node = new DoublyNode(element);\n    if (this.head == null) {\n      this.head = node;\n      this.tail = node; // NEW\n    } else {\n      // attach to the tail node // NEW\n      this.tail.next = node;\n      node.prev = this.tail;\n      this.tail = node;\n    }\n    this.count++;\n  }\n  /*\n  * \u5411\u53cc\u5411\u94fe\u8868\u4e2d\u63d2\u5165\u4e00\u4e2a\u65b0\u5143\u7d20\u8ddf\uff08\u5355\u5411\uff09\u94fe\u8868\u975e\u5e38\u7c7b\u4f3c\u3002\u533a\u522b\u5728\u4e8e\uff0c\u94fe\u8868\u53ea\u8981\u63a7\u5236\u4e00\u4e2anext\u6307\u9488\uff0c\n  * \u800c\u53cc\u5411\u94fe\u8868\u5219\u8981\u540c\u65f6\u63a7\u5236next\u548cprev\uff08previous\uff0c\u524d\u4e00\u4e2a\uff09\u8fd9\u4e24\u4e2a\u6307\u9488\u3002\n  * */\n  /*\n  * \u7b2c\u4e00\u79cd\u573a\u666f\uff1a\n  * \u5728\u53cc\u5411\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff08\u8d77\u70b9\uff09\u63d2\u5165\u4e00\u4e2a\u65b0\u5143\u7d20\u3002\u5982\u679c\u53cc\u5411\u94fe\u8868\u4e3a\u7a7a\uff08\u884c{1}\uff09\uff0c\u53ea\u9700\u8981\u628ahead\u548ctail\u90fd\u6307\u5411\u8fd9\u4e2a\u65b0\u8282\u70b9\u3002\n  * \u5982\u679c\u4e0d\u4e3a\u7a7a\uff0ccurrent\u53d8\u91cf\u5c06\u662f\u5bf9\u53cc\u5411\u94fe\u8868\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5f15\u7528\u3002\u5c31\u50cf\u6211\u4eec\u5728\u94fe\u8868\u4e2d\u6240\u505a\u7684\uff0c\u628anode.next\u8bbe\u4e3acurrent\uff08\u884c{2}\uff09\uff0c\n  * \u800chead\u5c06\u6307\u5411node\uff08\u884c{4}\u2014\u2014\u5b83\u5c06\u6210\u4e3a\u53cc\u5411\u94fe\u8868\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff09\u3002\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4e3a\u6307\u5411\u4e0a\u4e00\u4e2a\u5143\u7d20\u7684\u6307\u9488\u8bbe\u4e00\u4e2a\u503c\u3002\n  * current.prev\u6307\u9488\u5c06\u7531\u6307\u5411undefined\u53d8\u4e3a\u6307\u5411\u65b0\u5143\u7d20\uff08node\u2014\u2014\u884c{3}\uff09\u3002node.prev\u6307\u9488\u5df2\u7ecf\u662fundefined\uff0c\u56e0\u6b64\u65e0\u987b\u66f4\u65b0\u3002\n  * \n  * \u53e6\u4e00\u79cd\u573a\u666f\uff1a\n  * \u5047\u8bbe\u6211\u4eec\u8981\u5728\u53cc\u5411\u94fe\u8868\u6700\u540e\u6dfb\u52a0\u4e00\u4e2a\u65b0\u5143\u7d20\u3002\u8fd9\u662f\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u56e0\u4e3a\u6211\u4eec\u8fd8\u63a7\u5236\u7740\u6307\u5411\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u6307\u9488\u3002current\u53d8\u91cf\u5c06\u5f15\u7528\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff08\u884c{5}\uff09\uff0c\n  * \u7136\u540e\u5f00\u59cb\u5efa\u7acb\u94fe\u63a5\uff0ccurrent.next\u6307\u9488\uff08\u6307\u5411undefined\uff09\u5c06\u6307\u5411node\uff08\u884c{6}\u2014\u2014\u57fa\u4e8e\u6784\u9020\u51fd\u6570\u7684\u7f18\u6545\uff0cnode.next\u5df2\u7ecf\u6307\u5411\u4e86undefined\uff09\u3002\n  * node.prev\u5c06\u5f15\u7528current\uff08\u884c{7}\uff09\u3002\u6700\u540e\u53ea\u5269\u4e00\u4ef6\u4e8b\u4e86\uff0c\u5c31\u662f\u66f4\u65b0tail\uff0c\u5b83\u5c06\u7531\u6307\u5411current\u53d8\u4e3a\u6307\u5411node\uff08\u884c{8}\uff09\u3002\n  * \n  * \u7136\u540e\u8fd8\u6709\u7b2c\u4e09\u79cd\u573a\u666f\uff1a\u5728\u53cc\u5411\u94fe\u8868\u4e2d\u95f4\u63d2\u5165\u4e00\u4e2a\u65b0\u5143\u7d20\u3002\u5c31\u50cf\u6211\u4eec\u5728\u4e4b\u524d\u7684\u65b9\u6cd5\u4e2d\u6240\u505a\u7684\uff0c\u8fed\u4ee3\u53cc\u5411\u94fe\u8868\uff0c\u76f4\u5230\u8981\u627e\u7684\u4f4d\u7f6e\uff08\u884c{9}\uff09\u3002\n  * getElementAt\u65b9\u6cd5\u662f\u4eceLinkedList\u7c7b\u4e2d\u7ee7\u627f\u7684\uff0c\u4e0d\u9700\u8981\u91cd\u5199\u4e00\u904d\u3002\u6211\u4eec\u5c06\u5728current\uff08\u884c{10}\uff09\u548cprevious\u5143\u7d20\u4e4b\u95f4\u63d2\u5165\u65b0\u5143\u7d20\u3002\u9996\u5148\uff0c\n  * node.next\u5c06\u6307\u5411current\uff08\u884c{11}\uff09\uff0c\u800cprevious.next\u5c06\u6307\u5411node\uff08\u884c{12}\uff09\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u4e22\u5931\u8282\u70b9\u4e4b\u95f4\u7684\u94fe\u63a5\u3002\n  * \u7136\u540e\u9700\u8981\u5904\u7406\u6240\u6709\u7684\u94fe\u63a5\uff1acurrent.prev\u5c06\u6307\u5411node\uff08\u884c{13}\uff09\uff0c\u800cnode.prev\u5c06\u6307\u5411previous\uff08\u884c{14}\uff09\u3002\n  * */\n  insert(element, index) {\n    if (index >= 0 && index <= this.count) {\n      const node = new DoublyNode(element);\n      let current = this.head;\n      if (index === 0) {\n        if (this.head == null) { // NEW\n          this.head = node;\n          this.tail = node; // NEW\n        } else {\n          node.next = this.head;\n          this.head.prev = node; // NEW\n          this.head = node;\n        }\n      } else if (index === this.count) { // last item NEW\n        current = this.tail;\n        current.next = node;\n        node.prev = current;\n        this.tail = node;\n      } else {\n        const previous = this.getElementAt(index - 1);\n        current = previous.next;\n        node.next = current;\n        previous.next = node;\n        current.prev = node; // NEW\n        node.prev = previous; // NEW\n      }\n      this.count++;\n      return true;\n    }\n    return false;\n  }\n  // \u4ece\u53cc\u5411\u94fe\u8868\u4e2d\u79fb\u9664\u5143\u7d20\u8ddf\u94fe\u8868\u975e\u5e38\u7c7b\u4f3c\u3002\u552f\u4e00\u7684\u533a\u522b\u5c31\u662f\uff0c\u8fd8\u9700\u8981\u8bbe\u7f6e\u524d\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6307\u9488\u3002\n  /*\n  * \u6211\u4eec\u9700\u8981\u5904\u7406\u4e09\u79cd\u573a\u666f\uff1a\u4ece\u5934\u90e8\u3001\u4ece\u4e2d\u95f4\u548c\u4ece\u5c3e\u90e8\u79fb\u9664\u4e00\u4e2a\u5143\u7d20\u3002\n  * \n  * \u6211\u4eec\u6765\u770b\u770b\u5982\u4f55\u79fb\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002current\u53d8\u91cf\u662f\u5bf9\u53cc\u5411\u94fe\u8868\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5f15\u7528\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u60f3\u79fb\u9664\u7684\u5143\u7d20\u3002\n  * \u6211\u4eec\u9700\u8981\u505a\u7684\u5c31\u662f\u6539\u53d8head\u7684\u5f15\u7528\uff0c\u5c06\u5176\u4ececurrent\u6539\u4e3a\u4e0b\u4e00\u4e2a\u5143\u7d20\uff08current.next\u2014\u2014\u884c{1}\uff09\uff0c\n  * \u8fd8\u9700\u8981\u66f4\u65b0current.next\u6307\u5411\u4e0a\u4e00\u4e2a\u5143\u7d20\u7684\u6307\u9488\uff08\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684prev\u6307\u9488\u662fundefined\uff09\u3002\n  * \u56e0\u6b64\uff0c\u628ahead.prev\u7684\u5f15\u7528\u6539\u4e3aundefined\uff08\u884c{3}\u2014\u2014\u56e0\u4e3ahead\u4e5f\u6307\u5411\u53cc\u5411\u94fe\u8868\u4e2d\u65b0\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u4e5f\u53ef\u4ee5\u7528current.next.prev\uff09\u3002\n  * \u7531\u4e8e\u8fd8\u9700\u8981\u63a7\u5236tail\u7684\u5f15\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u68c0\u67e5\u8981\u79fb\u9664\u7684\u5143\u7d20\u662f\u5426\u662f\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5982\u679c\u662f\uff0c\u53ea\u9700\u8981\u628atail\u4e5f\u8bbe\u4e3aundefined\n  * \n  * \u4e0b\u4e00\u79cd\u573a\u666f\u662f\u4ece\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u79fb\u9664\u5143\u7d20\u3002\u65e2\u7136\u5df2\u7ecf\u6709\u4e86\u5bf9\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u5f15\u7528\uff08tail\uff09\uff0c\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u4e3a\u627e\u5230\u5b83\u800c\u8fed\u4ee3\u53cc\u5411\u94fe\u8868\u3002\n  * \u8fd9\u6837\u4e5f\u5c31\u53ef\u4ee5\u628atail\u7684\u5f15\u7528\u8d4b\u7ed9current\u53d8\u91cf\uff08\u884c{4}\uff09\u3002\u63a5\u4e0b\u6765\uff0c\u9700\u8981\u628atail\u7684\u5f15\u7528\u66f4\u65b0\u4e3a\u53cc\u5411\u94fe\u8868\u4e2d\u5012\u6570\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff08\u884c{5}\u2014\u2014current.prev\uff0c\u6216\u8005tail.prev\uff09\u3002\n  * \u65e2\u7136tail\u6307\u5411\u4e86\u5012\u6570\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u5c31\u53ea\u9700\u8981\u628anext\u6307\u9488\u66f4\u65b0\u4e3aundefined\uff08\u884c{6}\u2014\u2014tail.next= null\uff09\u3002\n  * \n  * \u7b2c\u4e09\u79cd\u4e5f\u662f\u6700\u540e\u4e00\u79cd\u573a\u666f\uff1a\u4ece\u53cc\u5411\u94fe\u8868\u4e2d\u95f4\u79fb\u9664\u4e00\u4e2a\u5143\u7d20\u3002\u9996\u5148\u9700\u8981\u8fed\u4ee3\u53cc\u5411\u94fe\u8868\uff0c\u76f4\u5230\u8981\u627e\u7684\u4f4d\u7f6e\uff08\u884c{7}\uff09\u3002current\u53d8\u91cf\u6240\u5f15\u7528\u7684\u5c31\u662f\u8981\u79fb\u9664\u7684\u5143\u7d20\uff08\u884c{7}\uff09\u3002\n  * \u8981\u79fb\u9664\u5b83\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u66f4\u65b0previous.next\u548ccurrent.next.prev\u7684\u5f15\u7528\uff0c\u5728\u53cc\u5411\u94fe\u8868\u4e2d\u8df3\u8fc7\u5b83\u3002\n  * \u56e0\u6b64\uff0cprevious.next\u5c06\u6307\u5411current.next\uff08\u884c{9}\uff09\uff0c\u800ccurrent.next.prev\u5c06\u6307\u5411previous\uff08\u884c{10}\uff09\n  * */\n  removeAt(index) {\n    if (index >= 0 && index < this.count) {\n      let current = this.head;\n      if (index === 0) {\n        this.head = this.head.next;\n        // if there is only one item, then we update tail as well //NEW\n        if (this.count === 1) {\n          // {2}\n          this.tail = undefined;\n        } else {\n          this.head.prev = undefined;\n        }\n      } else if (index === this.count - 1) {\n        // last item //NEW\n        current = this.tail;\n        this.tail = current.prev;\n        this.tail.next = undefined;\n      } else {\n        current = this.getElementAt(index);\n        const previous = current.prev;\n        // link previous with current's next - skip it to remove\n        previous.next = current.next;\n        current.next.prev = previous; // NEW\n      }\n      this.count--;\n      return current.element;\n    }\n    return undefined;\n  }\n  indexOf(element) {\n    let current = this.head;\n    let index = 0;\n    while (current != null) {\n      if (this.equalsFn(element, current.element)) {\n        return index;\n      }\n      index++;\n      current = current.next;\n    }\n    return -1;\n  }\n  getHead() {\n    return this.head;\n  }\n  getTail() {\n    return this.tail;\n  }\n  clear() {\n    super.clear();\n    this.tail = undefined;\n  }\n  toString() {\n    if (this.head == null) {\n      return '';\n    }\n    let objString = `${this.head.element}`;\n    let current = this.head.next;\n    while (current != null) {\n      objString = `${objString},${current.element}`;\n      current = current.next;\n    }\n    return objString;\n  }\n  inverseToString() {\n    if (this.tail == null) {\n      return '';\n    }\n    let objString = `${this.tail.element}`;\n    let previous = this.tail.prev;\n    while (previous != null) {\n      objString = `${objString},${previous.element}`;\n      previous = previous.prev;\n    }\n    return objString;\n  }\n}\n")),(0,i.kt)("h2",{id:"02-\u94fe\u8868\u5b9e\u73b0stack"},"02-\u94fe\u8868\u5b9e\u73b0Stack"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"class Node {\n  constructor(value) {\n    this.value = value;\n    this.next = null;\n  }\n}\n\nclass Stack {\n  constructor() {\n    this.head = null;\n    this.length = 0;\n  }\n\n  push(value) {\n    const node = new Node(value);\n    if (!this.head) {\n      this.head = node;\n    } else {\n      node.next = this.head;\n      this.head = node;\n    }\n    this.length++;\n  }\n\n  pop() {\n    if (!this.head) {\n      return null;\n    }\n    const value = this.head.value;\n    this.head = this.head.next;\n    this.length--;\n    return value;\n  }\n\n  peek() {\n    if (!this.head) {\n      return null;\n    }\n    return this.head.value;\n  }\n\n  isEmpty() {\n    return this.length === 0;\n  }\n\n  size() {\n    return this.length;\n  }\n}\n\nconst stack = new Stack();\n\n// \u6d4b\u8bd5 push \u65b9\u6cd5\nstack.push(1);\nstack.push(2);\nstack.push(3);\n\n// \u6d4b\u8bd5 size \u65b9\u6cd5\nconsole.log(stack.size()); // \u8f93\u51fa\uff1a3\n\n// \u6d4b\u8bd5 peek \u65b9\u6cd5\nconsole.log(stack.peek()); // \u8f93\u51fa\uff1a3\n\n// \u6d4b\u8bd5 pop \u65b9\u6cd5\nconsole.log(stack.pop()); // \u8f93\u51fa\uff1a3\nconsole.log(stack.pop()); // \u8f93\u51fa\uff1a2\nconsole.log(stack.pop()); // \u8f93\u51fa\uff1a1\nconsole.log(stack.pop()); // \u8f93\u51fa\uff1anull\n\n// \u6d4b\u8bd5 isEmpty \u65b9\u6cd5\nconsole.log(stack.isEmpty()); // \u8f93\u51fa\uff1atrue\n")),(0,i.kt)("h2",{id:"\u961f\u5217\u94fe\u8868\u5b9e\u73b0"},"\u961f\u5217\u94fe\u8868\u5b9e\u73b0"))}h.isMDXComponent=!0}}]);
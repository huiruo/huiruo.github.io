"use strict";(self.webpackChunkprogramming_technology=self.webpackChunkprogramming_technology||[]).push([[2006],{3905:(e,r,n)=>{n.d(r,{Zo:()=>u,kt:()=>k});var t=n(67294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function s(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?s(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function a(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},s=Object.keys(e);for(t=0;t<s.length;t++)n=s[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)n=s[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=t.createContext({}),l=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},u=function(e){var r=l(e.components);return t.createElement(c.Provider,{value:r},e.children)},g="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),g=l(n),d=o,k=g["".concat(c,".").concat(d)]||g[d]||p[d]||s;return n?t.createElement(k,i(i({ref:r},u),{},{components:n})):t.createElement(k,i({ref:r},u))}));function k(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var s=n.length,i=new Array(s);i[0]=d;var a={};for(var c in r)hasOwnProperty.call(r,c)&&(a[c]=r[c]);a.originalType=e,a[g]="string"==typeof e?e:o,i[1]=a;for(var l=2;l<s;l++)i[l]=n[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},40418:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var t=n(87462),o=(n(67294),n(3905));const s={},i=void 0,a={unversionedId:"React/beginWork\u7b2c3\u6b65-Reconciliation-\u53cc\u7f13\u5b58-diff",id:"React/beginWork\u7b2c3\u6b65-Reconciliation-\u53cc\u7f13\u5b58-diff",title:"beginWork\u7b2c3\u6b65-Reconciliation-\u53cc\u7f13\u5b58-diff",description:"workInProgress Fiber(\u5185\u5b58\u4e2d\u6784\u5efa\u7684\u6811)\u548ccurrent Fiber--\x3e\u53cc\u7f13\u5b58",source:"@site/programming-tech/React/05-beginWork\u7b2c3\u6b65-Reconciliation-\u53cc\u7f13\u5b58-diff.md",sourceDirName:"React",slug:"/React/beginWork\u7b2c3\u6b65-Reconciliation-\u53cc\u7f13\u5b58-diff",permalink:"/React/beginWork\u7b2c3\u6b65-Reconciliation-\u53cc\u7f13\u5b58-diff",draft:!1,editUrl:"https://github.com/huiruo/programming-tech-website/edit/main/programming-tech/React/05-beginWork\u7b2c3\u6b65-Reconciliation-\u53cc\u7f13\u5b58-diff.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"docs",previous:{title:"render\u9636\u6bb52-completeWork",permalink:"/React/render\u9636\u6bb52-completeWork"},next:{title:"render\u9636\u6bb5\u7ed3\u675f\u540e-\u8fdb\u5165commit\u9636\u6bb5",permalink:"/React/render\u9636\u6bb5\u7ed3\u675f\u540e-\u8fdb\u5165commit\u9636\u6bb5"}},c={},l=[{value:"workInProgress Fiber(\u5185\u5b58\u4e2d\u6784\u5efa\u7684\u6811)\u548ccurrent Fiber--&gt;\u53cc\u7f13\u5b58",id:"workinprogress-fiber\u5185\u5b58\u4e2d\u6784\u5efa\u7684\u6811\u548ccurrent-fiber--\u53cc\u7f13\u5b58",level:2},{value:"\u6027\u80fd\u4f18\u5316\u4e4b1:Fiber\u53cc\u7f13\u5b58",id:"\u6027\u80fd\u4f18\u5316\u4e4b1fiber\u53cc\u7f13\u5b58",level:3},{value:"\u6027\u80fd\u4f18\u5316\u4e4b2:Fiber\u7684\u5b58\u5728\u4f7f\u5f02\u6b65\u53ef\u4e2d\u65ad\u7684\u66f4\u65b0\u6210\u4e3a\u4e86\u53ef\u80fd",id:"\u6027\u80fd\u4f18\u5316\u4e4b2fiber\u7684\u5b58\u5728\u4f7f\u5f02\u6b65\u53ef\u4e2d\u65ad\u7684\u66f4\u65b0\u6210\u4e3a\u4e86\u53ef\u80fd",level:3},{value:"workInProgress fiber tree\uff1a\u5185\u5b58\u4e2d\u6784\u5efa\u7684\u6811\u3002",id:"workinprogress-fiber-tree\u5185\u5b58\u4e2d\u6784\u5efa\u7684\u6811",level:3},{value:"current fiber tree\uff1a\u6b63\u5728\u89c6\u56fe\u5c42\u6e32\u67d3\u7684\u6811\u3002",id:"current-fiber-tree\u6b63\u5728\u89c6\u56fe\u5c42\u6e32\u67d3\u7684\u6811",level:3},{value:"\u53cc\u7f13\u5b58\uff0c\u4ee5current tree\u4e3a\u4e3b\uff0cworkInProgress tree\u4e3a\u8f85",id:"\u53cc\u7f13\u5b58\u4ee5current-tree\u4e3a\u4e3bworkinprogress-tree\u4e3a\u8f85",level:3}],u={toc:l},g="wrapper";function p(e){let{components:r,...n}=e;return(0,o.kt)(g,(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"workinprogress-fiber\u5185\u5b58\u4e2d\u6784\u5efa\u7684\u6811\u548ccurrent-fiber--\u53cc\u7f13\u5b58"},"workInProgress Fiber(\u5185\u5b58\u4e2d\u6784\u5efa\u7684\u6811)\u548ccurrent Fiber--\x3e\u53cc\u7f13\u5b58"),(0,o.kt)("p",null,"\u771f\u5b9edom\u5bf9\u5e94\u5728\u5185\u5b58\u4e2d\u7684Fiber\u8282\u70b9\u5f62\u6210Fiber\u6811:current Fiber"),(0,o.kt)("p",null,"workInProgress Fiber\u548ccurrent Fiber\u8fd9\u4e24\u9897\u6811\u7684\u8282\u70b9\u901a\u8fc7alternate\u76f8\u8fde."),(0,o.kt)("p",null,"performUnitOfWork \u4f5c\u7528\u521b\u5efa\u4e0b\u4e00\u4e2a Fiber \u8282\u70b9\uff0c\u5e76\u8d4b\u503c\u7ed9 workInProgress\uff0c\u540c\u65f6\u628a workInProgress \u4e0e\u5df2\u521b\u5efa\u7684 Fiber \u8282\u70b9\u8fde\u63a5\u8d77\u6765\u6784\u6210 Fiber \u6811\u3002"),(0,o.kt)("h3",{id:"\u6027\u80fd\u4f18\u5316\u4e4b1fiber\u53cc\u7f13\u5b58"},"\u6027\u80fd\u4f18\u5316\u4e4b1:Fiber\u53cc\u7f13\u5b58"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Fiber\u53cc\u7f13\u5b58\u53ef\u4ee5\u5728\u6784\u5efa\u597dwip Fiber\u6811\u4e4b\u540e\u5207\u6362\u6210current Fiber\uff0c\u5185\u5b58\u4e2d\u76f4\u63a5\u4e00\u6b21\u6027\u5207\u6362\uff0c\u63d0\u9ad8\u4e86\u6027\u80fd")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"React\u4e2d\uff0c\u6e32\u67d3\u673a\u5236\u5c31\u662fReact\u4f1a\u8c03\u7528render()\u51fd\u6570\u6784\u5efa\u4e00\u68f5Dom\u6811\uff0c \u5f53\u6211\u4eec\u9700\u8981\u5bf9DOM\u8fdb\u884c\u4e8b\u4ef6\u76d1\u542c\u65f6\uff0c\u9996\u5148\u5bf9VirtualDom\u8fdb\u884c\u4e8b\u4ef6\u76d1\u542c\uff0cVirtualDom\u4f1a\u4ee3\u7406\u539f\u751f\u7684DOM\u4e8b\u4ef6\u4ece\u800c\u505a\u51fa\u54cd\u5e94\u3002\n\nReact\u4e2dworkingProgress Fiber\u6811\u5b58\u5728\u7684\u610f\u4e49\u662f\u4ec0\u4e48?\n\u5728React\u4e2d\u6700\u591a\u4f1a\u540c\u65f6\u5b58\u5728\u4e24\u68f5Fiber\u6811\uff0c\u5f53\u524d\u663e\u793a\u5728\u9875\u9762\u662fcurrent Fiber\u6811\uff0c\u5728\u5185\u5b58\u4e2d\u6784\u5efa\u7684Fiber\u6811\u79f0\u4e3aworkInProgress Fiber\u6811\uff0cworkingProgress Fiber\u8fd9\u68f5\u6811\u662f\u5728\u5185\u5b58\u4e2d\u6784\u5efa\u7684\uff0c\u6784\u5efa\u5b8c\u6210\u624d\u7edf\u4e00\u66ff\u6362\uff0c\u8fd9\u6837\u4e0d\u4f1a\u4ea7\u751f\u4e0d\u5b8c\u5168\u7684\u771f\u5b9edom\u3002\u4e00\u65e6\u66f4\u65b0\u5b8c\u6210\uff0creact\u4f1a\u76f4\u63a5\u5c06current\u6811\u66ff\u6362\u6210workingProgress Fiber\u6811\uff0c\u4ee5\u4fbf\u5feb\u901f\u5b8c\u6210DOM\u7684\u66f4\u65b0\u3002\u4e5f\u662freact\u63d0\u5347\u6027\u80fd\u7684\u4e00\u90e8\u5206\n\n\u56e0\u4e3a workInProgress Fiber \u5728\u66f4\u65b0\u7684\u8fc7\u7a0b\u4e2d\uff0c\u662f\u5728\u5185\u5b58\u4e2d\u6784\u5efa\u7684\uff0c\u6240\u6709\u901f\u5ea6\u662f\u975e\u5e38\u5feb\u7684\uff0c\u5f97\u5230\u6700\u7ec8\u66f4\u65b0\u540e\u7684 Fiber\uff0c\u76f4\u63a5\u66ff\u6362 Current Fiber\u3002\n\ncurrent Fiber \u6811\u6709\u4e00\u4e2a alternate \u5c5e\u6027\u6307\u5411 workInProgress Fiber \u6811\uff0cworkInProgress Fiber \u6811\u5185\u4e5f \u6709\u4e00\u4e2aalternate \u5c5e\u6027\u6307\u5411current Fiber \u6811\n\n\u5728state/props\u53d1\u751f\u6539\u53d8\u7684\u65f6\u5019\uff0crender()\u51fd\u6570\u4f1a\u88ab\u518d\u6b21\u8c03\u7528\u6e32\u67d3\u51fa\u53e6\u5916\u4e00\u68f5\u6811\uff0c\u91cd\u65b0\u6e32\u67d3\u6240\u6709\u7684\u8282\u70b9\uff0c\u6784\u9020\u51fa\u65b0\u7684\u865a\u62dfDom tree\u8ddf\u539f\u6765\u7684Dom tree\u7528Diff\u7b97\u6cd5\u8fdb\u884c\u6bd4\u8f83\uff0c\u627e\u5230\u9700\u8981\u66f4\u65b0\u7684\u5730\u65b9\u6279\u91cf\u6539\u52a8\uff0c\u518d\u6e32\u67d3\u5230\u771f\u5b9e\u7684DOM\u4e0a\uff0c\u7531\u4e8e\u8fd9\u6837\u505a\u5c31\u51cf\u5c11\u4e86\u5bf9Dom\u7684\u9891\u7e41\u64cd\u4f5c\uff0c\u4ece\u800c\u63d0\u5347\u7684\u6027\u80fd\u3002 \n")),(0,o.kt)("h3",{id:"\u6027\u80fd\u4f18\u5316\u4e4b2fiber\u7684\u5b58\u5728\u4f7f\u5f02\u6b65\u53ef\u4e2d\u65ad\u7684\u66f4\u65b0\u6210\u4e3a\u4e86\u53ef\u80fd"},"\u6027\u80fd\u4f18\u5316\u4e4b2:Fiber\u7684\u5b58\u5728\u4f7f\u5f02\u6b65\u53ef\u4e2d\u65ad\u7684\u66f4\u65b0\u6210\u4e3a\u4e86\u53ef\u80fd"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Fiber\u7684\u5b58\u5728\u4f7f\u5f02\u6b65\u53ef\u4e2d\u65ad\u7684\u66f4\u65b0\u6210\u4e3a\u4e86\u53ef\u80fd\uff0c\u4f5c\u4e3a\u5de5\u4f5c\u5355\u5143\uff0c\u53ef\u4ee5\u5728\u65f6\u95f4\u7247\u5185\u6267\u884c\u5de5\u4f5c\uff0c\u6ca1\u65f6\u95f4\u4e86\u4ea4\u8fd8\u6267\u884c\u6743\u7ed9\u6d4f\u89c8\u5668\uff0c\u4e0b\u6b21\u65f6\u95f4\u7247\u7ee7\u7eed\u6267\u884c\u4e4b\u524d\u6682\u505c\u4e4b\u540e\u8fd4\u56de\u7684Fiber")),(0,o.kt)("p",null,"\u4ece\u800c\u4f7f\u5f97\u6d4f\u89c8\u5668\u5904\u7406\u65f6\u5019\u53ef\u4ee5\u5c06\u63a7\u5236\u6743\u4ea4\u51fa\u53bb\uff0c\u907f\u514d\u4e86js\u7ebf\u7a0b\u8fc7\u591a\u5360\u7528\u800c\u963b\u585e\u6e32\u67d3\u7ebf\u7a0b\uff0c\u5b9e\u73b0\u4e86\u66f4\u7ec6\u7c92\u5ea6\u7684\u8c03\u5ea6\uff0c\u5373\u4e3a\uff1a\u534f\u7a0b\u548c\u7ebf\u7a0b\u7684\u8c03\u5ea6"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Fiber\u53ef\u4ee5\u5728reconcile\u7684\u65f6\u5019\u8fdb\u884c\u76f8\u5e94\u7684diff\u66f4\u65b0\uff0c\u8ba9\u6700\u540e\u7684\u66f4\u65b0\u5e94\u7528\u5728\u771f\u5b9e\u8282\u70b9\u4e0a")),(0,o.kt)("h3",{id:"workinprogress-fiber-tree\u5185\u5b58\u4e2d\u6784\u5efa\u7684\u6811"},"workInProgress fiber tree\uff1a\u5185\u5b58\u4e2d\u6784\u5efa\u7684\u6811\u3002"),(0,o.kt)("p",null,"\u66f4\u65b0\u8fc7\u7a0b\u4e2d\u6784\u5efa\u7684 new fiber tree"),(0,o.kt)("h3",{id:"current-fiber-tree\u6b63\u5728\u89c6\u56fe\u5c42\u6e32\u67d3\u7684\u6811"},"current fiber tree\uff1a\u6b63\u5728\u89c6\u56fe\u5c42\u6e32\u67d3\u7684\u6811\u3002"),(0,o.kt)("p",null,"old fiber tree\uff0c\u5bf9\u5e94\u5f53\u524d\u5c4f\u5e55\u663e\u793a\u7684\u5185\u5bb9\uff0c\u901a\u8fc7\u6839\u8282\u70b9 fiberRootNode \u7684 current \u6307\u9488\u53ef\u4ee5\u8bbf\u95ee\u3002"),(0,o.kt)("h3",{id:"\u53cc\u7f13\u5b58\u4ee5current-tree\u4e3a\u4e3bworkinprogress-tree\u4e3a\u8f85"},"\u53cc\u7f13\u5b58\uff0c\u4ee5current tree\u4e3a\u4e3b\uff0cworkInProgress tree\u4e3a\u8f85"),(0,o.kt)("p",null,"\u53cc\u7f13\u5b58\u673a\u5236\u662fReact\u7ba1\u7406\u66f4\u65b0\u5de5\u4f5c\u7684\u4e00\u79cd\u624b\u6bb5\uff0c\u4e5f\u662f\u63d0\u5347\u7528\u6237\u4f53\u9a8c\u7684\u91cd\u8981\u673a\u5236\u3002"),(0,o.kt)("p",null,"\u5f53React\u5f00\u59cb\u66f4\u65b0\u5de5\u4f5c\u4e4b\u540e\uff0c\u4f1a\u6709\u4e24\u4e2afiber\u6811\uff0c\u4e00\u4e2acurrent\u6811\uff0c\u662f\u5f53\u524d\u663e\u793a\u5728\u9875\u9762\u4e0a\u5185\u5bb9\u5bf9\u5e94\u7684fiber\u6811\u3002\u53e6\u4e00\u4e2a\u662fworkInProgress\u6811\uff0c\u5b83\u662f\u4f9d\u636ecurrent\u6811\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u6784\u5efa\u51fa\u6765\u7684\u65b0\u7684fiber\u6811\uff0c\u6240\u6709\u7684\u66f4\u65b0\u6700\u7ec8\u90fd\u4f1a\u4f53\u73b0\u5728workInProgress\u6811\u4e0a\u3002"),(0,o.kt)("p",null,"\u5f53\u66f4\u65b0\u672a\u5b8c\u6210\u7684\u65f6\u5019\uff0c\u9875\u9762\u4e0a\u59cb\u7ec8\u5c55\u793acurrent\u6811\u5bf9\u5e94\u7684\u5185\u5bb9\uff0c\u5f53\u66f4\u65b0\u7ed3\u675f\u65f6\uff08commit\u9636\u6bb5\u7684\u6700\u540e\uff09\uff0c\u9875\u9762\u5185\u5bb9\u5bf9\u5e94\u7684fiber\u6811\u4f1a\u7531current\u6811\u5207\u6362\u5230workInProgress\u6811\uff0c\u6b64\u65f6workInProgress\u6811\u5373\u6210\u4e3a\u65b0\u7684current\u6811\u3002"),(0,o.kt)("p",null,"\u6700\u7ec8commit\u9636\u6bb5\u5b8c\u6210\u65f6\uff0c\u4e24\u68f5\u6811\u4f1a\u8fdb\u884c\u5207\u6362\u3002\n\u5728\u672a\u66f4\u65b0\u5b8c\u6210\u65f6\u4f9d\u65e7\u5c55\u793a\u65e7\u5185\u5bb9\uff0c\u4fdd\u6301\u4ea4\u4e92\uff0c\u5f53\u66f4\u65b0\u5b8c\u6210\u7acb\u5373\u5207\u6362\u5230\u65b0\u5185\u5bb9\uff0c\u8fd9\u6837\u53ef\u4ee5\u505a\u5230\u65b0\u5185\u5bb9\u548c\u65e7\u5185\u5bb9\u65e0\u7f1d\u5207\u6362\u3002"),(0,o.kt)("p",null,"\u6e32\u67d3\u6d41\u7a0b\u4e2d\uff0c\u5148\u590d\u7528current\u6811\uff08rootFiber\uff09\u7684alternate \u4f5c\u4e3a workInProgress\u3002\n\u6784\u5efaworkInProgress Fiber\u53d1\u751f\u5728createWorkInProgress\u4e2d\uff0c\u5b83\u80fd\u521b\u5efa\u6216\u8005\u590d\u7528Fiber"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"  function createWorkInProgress(current, pendingProps) {\n    var workInProgress = current.alternate;\n    // \u533a\u5206\u662f\u5728mount\u65f6\u8fd8\u662f\u5728update\u65f6\n    if (workInProgress === null) {\n      // We use a double buffering pooling technique because we know that we'll\n      // only ever need at most two versions of a tree. We pool the \"other\" unused\n      // node that we're free to reuse. This is lazily created to avoid allocating\n      // extra objects for things that are never updated. It also allow us to\n      // reclaim the extra memory if needed.\n      console.log('==createWorkInProgress--\x3e,\u6ca1\u6709\u5c31\u521b\u5efa\u4e00\u4e2a')\n      workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);\n      workInProgress.elementType = current.elementType;\n      workInProgress.type = current.type;\n      workInProgress.stateNode = current.stateNode;\n\n      {\n        // DEV-only fields\n        workInProgress._debugSource = current._debugSource;\n        workInProgress._debugOwner = current._debugOwner;\n        workInProgress._debugHookTypes = current._debugHookTypes;\n      }\n      console.log('==createWorkInProgress--\x3e,workInProgress.alternate\u6307\u5b9a\u4e3acurrent')\n      workInProgress.alternate = current;\n      current.alternate = workInProgress;\n    } else {\n      // \u590d\u7528\u5c5e\u6027\n      workInProgress.pendingProps = pendingProps; // Needed because Blocks store data on type.\n\n      workInProgress.type = current.type; // We already have an alternate.\n      // Reset the effect tag.\n\n      workInProgress.flags = NoFlags; // The effects are no longer valid.\n\n      workInProgress.subtreeFlags = NoFlags;\n      workInProgress.deletions = null;\n\n      {\n        // We intentionally reset, rather than copy, actualDuration & actualStartTime.\n        // This prevents time from endlessly accumulating in new commits.\n        // This has the downside of resetting values for different priority renders,\n        // But works for yielding (the common case) and should support resuming.\n        workInProgress.actualDuration = 0;\n        workInProgress.actualStartTime = -1;\n      }\n    } // Reset all effects except static ones.\n    // Static effects are not specific to a render.\n\n\n    workInProgress.flags = current.flags & StaticMask;\n    // \u590d\u7528\u5c5e\u6027\n    workInProgress.childLanes = current.childLanes;\n    workInProgress.lanes = current.lanes;\n    workInProgress.child = current.child;\n    workInProgress.memoizedProps = current.memoizedProps;\n    workInProgress.memoizedState = current.memoizedState;\n    workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so\n    // it cannot be shared with the current fiber.\n\n    var currentDependencies = current.dependencies;\n    workInProgress.dependencies = currentDependencies === null ? null : {\n      lanes: currentDependencies.lanes,\n      firstContext: currentDependencies.firstContext\n    }; // These will be overridden during the parent's reconciliation\n\n    workInProgress.sibling = current.sibling;\n    workInProgress.index = current.index;\n    workInProgress.ref = current.ref;\n\n    {\n      workInProgress.selfBaseDuration = current.selfBaseDuration;\n      workInProgress.treeBaseDuration = current.treeBaseDuration;\n    }\n\n    {\n      workInProgress._debugNeedsRemount = current._debugNeedsRemount;\n\n      switch (workInProgress.tag) {\n        case IndeterminateComponent:\n        case FunctionComponent:\n        case SimpleMemoComponent:\n          workInProgress.type = resolveFunctionForHotReloading(current.type);\n          break;\n\n        case ClassComponent:\n          workInProgress.type = resolveClassForHotReloading(current.type);\n          break;\n\n        case ForwardRef:\n          workInProgress.type = resolveForwardRefForHotReloading(current.type);\n          break;\n      }\n    }\n\n    return workInProgress;\n  } // Used to reuse a Fiber for a second pass.\n")))}p.isMDXComponent=!0}}]);